# This file is managed by Puppet!

[DEFAULT]
bind_port = <%= @bind_port %>
workers = <%= @num_workers %>
user = swift
<% if @statsd_host -%>
log_statsd_host = <%= @statsd_host %>
log_statsd_sample_rate_factor = <%= @statsd_sample_rate_factor %>
log_statsd_default_sample_rate = <%= @statsd_default_sample_rate %>
<% if @statsd_metric_prefix -%>
log_statsd_metric_prefix = <%= @statsd_metric_prefix %>
<% end -%>
<% end -%>

[pipeline:main]
<% if @auth_backend == 'swauth' -%>
pipeline = rewrite healthcheck cache tempurl swauth cors proxy-logging proxy-server
<% elsif @auth_backend == 'tempauth' -%>
pipeline = rewrite healthcheck cache tempurl tempauth cors proxy-logging proxy-server
<% end -%>

[app:proxy-server]
use = egg:swift#proxy
<% if @auth_backend == 'swauth' -%>
allow_account_management = true
<% elsif @auth_backend == 'tempauth' -%>
account_autocreate = true
<% end -%>

[filter:tempurl]
use = egg:swift#tempurl
# default includes PUT
methods = GET HEAD

<% if @auth_backend == 'swauth' -%>
[filter:swauth]
use = egg:swauth#swauth
token_life = 604800
default_swift_cluster = local#<%= @proxy_address %>/v1
set log_name = swauth
super_admin_key = <%= @super_admin_key %>
<% elsif @auth_backend == 'tempauth' -%>
[filter:tempauth]
use = egg:swift#tempauth
token_life = 604800
user_admin_admin = <%= @super_admin_key %> .admin .reseller_admin <%= @proxy_address %>/v1/AUTH_admin
user_mw_media = <%= @rewrite_password %> .admin <%= @proxy_address %>/v1/AUTH_mw
<% end -%>

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache
memcache_servers = <%= @memcached_servers.join(",") %>
memcache_serialization_support = 2

[filter:cors]
paste.filter_factory = wmf.cors:filter_factory

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:rewrite]
# the auth system turns our login and key into an account / token pair.
# the account remains valid forever, but the token times out.
account = <%= @rewrite_account %>
# the name of the scaler cluster.
thumbhost = <%= @rewrite_thumb_server %>
# upload doesn"t like our User-agent (Python-urllib/2.6), otherwise we could call it using urllib2.urlopen()
user_agent = Mozilla/5.0
# this list is the containers that should be sharded
shard_container_list = <%= @shard_container_list %>
# backend_url_format controls whether we pass the URL through to the thumbhost unmolested
# or mangle it to be consumed by mediawiki.  ms5 takes URLs unmolested, mediawiki wants them
# transformed to something more palatable (specifically, turning http://upload/proj/lang/ into http://lang.proj/
# valid options are 'asis' (leave it alone) and 'sitelang' (change upload to lang.site.org)
backend_url_format = <%= @backend_url_format %>



paste.filter_factory = wmf.rewrite:filter_factory

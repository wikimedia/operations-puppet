#! /bin/sh

### BEGIN INIT INFO
# Provides:          varnishncsa
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start HTTP accelerator log daemon
# Description:       This script provides logging for varnish
### END INIT INFO

# Source function library
. /lib/lsb/init-functions

NAME=varnishncsa
DESC="HTTP accelerator log deamon"
PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/$NAME
UDPLOGGER1=<%= scope.lookupvar('varnish::logging::udplogger1') %>
UDPLOGGER2=<%= scope.lookupvar('varnish::logging::udplogger2') %>
PIDFILE1=/var/run/$NAME/$NAME.$UDPLOGGER1.pid
[ $UDPLOGGER2 ] && PIDFILE2=/var/run/$NAME/$NAME.$UDPLOGGER2.pid
LOGFILE=/var/log/varnish/varnishncsa.log
USER=varnishlog

# Include defaults if available
if [ -f /etc/default/$NAME ] ; then
        . /etc/default/$NAME
fi

# If unset, or set to "0" or "no", exit
if [ -z "${VARNISHNCSA_ENABLED}" ] || \
   [ "${VARNISHNCSA_ENABLED}" = "0" ] || \
   [ "${VARNISHNCSA_ENABLED}" = "no" ]; then
  exit 0;
fi

test -x $DAEMON || exit 0

DAEMON_OPTS1="-n frontend -w $UDPLOGGER1:8420 -D"
[ $UDPLOGGER2 ] && DAEMON_OPTS2="-n frontend -w $UDPLOGGER2:8420 -D"

start_varnishncsa() {
    output=$(/bin/tempfile -s.varnish)
    log_daemon_msg "Starting $DESC" "$NAME"
    create_pid_directory
    if [ $UDPLOGGER2 ]; then
        if start-stop-daemon --start --quiet --pidfile ${PIDFILE1} \
            --chuid $USER --exec ${DAEMON} -- ${DAEMON_OPTS1} -P ${PIDFILE1} \
            > ${output} 2>&1 \
            && start-stop-daemon --start --quiet --pidfile ${PIDFILE2} \
            --chuid $USER --exec ${DAEMON} -- ${DAEMON_OPTS2} -P ${PIDFILE2} \
            >> ${output} 2>&1; then
                log_end_msg 0
        else
            log_end_msg 1
            cat $output
            exit 1
        fi
   else 
        if start-stop-daemon --start --quiet --pidfile ${PIDFILE1} \
            --chuid $USER --exec ${DAEMON} -- ${DAEMON_OPTS1} \
            > ${output} 2>&1; then
                log_end_msg 0
        else
            log_end_msg 1
            cat $output
            exit 1
        fi
    fi
    rm $output
}

stop_varnishncsa(){
    log_daemon_msg "Stopping $DESC" "$NAME"
    if [ $UDPLOGGER2 ]; then
        if start-stop-daemon --stop --quiet --pidfile $PIDFILE1 \
            --retry 10 --exec $DAEMON \
            && start-stop-daemon --stop --quiet --pidfile $PIDFILE2 \
            --retry 10 --exec $DAEMON; then
                log_end_msg 0
        else
	        log_end_msg 1
        fi
    else
        if start-stop-daemon --stop --quiet --pidfile $PIDFILE1 \
            --retry 10 --exec $DAEMON; then
                log_end_msg 0
        else
	        log_end_msg 1
        fi
    fi
}

reload_varnishncsa(){
    log_daemon_msg "Reloading $DESC" "$NAME"
    if [ $UDPLOGGER2 ]; then
        if kill -HUP $(cat $PIDFILE1) >/dev/null 2>&1 \
	    && kill -HUP $(cat $PIDFILE2) >/dev/null 2>&1; then
	    log_end_msg 0
        else
            log_end_msg 1
            exit 1
        fi
    else
        if kill -HUP $(cat $PIDFILE1) >/dev/null 2>&1; then
	    log_end_msg 0
        else
            log_end_msg 1
            exit 1
        fi
    fi
}

status_varnishncsa(){
    if [ $UDPLOGGER2 ]; then
        status_of_proc -p "${PIDFILE1}" "${DAEMON}" "${NAME}" && \
        status_of_proc -p "${PIDFILE2}" "${DAEMON}" "${NAME}"
    else
        status_of_proc -p "${PIDFILE1}" "${DAEMON}" "${NAME}"
    fi
}

create_pid_directory() {
    install -o $USER -g $USER -d $(dirname $PIDFILE1)
}

case "$1" in
    start)
        start_varnishncsa
	;;
    stop)
        stop_varnishncsa
        ;;
    reload)
        reload_varnishncsa
        ;;
    status)
        status_varnishncsa
	exit $?
	;;
    restart|force-reload)
	$0 stop
	$0 start
        ;;
    *)
        log_success_msg "Usage: $0 {start|stop|restart|force-reload|reload}"
        exit 1
        ;;
esac

exit 0

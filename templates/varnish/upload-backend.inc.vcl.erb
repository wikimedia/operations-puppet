# Varnish VCL include file for upload backends

import std;

sub vcl_recv {
	/* Support HTTP PURGE from localhost */
	if (req.request == "PURGE") {
		if (!client.ip ~ purge) {
			error 405 "Denied.";
		# This is a stupid hack to make varnishhtcpd work - it's using a perl mod that sends purge reqs like
		# PURGE http://de.wikipedia.orghttp://de.wikipedia.org/w/index.php
		} elsif (req.url ~ "^http://upload.wikimedia.org") {
			set req.url = regsub ( req.url, "^http://[\w.]+(/.*)", "\1");
			return (lookup);
		} else {
			error 200 "Domain not cached here.";
		}
	}

	if (client.ip !~ wikimedia_nets) {
		error 403 "Access denied";
	}

	if ( req.http.host == "upload.wikimedia.org") {
		return (lookup);
	} else {
		error 403 "Requested target domain not allowed.";
	}
}

sub vcl_fetch {
	# Cache media objects for 30 days by default
	set beresp.ttl = 30d;

	# Stream large objects, > 64 MB
	if (std.integer(beresp.http.Content-Length, 0) > 67108864) {
		set beresp.do_stream = true;
		set beresp.http.X-Varnish-Streaming = "length";
	}
	elsif (beresp.http.Content-Length ~ "^[0-9]{8}") {
		set beresp.do_stream = true;
		set beresp.http.X-Varnish-Streaming = "length (str)";
    }

	// elsif (beresp.http.Content-Type == "application/ogg") {
	// 	set beresp.do_stream = true;
	// 	set beresp.http.X-Varnish-Streaming = "content-type";
	// }
	
	if (beresp.http.Content-Range) {
		/* Varnish itself doesn't ask for ranges, so this must have been
		 * a passed range request
		 */
		set beresp.http.X-Content-Range = beresp.http.Content-Range;
	}
}

sub vcl_miss {
	# Send originals to the Swift cluster
	if ( req.url ~ "^/(wikibooks|wikinews|wikiquote|wikiversity|wikimedia|wikipedia|wikisource|wiktionary)/[^/]+/(archive/)?[0-9a-f]/[0-9a-f][0-9a-f]/" ) {
		set req.backend = swift;
	# Send thumbnails to the Swift cluster
	} elsif (req.url ~ "^/+[^/]+/[^/]+/(thumb|temp)/") {
		set req.backend = swift;
	# math to swift
	} elsif (req.url ~ "^/math/") {
		set req.backend = swift;
	# timeline to swift
	} elsif (req.url ~ "^/(wikibooks|wikinews|wikiquote|wikiversity|wikimedia|wikipedia|wikisource|wiktionary)/[^/]+/timeline/") {
		set req.backend = swift;
	}

	/* Convert range requests into pass when over a certain threshold */
	if (req.http.Range
		&& (std.integer(regsub(req.http.Range, "^bytes=([0-9])*-)", "\1") > 67108864
			|| req.http.range ~ "^bytes=([0-9]{8})-")) {
				set bereq.http.Range = req.http.Range;
				return (pass);
	}
}

sub vcl_deliver {
	if (resp.http.X-Content-Range) {
		set resp.http.Content-Range = resp.http.X-Content-Range;
		remove resp.http.X-Content-Range;
	}
}
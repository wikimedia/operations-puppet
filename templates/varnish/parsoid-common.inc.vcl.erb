// Varnish VCL include file shared between Parsoid front- and backends

sub vcl_recv {
	if (req.http.Host ~ "cxserver" ) {
		set req.backend = cxserver_backend;
		return (pass);
	}
	if (req.http.Host ~ "citoid" ) {
		set req.backend = citoid_backend;
		return (pass);
	}
	if (req.http.Host ~ "graphoid" ) {
		set req.backend = graphoid_backend;
		return (pass);
	}
	if (req.http.Host ~ "restbase" || req.http.Host ~ "rest\." ) {
		set req.backend = restbase_backend;
		return (pass);
	}
	// Clamp the host header to 'parsoid'
	set req.http.host = "parsoid";

	// Support HTTP PURGE
	if (req.request == "PURGE") {
		set req.hash_ignore_busy = true;
		return (lookup);
	}
	// Enable force-refresh
	// See https://www.varnish-cache.org/trac/wiki/VCLExampleEnableForceRefresh
	if (req.http.Cache-Control ~ "no-cache") {
		set req.hash_always_miss = true;
	}

	// Do not wait on concurrent (possibly actually fetching) requests for
	// only-if-cached.  One would think this could be backend-only, but it
	// needs to happen in the frontend as well for the same reason
	// (frontend stalling an only-if-cached miss fetch from the backend to
	// coalesce with a non-only-if-cached miss fetch from the backend)
	if (req.http.Cache-Control ~ "only-if-cached") {
		set req.hash_ignore_busy = true;
		return (lookup);  // skip default vcl_recv which can generate
		                  // pass in some cases...
	}
}

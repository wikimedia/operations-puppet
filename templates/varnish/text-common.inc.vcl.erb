# Common functions for the Text Varnish cluster

sub pass_requests {
	if (req.request != "GET" && req.request != "HEAD") {
		return (pass);
	}
	if (req.http.Host ~ "^test\.") {
		return (pass);
	}
}

sub cookie_munging {
	/* This header is saved, and restored before sending it to MediaWiki */
	if (req.restarts == 0) {
		set req.http.Orig-Cookie = req.http.Cookie;
		unset req.http.Cookie;

		/* We need to vary on the forceHTTPS cookie */
		if (req.http.Orig-Cookie ~ "forceHTTPS=(1|true)") {
			set req.http.Cookie = "forceHTTPS=1";
		}
	}
}

sub restore_cookie {
	/* Restore the original Cookie header for upstream
	 * Assumes client header Orig-Cookie has been filtered!
	 */
	if (bereq.http.Orig-Cookie) {
		set bereq.http.Cookie = bereq.http.Orig-Cookie;
		unset bereq.http.Orig-Cookie;
	}
}

sub evaluate_cookie {
	/* A session or token cookie will prevent caching if varied on,
	 * move the Cookie header out of the way otherwise
	 */
	if (req.http.Cookie ~ "([sS]ession|Token)=") {
		set req.hash_ignore_busy = true;
	} else {
		call cookie_munging;
	}
}

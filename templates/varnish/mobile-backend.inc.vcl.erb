# Varnish VCL include file for mobile backends

include "errorpage.inc.vcl";

sub vcl_recv {
	call vcl_recv_purge;
	/* FIXME: restrict access */

	if ( req.http.host ~ "^test\." ) {
<% if vcl_config.fetch("cluster_tier", "1") == "1" -%>
		set req.backend = test_wikipedia;
<% end -%>
		return (pass);
	}
<% if vcl_config.fetch("cluster_tier", "1") == "1" -%>
	if (req.url ~ "^/w/api.php") {
		set req.backend = api;
	}
<% end -%>

	/* wikimedia.vcl sets req.backend to the default 'backend' at the start of vcl_recv.
	 * For normal requests to the normal app server clusters, we can select the HHVM
	 * app server backend instead. On a request restart (often due to an error),
	 * go back to the Zend app server pool.
	 */
	if (req.backend == backend && req.restarts == 0 && req.http.Cookie ~ "hhvm=true") {
		set req.backend = hhvm_appservers;
	}

	/* Default (now modified) Varnish vcl_recv function */
	if (req.request != "GET" && req.request != "HEAD") {
		/* We only deal with GET and HEAD by default */
		return (pass);
	}
	if (req.http.Authorization || req.http.Cookie) {
		/* Not cacheable by default */
		return (pass);
	}
	return (lookup);
}

sub vcl_fetch {
	if (req.url ~ "mobileaction=" || req.url ~ "useformat=") {
		set beresp.ttl = 60 s;
	}

	if (beresp.ttl <= 0s) {
		set beresp.ttl = 120s;
		return (hit_for_pass);
	}
	return (deliver);
}

sub vcl_hash {
	/* Hash objects from HHVM servers differently for safety. */
	if (req.backend == hhvm_appservers) {
		hash_data(req.backend);
	}
}


sub vcl_error {
	call errorpage;
	return(deliver);
}

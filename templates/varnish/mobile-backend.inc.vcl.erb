# Varnish VCL include file for mobile backends

include "errorpage.inc.vcl";

sub vcl_recv {
	call vcl_recv_purge;
	/* FIXME: restrict access */

	if ( req.http.host ~ "^test\." ) {
<% if vcl_config.fetch("cluster_tier", "1") == "1" -%>
		set req.backend = test_wikipedia;
<% end -%>
		return (pass);
	}
<% if vcl_config.fetch("cluster_tier", "1") == "1" -%>
	if (req.url ~ "^/w/api.php") {
		set req.backend = api;
	}
<% end -%>

<% if vcl_config.fetch("cluster_tier", "1") == "1" -%>
	/* Use the hhvm backend for any request to the standard appservers.
	 On a request restart (often due to an error), fallback to the Zend pool */
	if (req.http.X-Use-HHVM == "1" && req.restarts == 0) {
		set req.backend = hhvm_appservers;
	}
<% end -%>

	/* Default (now modified) Varnish vcl_recv function */
	if (req.request != "GET" && req.request != "HEAD") {
		/* We only deal with GET and HEAD by default */
		return (pass);
	}
	if (req.http.Authorization || req.http.Cookie) {
		/* Not cacheable by default */
		return (pass);
	}
	return (lookup);
}

sub vcl_fetch {
	if (req.url ~ "mobileaction=" || req.url ~ "useformat=") {
		set beresp.ttl = 60 s;
	}

	if (beresp.ttl <= 0s) {
		set beresp.ttl = 120s;
		return (hit_for_pass);
	}

<% if vcl_config.fetch("cluster_tier", "1") == "1" -%>
    /* Set Vary to depend on X-Use-HHVM */ 
	if (beresp.http.Vary !~ "X-Use-HHVM") {
		if (beresp.http.Vary) {
			set beresp.http.Vary = beresp.http.Vary + ",X-Use-HHVM";
		} else {
			set beresp.http.Vary = "X-Use-HHVM";
		}
	}
<% end -%>

	/* do not cache requests that should go to hhvm but have been
	 * replied by Zend. */
	if (req.http.X-Use-HHVM == "1" && beresp.http.X-Powered-By !~ "^HHVM") {
		return (hit_for_pass);
	}

	return (deliver);
}

sub vcl_error {
	call errorpage;
	return(deliver);
}

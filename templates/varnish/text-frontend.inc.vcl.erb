# Varnish VCL include file for text frontends

include "errorpage.inc.vcl";
include "text-common.inc.vcl";

sub mobile_redirect {
	if ((req.http.User-Agent ~ "mobi" || req.http.Accept ~ "vnd.wap.wml")
		&& req.http.User-Agent !~ "(iPad|Android.3|(?i)tablet|(?i)(?!google)bot|PlayBook|Wii)"
		&& req.http.Cookie !~ "(stopMobileRedirect=true|mf_useformat=desktop)"
		&& req.url ~ "^/wiki/") {
		set req.http.MobileHost = regsub(req.http.host, "^(?:www\.(?=mediawiki))?((?:species|meta|incubator|outreach|strategy|wikimania2012)\.(?=wikimedia)|\w+\.(?!wikimedia|mediawiki)|(?=mediawiki))(wikimedia|wikipedia|wiktionary|wikinews|wikisource|wikiquote|wikibooks|wikiversity|wikivoyage|mediawiki)\.", "\1m.\2.");
		if (req.http.Host != req.http.MobileHost) {
			set req.http.Location = req.http.X-Forwarded-Proto + "://" + req.http.MobileHost + req.url;
			error 666 "Found";
		}
		unset req.http.MobileHost;
	}
}

sub vcl_recv {
	/* Allow purging */
	call vcl_recv_purge;

	/* make absolute URIs relative as to not have to rewrite them too;
	 * do this after vcl_recv_purge, as it operates on a full URI */
	call rewrite_proxy_urls;

	if (!req.http.X-Forwarded-Proto) {
		set req.http.X-Forwarded-Proto = "http";
	}

	call mobile_redirect;

	call cookie_munging;

	/* Users that just logged out, should not get a 304 for their
	 * (locally cached) logged in pages. */
	if (req.http.If-Modified-Since && req.http.Orig-Cookie ~ "LoggedOut") {
		unset req.http.If-Modified-Since;
	}

	return(lookup);
}

sub vcl_miss {
	call restore_cookie;
}

sub vcl_deliver {
	/* Override the Cache-Control header for wiki content pages */
	if (req.url ~ "(?i)^/w(iki)?/.*"
		&& req.url !~ "^/wiki/Special\:Banner(Controller|ListLoader)"
		&& req.url !~ "(?i)^/w/(extensions/.*|api\.php)"
		&& req.url !~ "(?i)bcache=1") {
		set resp.http.Cache-Control = "private, s-maxage=0, max-age=0, must-revalidate";
	}
}

sub vcl_error {
	/* Support mobile redirects */
	if (obj.status == 666) {
		set obj.http.Location = req.http.Location;
		set obj.status = 302;
		return(deliver);
	}

	call errorpage;
	return(deliver);
}
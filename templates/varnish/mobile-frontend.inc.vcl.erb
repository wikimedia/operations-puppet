# Varnish VCL include file for mobile frontends

C{
#include <netinet/in.h>
#include <string.h>
#include <sys/socket.h>
#include <arpa/inet.h>
}C

acl wmf_office {
	"216.38.130.160"/29;
}

acl carrier_testing {
	"208.80.152.165";
	"208.80.153.194";
}

acl carrier_digi {
	"203.92.128.185";
	"115.164.0.0"/16;
	"116.197.0.0"/17;
}

acl carrier_orange_ivory_coast {
	//"41.66.28.94"/32;
	//"41.66.28.95"/32;
	//"41.66.28.96"/32;
	//"41.66.28.72"/32;
	//"41.66.28.73"/32;
}

acl carrier_orange_uganda {
	"41.202.224.0"/19;
	"197.157.0.0"/18;
}

acl carrier_saudi_telecom {
	//"212.118.140.0"/22;
	//"84.235.72.0"/22;
}

acl carrier_orange_kenya {
	"212.49.88.0"/25;
}

acl carrier_orange_tunisia {
	//"197.30.0.0"/17;
	//"197.30.128.0"/19;
	//"197.30.224.0"/19;
	//"197.29.192.0"/18;
}

acl carrier_orange_niger {
	"41.203.157.1";
	"41.203.157.2";
	"41.203.159.243";
}

acl carrier_orange_cameroon {
	//"193.251.155.0"/25;
	//"41.202.192.0"/19;
}

acl carrier_grameenphone_bangladesh {
	"119.30.38.0"/24;
	"119.30.39.0"/24;
	"119.30.45.0"/24;
	"119.30.47.0"/24;
}

acl carrier_telenor_montenegro {
	//"79.143.96.0"/20;
}

sub tag_carrier {

	/* For wiki zero project - tags partnered carriers */
	if ( req.http.host ~ "(^([a-zA-Z0-9-]+)\.zero|^zero)\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.X-Subdomain = "ZERO";
		if (client.ip ~ wmf_office) {
			set req.http.X-Carrier = "wikimedia";
		} else if (client.ip ~ carrier_digi) {
			if ( req.http.User-Agent ~ "Opera" ) {
				set req.http.X-Carrier = "DIGI";
			}
		} else if (client.ip ~ carrier_telenor_montenegro) {
			set req.http.X-Carrier = "Telenor Montenegro";
		} else if (client.ip ~ carrier_grameenphone_bangladesh) {
			if ( req.http.host ~ "(^(bn)\.zero|^zero)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Grameenphone Bangladesh";
			}
		} else if (client.ip ~ carrier_saudi_telecom) {
			if ( req.http.host ~ "(^(ar|en|ur|bn|tl)\.zero|^zero)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Saudi Telecom";
			}
		}
	} else {
		set req.http.X-Subdomain = "M";
		if ( client.ip ~  carrier_orange_ivory_coast ) {
			set req.http.X-Carrier = "Orange Ivory Coast";
		} else if (client.ip ~ carrier_saudi_telecom) {
			if ( req.http.host ~ "(^(ar|en|ur|bn|tl)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Saudi Telecom";
			}
		} else if ( client.ip ~  carrier_orange_uganda ) {
			if ( req.http.host ~ "(^(ko|fr|de|en|zh|sw|rw|ar|hi|es)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Orange Uganda";
			}
		} else if ( client.ip ~  carrier_orange_tunisia ) {
			if ( req.http.host ~ "(^(ar|en|fr|es|de|it|ru|ja|zh)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Orange Tunisia";
			}
		} else if ( client.ip ~  carrier_orange_niger ) {
				set req.http.X-Carrier = "Orange Niger";
		} else if ( client.ip ~ carrier_orange_kenya ) {
				set req.http.X-Carrier = "Orange Kenya";
		} else if ( client.ip ~  carrier_orange_cameroon ) {
			if ( req.http.host ~ "(^(fr|en|es|de|zh|ar|ha|ln|yo|eo)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Orange Cameroon";
			}
		} else if (client.ip ~ carrier_telenor_montenegro) {
			set req.http.X-Carrier = "Telenor Montenegro";
		} else if ( client.ip ~ carrier_testing ) {
			set req.http.X-Carrier = "wikimedia";
		}
	}

	/* once actuall in prod, ensure users can't make requests
	with a fake X-Carrier header */
	/* else {
		unset req.http.X-Carrier;
	} */
}

sub device_detection {

	set req.http.X-Device = "";

	if ( req.http.User-Agent ~ "Android" ){
		set req.http.X-Device = "android";
		if ( req.http.User-Agent ~ "Opera Mini" ) {
			set req.http.X-Device = "operamini";
		} else if( req.http.User-Agent ~ "Opera Mobi" ) {
			set req.http.X-Device = "operamobile";
		}
	} else if( req.http.User-Agent ~ "MSIE 9.0" ||
			req.http.User-Agent ~ "MSIE 8.0"
		) {
		set req.http.X-Device = "ie";
	} else if( req.http.User-Agent ~ "MSIE" ) {
		set req.http.X-Device = "html";
	} else if ( req.http.User-Agent ~ "Opera Mobi" ) {
		set req.http.X-Device = "operamobile";
	} else if( req.http.User-Agent ~ "Safari" && ( req.http.User-Agent ~ "iPad" ||
		req.http.User-Agent ~ "iPhone" ) ) {
		if( req.http.User-Agent ~ "iPad" ) {
			set req.http.X-Device = "iphone";
		} else if ( req.http.User-Agent ~ "iPhone" ) {
			if( req.http.User-Agent ~ "iPhone OS 2" ) {
				set req.http.X-Device = "iphone2";
			} else {
				set req.http.X-Device = "iphone";
			}
		} else {
			set req.http.X-Device = "webkit";
		}
	} else if( req.http.User-Agent ~ "iPhone" ) {
		if( req.http.User-Agent ~ "Opera" ) {
			set req.http.X-Device = "operamini";
		} else {
			set req.http.X-Device = "native_iphone";
		}
	} else if( req.http.User-Agent ~ "WebKit" ) {
		if( req.http.User-Agent ~ "Series60" ) {
			set req.http.X-Device = "nokia";
		} else if( req.http.User-Agent ~ "webOS" ) {
			set req.http.X-Device = "palm_pre";
		} else {
			set req.http.X-Device = "webkit";
		}
	} else if( req.http.User-Agent ~ "Opera" ) {
		if( req.http.User-Agent ~ "Nintendo Wii" ) {
			set req.http.X-Device = "wii";
		} else if( req.http.User-Agent ~ "Opera Mini" ) {
			set req.http.X-Device = "operamini";
		} else {
			set req.http.X-Device = "operamobile";
		}
	} else if( req.http.User-Agent ~ "Kindle/1.0" ) {
		set req.http.X-Device = "kindle";
	} else if( req.http.User-Agent ~ "Kindle/2.0" ) {
		set req.http.X-Device = "kindle2";
	} else if( req.http.User-Agent ~ "Firefox" ) {
		set req.http.X-Device = "capable";
	} else if( req.http.User-Agent ~ "NetFront" ) {
		set req.http.X-Device = "netfront";
	} else if( req.http.User-Agent ~ "SEMC-Browser" ) {
		set req.http.X-Device = "wap2";
	} else if( req.http.User-Agent ~ "Series60" ) {
		set req.http.X-Device = "wap2";
	} else if( req.http.User-Agent ~ "PlayStation Portable" ) {
		set req.http.X-Device = "psp";
	} else if( req.http.User-Agent ~ "PLAYSTATION 3" ) {
		set req.http.X-Device = "ps3";
	} else if( req.http.User-Agent ~ "SAMSUNG" ) {
		set req.http.X-Device = "capable";
	} else if( req.http.User-Agent ~ "BlackBerry" ) {
		if( req.http.User-Agent ~ "/1." || req.http.User-Agent ~ "/2." || req.http.User-Agent ~ "/3."
			|| req.http.User-Agent ~ "/4." ) {
				set req.http.X-Device = "blackberry-lt5";
			} else {
				set req.http.X-Device = "blackberry";
			}
	}
	
	if ( req.http.X-Device == "" ) {
		if ( req.http.Accept ~ "application/vnd.wap.xhtml+xml" ) {
			// Should be wap2
			set req.http.X-Device = "html";
		} else if ( req.http.Accept ~ "vnd.wap.wml" ) {
			set req.http.X-Device = "wml";
		} else {
			set req.http.X-Device = "html";
		}
	}
}


sub vcl_recv {
	call vcl_recv_purge;
	/* if the request comes from Opera Mini's accelerating proxies, grab
	 * XFF Header and replace client ip value */
	if (client.ip ~ opera_mini) {
		C{
		struct sockaddr_storage *client_ip_ss = VRT_r_client_ip(sp);
		struct sockaddr_in *client_ip_si = (struct sockaddr_in *) client_ip_ss;
		struct in_addr *client_ip_ia = &(client_ip_si->sin_addr);
		char *last;

		char *xff_ip = strtok(VRT_GetHdr(sp, HDR_REQ, "\020X-Forwarded-For:"), ",");
		
		if (xff_ip == NULL) {
			xff_ip = VRT_GetHdr(sp, HDR_REQ, "\020X-Forwarded-For:");
		}

		if (xff_ip != NULL) {
			inet_pton(AF_INET, xff_ip, client_ip_ia);
		}
		}C

		set req.http.X-CLIENT-IP = client.ip;
		set req.http.X-Forwarded-For = client.ip;
		set req.http.X-ORIG-CLIENT-IP = req.http.rlnclientipaddr;
	}

	call tag_carrier;
	/* Replace <language>.m.<project>.org by <language>.<project>.org */
	if ( req.http.host ~ "^([a-zA-Z0-9-]+)\.m\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.host = regsub( req.http.host, "^([a-zA-Z0-9-]+)\.m\.([a-zA-Z0-9-]+)\.org", "\1.\2.org");
	}

	/* Replace <language>.zero.<project>.org by <language>.<project>.org and set X-Carrier */
	else if ( req.http.host ~ "^([a-zA-Z0-9-]+)\.zero\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.host = regsub( req.http.host, "^([a-zA-Z0-9-]+)\.zero\.([a-zA-Z0-9-]+)\.org", "\1.\2.org");
	}

	/* Rewrite <language>.wap.wikipedia.org to new mobile site */
	else if ( req.http.host ~ "^([a-zA-Z0-9-]+)\.wap\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.host = regsub( req.http.host, "^([a-zA-Z0-9-]+)\.wap\.([a-zA-Z0-9-]+)\.org", "\1.mobile.\2.org");
	}

	/* Rewrite m.mediawiki.org to mediawiki.org etc */
	if ( req.http.host ~ "^m\.mediawiki\.org" ) {
		set req.http.host = regsub( req.http.host, "^m\.mediawiki\.org", "www.mediawiki.org");
	}

	/* Support the old mobile.wikipedia.org wap gateway */
	else if ( req.http.host ~ "^([a-zA-Z0-9-]+)\.mobile\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.host = regsub( req.http.host, "^([a-zA-Z0-9-]+)\.mobile\.([a-zA-Z0-9-]+)\.org", "\1.\2.org" );
		set req.url = regsub( req.url, "\S+[\?&]go=([^&]+).*", "/wiki/\1" );
	}

	/* FIXME: deploy X-Vary-Options support */
	set req.http.X-Orig-Cookie = req.http.Cookie;
	if(req.http.Cookie ~ "disable" || req.http.Cookie ~ "optin") {
		/* Do nothing; these are the cookies we pass.
		 * this is a hack in the absence of X-V-O support
		 */
	} else {
		unset req.http.Cookie;
	}
	
	if ( req.http.host == "m.wikipedia.org" ) {
		if ( req.http.X-Carrier == "Orange Ivory Coast" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Niger" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "wikimedia" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Uganda" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Tunisia" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Kenya" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Cameroon" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Telenor Montenegro" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Grameenphone Bangladesh" ) {
			error 666 "http://bn.zero.wikipedia.org";
		} else if ( req.http.X-Carrier == "Saudi Telecom" ) {
			error 666 "http://ar.m.wikipedia.org/wiki/%D8%AE%D8%A7%D8%B5:ZeroRatedMobileAccess";
		} else {
			error 666 "http://en.m.wikipedia.org" + req.url;
		}
	} else if ( req.http.host == "mobile.wikipedia.org" ) {
		error 666 "http://en.mobile.wikipedia.org" + req.url;
	} else if ( req.http.host == "zero.wikipedia.org" ) {
		if ( req.http.X-Carrier == "Grameenphone Bangladesh" ) {
			error 666 "http://bn.zero.wikipedia.org";
		} else if ( req.http.X-Carrier == "Saudi Telecom" ) {
			error 666 "http://ar.m.wikipedia.org/wiki/%D8%AE%D8%A7%D8%B5:ZeroRatedMobileAccess";
		}
	}

	if ( req.url == "/" ) { 
		set req.url = "/?useformat=mobile";
	}

	if ( req.http.host ~ "^test\." ) {
		set req.backend = test;
	}

	call device_detection;
}

sub vcl_fetch {
	set beresp.http.X-Device = req.http.X-Device;
	set beresp.http.X-Carrier = req.http.X-Carrier;
	if (req.url ~ "mobileaction=" || req.url ~ "useformat=") {
		set beresp.ttl = 60 s;
	}

	# don't cache test.m
	if ( req.http.host ~ "^test\." ) {
		return(hit_for_pass);
	}
}

sub vcl_error {
	/* Support mobile redirects */
	if (obj.status == 666) {
		set obj.http.Location = obj.response;
		set obj.status = 302;
		return(deliver);
	}
}

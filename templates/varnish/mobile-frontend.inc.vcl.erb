# Varnish VCL include file for mobile frontends

C{
#include <netinet/in.h>
#include <string.h>
#include <sys/socket.h>
#include <arpa/inet.h>
}C

acl wmf_office {
	"216.38.130.160"/28;
}

acl carrier_dtac {
	"115.67.0.0"/16;
	"111.84.0.0"/16;
	"1.46.0.0"/16;
	"1.47.0.0"/16;
	"103.1.164.0"/22;
	"202.91.16.0"/21;
}

acl carrier_orange_congo {
	"91.151.146.64"/27;
	"203.222.206.112"/28;
	"203.222.195.80"/28;
	"81.199.62.88"/29;
	"81.199.62.128"/26;
	"41.77.220.64"/27;
	"41.77.221.64"/27;
	"41.77.222.64"/27;
	"41.77.223.64"/27;
}

acl carrier_orange_botswana {
	"41.223.141.160"/29;
	"41.223.141.0"/24;
}

acl carrier_hello_cambodia {
	"117.20.116.83";
	"117.20.116.84"/30;
	"117.20.116.88"/30;
	"117.20.116.92"/31;
}

acl carrier_celcom_malaysia {
	"203.82.80.0"/24;
	"203.82.81.0"/24;
	"203.82.82.0"/24;
	"203.82.87.0"/24;
	"183.171.64.0"/18;
	"203.82.95.0"/24;
	"183.171.128.0"/19;
	"203.82.90.0"/24;
	"203.82.91.0"/24;
	"203.82.92.0"/24;
	"203.82.93.0"/24;
	"203.82.94.0"/24;
	"183.171.0.0"/18;
	"203.82.85.32"/28;
	"203.82.66.192"/28;
	"183.171.160.0"/21;
	"183.171.168.0"/21;
	"183.171.176.0"/22;
}

acl carrier_dialog_sri_lanka {
	"175.157.0.0"/16;
	"111.223.128.0"/18;
	"103.2.148.0"/22;
	"123.231.8.0"/21;
	"123.231.40.0"/21;
	"123.231.48.0"/21;
	"123.231.56.0"/21;
	"123.231.120.0"/21;
	"182.161.0.0"/19;
	"122.255.52.0"/24;
	"122.255.53.0"/24;
	"122.255.54.0"/24;
}

acl carrier_tata {
	"182.156.0.0"/16;
	"27.107.0.0"/16;
	"14.194.0.0"/16;
	"14.195.0.0"/16;
	"49.200.0.0"/16;
	"49.201.0.0"/16;
	"49.202.0.0"/16;
	"49.203.0.0"/16;
	"49.249.64.0"/18;
	"49.249.128.0"/18;
	"49.249.192.0"/19;
	"49.248.224.0"/20;
	"49.248.240.0"/22;
	"49.248.244.0"/23;
	"49.249.0.0"/19;
	"49.249.32.0"/19;
	"49.249.224.0"/19;
	"115.117.192.0"/18;
	"115.118.208.0"/20;
	"115.118.224.0"/19;
	"115.118.16.0"/22;
	"115.118.44.0"/22;
	"115.118.48.0"/20;
	"115.118.80.0"/20;
	"59.161.254.21";
	"182.156.191.10";
	"10.234.128.0"/20;
	"10.234.144.0"/20;
	"10.234.160.0"/20;
	"10.234.176.0"/20;
	"10.234.192.0"/20;
	"10.234.208.0"/20;
	"10.234.224.0"/20;
	"10.234.240.0"/20;
	"10.234.0.0"/17;
	"219.64.175.132";
	"219.64.175.134";
	"219.64.175.135";
	"219.64.175.136";
	"219.64.175.137";
	"219.64.175.139";
	"219.64.175.142";
	"59.161.95.86";
	"219.64.175.215";
	"219.64.175.216";
	"219.64.175.217";
	"219.64.175.219";
	"14.96.246.43";
	"14.96.246.36";
	"14.96.246.40";
	"14.96.246.41";
	"14.96.246.42";
	"59.161.95.65";
	"59.161.95.66";
	"59.161.95.67";
	"59.161.95.68";
	"115.118.108.0"/22;
	"115.118.144.0"/20;
	"115.118.180.0"/21;
	"115.118.188.0"/22;
	"115.118.204.0"/22;
	"115.117.128.0"/18;
}

acl carrier_testing {
	"208.80.152.165";
	"208.80.153.194";
}

acl carrier_digi {
	"203.92.128.185";
	"115.164.0.0"/16;
	"116.197.0.0"/17;
}

acl carrier_orange_ivory_coast {
	"41.66.28.94"/32;
	"41.66.28.95"/32;
	"41.66.28.96"/32;
	"41.66.28.72"/32;
	"41.66.28.73"/32;
}

acl carrier_orange_uganda {
	"41.202.224.0"/19;
	"197.157.0.0"/18;
}

acl carrier_saudi_telecom {
	"212.118.140.0"/22;
	"84.235.72.0"/22;
	"84.235.72.32"/27;
	"84.235.73.110";
	"84.235.73.160"/28;
	"84.235.73.208"/28;
	"84.235.73.224"/28;
	"84.235.73.240"/28;
	"84.235.74.0"/29;
	"84.235.74.14";
	"84.235.75.80"/28;
	"84.235.94.240"/28;
	"212.118.140.16"/28;
	"212.118.140.200"/29;
	"212.118.142.80"/28;
	"212.118.142.96"/28;
	"212.118.143.32"/28;
	"212.118.143.248"/29;
	"212.215.128.0"/17;
}

acl carrier_orange_kenya {
	"212.49.88.0"/25;
}

acl carrier_orange_tunisia {
	"197.30.0.0"/17;
	"197.30.128.0"/19;
	"197.30.224.0"/19;
	"197.29.192.0"/18;
}

acl carrier_orange_niger {
	"41.203.157.1";
	"41.203.157.2";
	"41.203.159.243";
}

acl carrier_orange_cameroon {
	"193.251.155.0"/25;
	"41.202.192.0"/19;
	"41.202.219.64"/28;
	"41.202.219.112"/30;
	"41.202.219.14";
	"41.202.219.10";
}

acl carrier_grameenphone_bangladesh {
	"119.30.38.0"/24;
	"119.30.39.0"/24;
	"119.30.45.0"/24;
	"119.30.47.0"/24;
}

acl carrier_telenor_montenegro {
	"79.143.96.0"/20;
}

acl carrier_xl_indonesia {
	"112.215.63.0"/24;
	"112.215.64.0"/24;
	"112.215.65.0"/24;
	"112.215.66.0"/24;
	"202.152.240.0"/24;
	"202.152.243.0"/24;
}

acl carrier_vimpelcom_beeline {
	/* Testing range */
	"83.220.236.0"/22;
	"217.118.66.143";
}

# for test.* routing, FIXME
backend test_wikipedia {
	.host = "srv193.pmtpa.wmnet";
	.port = "80";
	.connect_timeout = 5s;
	.first_byte_timeout = 35s;
	.between_bytes_timeout = 2s;
	.max_connections = 20;
}

sub tag_carrier {
	/* For wiki zero project - tags partnered carriers
	   The values for the X-CS headers are obtained from
	   http://en.wikipedia.org/wiki/Mobile_country_code
	   and http://www.mcc-mnc.com/
	*/
	if ( req.http.host ~ "(^([a-zA-Z0-9-]+)\.zero|^zero)\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.X-Subdomain = "ZERO";
		if ( client.ip ~ carrier_celcom_malaysia ) {
			set req.http.X-Carrier = "Celcom Malaysia";
			set req.http.X-CS = "502-13";
		} else if ( client.ip ~ carrier_hello_cambodia ) {
			set req.http.X-Carrier = "Hello Cambodia";
			set req.http.X-CS = "456-02";
		} else if (client.ip ~ wmf_office) {
			set req.http.X-Carrier = "wikimedia";
			set req.http.X-CS = "WMF";
		} else if (client.ip ~ carrier_digi) {
			if ( req.http.User-Agent ~ "Opera" ) {
				set req.http.X-Carrier = "DIGI";
				set req.http.X-CS = "502-16";
			}
		} else if (client.ip ~ carrier_dialog_sri_lanka) {
			set req.http.X-Carrier = "Dialog Sri Lanka";
			set req.http.X-CS = "413-02";
		} else if (client.ip ~ carrier_dtac) {
			set req.http.X-Carrier = "DTAC";
			set req.http.X-CS = "520-18";
		} else if (client.ip ~ carrier_tata) {
			set req.http.X-Carrier = "TATA";
			/* MCC-MNC not clear from http://en.wikipedia.org/wiki/Mobile_country_code */
			set req.http.X-CS = "405-0*";
		} else if (client.ip ~ carrier_telenor_montenegro) {
			set req.http.X-Carrier = "Telenor Montenegro";
			set req.http.X-CS = "297-01";
		} else if (client.ip ~ carrier_grameenphone_bangladesh) {
			if ( req.http.host ~ "(^(bn)\.zero|^zero)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Grameenphone Bangladesh";
				set req.http.X-CS = "470-01";
			}
		} else if (client.ip ~ carrier_saudi_telecom) {
			if ( req.http.host ~ "(^(ar|en|ur|bn|tl)\.zero|^zero)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Saudi Telecom";
				set req.http.X-CS = "420-01";
			}
		} else if (client.ip ~ carrier_xl_indonesia) {
			if ( req.http.host ~ "(^(id|en|zh|ar|hi|ms|jv|su)\.zero|^zero)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "XL Axiata";
				set req.http.X-CS = "510-11";
			}
		} else if (client.ip ~ carrier_vimpelcom_beeline) {
			if ( req.http.host ~ "(^(en|ru)\.zero|^zero)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Vimpelcom Beeline";
				set req.http.X-CS = "250-99";
			}
		}
	} else {
		set req.http.X-Subdomain = "M";
		if ( client.ip ~ carrier_orange_botswana ) {
			 set req.http.X-Carrier = "Orange Botswana";
			set req.http.X-CS = "652-02";
		} else if ( client.ip ~  carrier_orange_congo ) {
			set req.http.X-Carrier = "Orange Congo";
			set req.http.X-CS = "630-86";
		} else if ( client.ip ~  carrier_orange_ivory_coast ) {
			set req.http.X-Carrier = "Orange Ivory Coast";
			set req.http.X-CS = "612-03";
		} else if (client.ip ~ carrier_saudi_telecom) {
			if ( req.http.host ~ "(^(ar|en|ur|bn|tl)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Saudi Telecom";
				set req.http.X-CS = "420-01";
			}
		} else if ( client.ip ~  carrier_orange_uganda ) {
			if ( req.http.host ~ "(^(ko|fr|de|en|zh|sw|rw|ar|hi|es)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Orange Uganda";
				set req.http.X-CS = "641-14";
			}
		} else if ( client.ip ~  carrier_orange_tunisia ) {
			if ( req.http.host ~ "(^(ar|en|fr|es|de|it|ru|ja|zh)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Orange Tunisia";
				set req.http.X-CS = "605-01";
			}
		} else if ( client.ip ~  carrier_orange_niger ) {
				set req.http.X-Carrier = "Orange Niger";
				set req.http.X-CS = "614-04";
		} else if ( client.ip ~ carrier_orange_kenya ) {
				set req.http.X-Carrier = "Orange Kenya";
				set req.http.X-CS = "639-07";
		} else if ( client.ip ~  carrier_orange_cameroon ) {
			if ( req.http.host ~ "(^(fr|en|es|de|zh|ar|ha|ln|yo|eo)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Orange Cameroon";
				set req.http.X-CS = "624-02";
			}
		} else if (client.ip ~ carrier_telenor_montenegro) {
			set req.http.X-Carrier = "Telenor Montenegro";
			set req.http.X-CS = "297-01";
		} else if ( client.ip ~ carrier_testing ) {
			set req.http.X-Carrier = "wikimedia";
			set req.http.X-CS = "WMF";
		} else if (client.ip ~ carrier_vimpelcom_beeline) {
			if ( req.http.host ~ "(^(en|ru)\.m|^m)\.([a-zA-Z0-9-]+)\.org" ) {
				set req.http.X-Carrier = "Vimpelcom Beeline";
				set req.http.X-CS = "250-99";
			}
		}
	}

	/* once actually in prod, ensure users can't make requests
	with a fake X-Carrier header */
	/* else {
		unset req.http.X-Carrier;
	}
	*/
}

sub device_detection {

	set req.http.X-Device = "";

	if ( req.http.User-Agent ~ "Android" ){
		set req.http.X-Device = "android";
		if ( req.http.User-Agent ~ "Opera Mini" ) {
			set req.http.X-Device = "operamini";
		} else if( req.http.User-Agent ~ "Opera Mobi" ) {
			set req.http.X-Device = "operamobile";
		}
	} else if( req.http.User-Agent ~ "MSIE (8|9|1\d)\." ) {
		set req.http.X-Device = "ie";
	} else if( req.http.User-Agent ~ "MSIE" ) {
		set req.http.X-Device = "html";
	} else if ( req.http.User-Agent ~ "Opera Mobi" ) {
		set req.http.X-Device = "operamobile";
	} else if( req.http.User-Agent ~ "Safari" && ( req.http.User-Agent ~ "iPad" ||
		req.http.User-Agent ~ "iPhone" ) ) {
		if( req.http.User-Agent ~ "iPad" ) {
			set req.http.X-Device = "iphone";
		} else if ( req.http.User-Agent ~ "iPhone" ) {
			if( req.http.User-Agent ~ "iPhone OS 2" ) {
				set req.http.X-Device = "iphone2";
			} else {
				set req.http.X-Device = "iphone";
			}
		} else {
			set req.http.X-Device = "webkit";
		}
	} else if( req.http.User-Agent ~ "iPhone" ) {
		if( req.http.User-Agent ~ "Opera" ) {
			set req.http.X-Device = "operamini";
		} else {
			set req.http.X-Device = "native_iphone";
		}
	} else if( req.http.User-Agent ~ "WebKit" ) {
		if( req.http.User-Agent ~ "Series60" ) {
			set req.http.X-Device = "nokia";
		} else if( req.http.User-Agent ~ "webOS" ) {
			set req.http.X-Device = "palm_pre";
		} else {
			set req.http.X-Device = "webkit";
		}
	} else if( req.http.User-Agent ~ "Opera" ) {
		if( req.http.User-Agent ~ "Nintendo Wii" ) {
			set req.http.X-Device = "wii";
		} else if( req.http.User-Agent ~ "Opera Mini" ) {
			set req.http.X-Device = "operamini";
		} else {
			set req.http.X-Device = "operamobile";
		}
	} else if( req.http.User-Agent ~ "Kindle/1.0" ) {
		set req.http.X-Device = "kindle";
	} else if( req.http.User-Agent ~ "Kindle/2.0" ) {
		set req.http.X-Device = "kindle2";
	} else if( req.http.User-Agent ~ "Firefox|Maemo Browser|Fennec" ) {
		set req.http.X-Device = "capable";
	} else if( req.http.User-Agent ~ "NetFront" ) {
		set req.http.X-Device = "netfront";
	} else if( req.http.User-Agent ~ "SEMC-Browser" ) {
		set req.http.X-Device = "wap2";
	} else if( req.http.User-Agent ~ "Series60" ) {
		set req.http.X-Device = "wap2";
	} else if( req.http.User-Agent ~ "PlayStation Portable" ) {
		set req.http.X-Device = "psp";
	} else if( req.http.User-Agent ~ "PLAYSTATION 3" ) {
		set req.http.X-Device = "ps3";
	} else if( req.http.User-Agent ~ "SAMSUNG" ) {
		set req.http.X-Device = "capable";
	} else if( req.http.User-Agent ~ "BlackBerry" ) {
		if( req.http.User-Agent ~ "/1." || req.http.User-Agent ~ "/2." || req.http.User-Agent ~ "/3."
			|| req.http.User-Agent ~ "/4." ) {
				set req.http.X-Device = "blackberry-lt5";
			} else {
				set req.http.X-Device = "blackberry";
			}
	}

	if ( req.http.X-Device == "" ) {
		if ( req.http.Accept ~ "application/vnd.wap.xhtml+xml" ) {
			// Should be wap2
			set req.http.X-Device = "html";
		} else if ( req.http.Accept ~ "vnd.wap.wml" ) {
			set req.http.X-Device = "wml";
		} else {
			set req.http.X-Device = "html";
		}
	}
}

sub vcl_recv {
	call vcl_recv_purge;
	/* if the request comes from Opera Mini's accelerating proxies, grab
	 * XFF Header and replace client ip value */
	if (client.ip ~ opera_mini) {
		C{
		struct sockaddr_storage *client_ip_ss = VRT_r_client_ip(sp);
		struct sockaddr_in *client_ip_si = (struct sockaddr_in *) client_ip_ss;
		struct in_addr *client_ip_ia = &(client_ip_si->sin_addr);
		char *last;

		char *xff_ip = strtok(VRT_GetHdr(sp, HDR_REQ, "\020X-Forwarded-For:"), ",");
		
		if (xff_ip == NULL) {
			xff_ip = VRT_GetHdr(sp, HDR_REQ, "\020X-Forwarded-For:");
		}

		if (xff_ip != NULL) {
			inet_pton(AF_INET, xff_ip, client_ip_ia);
		}
		}C

		set req.http.X-CLIENT-IP = client.ip;
		set req.http.X-Forwarded-For = client.ip;
		set req.http.X-ORIG-CLIENT-IP = req.http.rlnclientipaddr;
	}

	call tag_carrier;
	/* Replace <language>.m.<project>.org by <language>.<project>.org */
	if ( req.http.host ~ "^([a-zA-Z0-9-]+)\.m\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.host = regsub( req.http.host, "^([a-zA-Z0-9-]+)\.m\.([a-zA-Z0-9-]+)\.org", "\1.\2.org");
	}

	/* Replace <language>.zero.<project>.org by <language>.<project>.org and set X-Carrier */
	else if ( req.http.host ~ "^([a-zA-Z0-9-]+)\.zero\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.host = regsub( req.http.host, "^([a-zA-Z0-9-]+)\.zero\.([a-zA-Z0-9-]+)\.org", "\1.\2.org");
	}

	/* Rewrite <language>.wap.wikipedia.org to new mobile site */
	else if ( req.http.host ~ "^([a-zA-Z0-9-]+)\.wap\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.host = regsub( req.http.host, "^([a-zA-Z0-9-]+)\.wap\.([a-zA-Z0-9-]+)\.org", "\1.mobile.\2.org");
	}

	/* Rewrite m.mediawiki.org to mediawiki.org etc */
	if ( req.http.host ~ "^m\.mediawiki\.org" ) {
		set req.http.host = regsub( req.http.host, "^m\.mediawiki\.org", "www.mediawiki.org");
	}

	/* Support the old mobile.wikipedia.org wap gateway */
	else if ( req.http.host ~ "^([a-zA-Z0-9-]+)\.mobile\.([a-zA-Z0-9-]+)\.org" ) {
		set req.http.host = regsub( req.http.host, "^([a-zA-Z0-9-]+)\.mobile\.([a-zA-Z0-9-]+)\.org", "\1.\2.org" );
		set req.url = regsub( req.url, "\S+[\?&]go=([^&]+).*", "/wiki/\1" );
	}

	/* FIXME: deploy X-Vary-Options support */
	set req.http.X-Orig-Cookie = req.http.Cookie;
	if( req.http.Cookie ~ "disable" ||
		req.http.Cookie ~ "optin" ||
		req.http.Cookie ~ "session" ||
		req.http.Cookie ~ "forceHTTPS" ) {
		/* Do nothing; these are the cookies we pass.
		 * this is a hack in the absence of X-V-O support
		 */
	} else {
		unset req.http.Cookie;
	}

	if ( req.http.host == "m.wikipedia.org" ) {
		if ( req.http.X-Carrier == "Orange Congo" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Botswana" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Ivory Coast" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Niger" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "wikimedia" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Uganda" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Tunisia" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Kenya" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Orange Cameroon" ) {
			error 666 "http://fr.m.wikipedia.org/wiki/Sp%C3%A9cial:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Telenor Montenegro" ) {
			error 666 "http://en.m.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Grameenphone Bangladesh" ) {
			error 666 "http://bn.zero.wikipedia.org";
		} else if ( req.http.X-Carrier == "Saudi Telecom" ) {
			error 666 "http://ar.m.wikipedia.org/wiki/%D8%AE%D8%A7%D8%B5:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Vimpelcom Beeline" ) {
			error 666 "http://ru.m.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:ZeroRatedMobileAccess";
		} else {
			error 666 "http://en.m.wikipedia.org" + req.url;
		}
	} else if ( req.http.host == "mobile.wikipedia.org" ) {
		error 666 "http://en.mobile.wikipedia.org" + req.url;
	} else if ( req.http.host == "zero.wikipedia.org" ) {
		if ( req.http.X-Carrier == "Hello Cambodia" ) {
			error 666 "http://en.zero.wikipedia.org";
		} else if ( req.http.X-Carrier == "Celcom Malaysia" ) {
			error 666 "http://en.zero.wikipedia.org";
		} else if ( req.http.X-Carrier == "Grameenphone Bangladesh" ) {
			error 666 "http://bn.zero.wikipedia.org";
		} else if ( req.http.X-Carrier == "Saudi Telecom" ) {
			error 666 "http://ar.zero.wikipedia.org/wiki/%D8%AE%D8%A7%D8%B5:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "TATA" ) {
			error 666 "http://en.zero.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if( req.http.X-Carrier == "DTAC" ) {
			error 666 "http://th.zero.wikipedia.org/wiki/%E0%B8%9E%E0%B8%B4%E0%B9%80%E0%B8%A8%E0%B8%A9:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Dialog Sri Lanka" ) {
			error 666 "http://en.zero.wikipedia.org/wiki/Special:ZeroRatedMobileAccess";
		} else if ( req.http.X-Carrier == "Vimpelcom Beeline" ) {
			error 666 "http://ru.zero.wikipedia.org/wiki/%D0%A1%D0%BB%D1%83%D0%B6%D0%B5%D0%B1%D0%BD%D0%B0%D1%8F:ZeroRatedMobileAccess";
		}
	}

	if ( req.url == "/" ) { 
		set req.url = "/?useformat=mobile";
	}

	if ( req.http.host ~ "^test\." ) {
		set req.backend = test_wikipedia;
	}

	call device_detection;
}

sub vcl_fetch {
	set beresp.http.X-Device = req.http.X-Device;
	set beresp.http.X-Carrier = req.http.X-Carrier;
	set beresp.http.X-CS = req.http.X-CS;
	if (req.url ~ "mobileaction=" || req.url ~ "useformat=") {
		set beresp.ttl = 60 s;
	}

	# don't cache test.m
	if ( req.http.host ~ "^test\." ) {
		return(hit_for_pass);
	}
}

sub vcl_error {
	/* Support mobile redirects */
	if (obj.status == 666) {
		set obj.http.Location = obj.response;
		set obj.status = 302;
		return(deliver);
	}
}

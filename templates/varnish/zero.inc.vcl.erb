// Varnish VCL include file for Wikipedia Zero

// Note: This requires "import header" in the including VCL

sub tag_carrier {
    // clear the 4 headers we may set below, nobody else should be setting them...
    unset req.http.X-Forwarded-By;
    unset req.http.X-Forwarded-By2;
    unset req.http.X-CS;
    unset req.http.X-CS2;

    // XTP and XC are set up in the common wikimedia.vcl now from netmapper data
    // Use standard XTP to set the tag_carrier-specific XFB header...
    if (req.http.X-Trusted-Proxy) {
        set req.http.X-Forwarded-By = req.http.X-Trusted-Proxy;
    }

    // Use standard XC/XCM to set the tag_carrier-specific X-CS2 header...
    if (req.http.X-Carrier) {
        if (req.http.X-Carrier-Meta) {
            set req.http.X-CS2 = req.http.X-Carrier + "|" + req.http.X-Carrier-Meta;
        } else {
            set req.http.X-CS2 = req.http.X-Carrier;
        }
    }

    // Now the per-carrier stuff...
    // Short of having netmapper (or equivalent) return a set of match parameters, I can't see any
    //   good way to make the rest of this cleaner really.
    if (req.http.X-CS2) {
        // TBD: Beware of legitimately formed links happening to have :ZeroRatedMobileAccess...
        if (req.url ~ "(action=zeroconfig|:ZeroRatedMobileAccess)($|&|\?)" || req.http.host ~ "^(zero|m)\.") {
            set req.http.X-CS = req.http.X-CS2;
        } else {
            set req.http.X-CS = "ON";
        }

        // Only trigger Set-Cookie below if the cookie isn't already being sent by the client
        if (req.http.X-ZeroTLS && req.http.Cookie ~ "ZeroOpts=tls") {
            unset req.http.X-ZeroTLS;
        }
    } // end of if(X-CS2)

    if (req.http.X-Forwarded-By) {
        // Current backend & cache vary on X-Forwarded-By, so in order not to fragment cache,
        // unset X-Forwarded-By. We still need that value in the resulting X-Analytics header,
        // so create a copy to be used in the vcl_deliver.
        set req.http.X-Forwarded-By2 = req.http.X-Forwarded-By;

        // the backend now checks this value. Soon we will stop varying on it
        if (!req.http.X-CS) {
            unset req.http.X-Forwarded-By;
        }
    }
}

sub vcl_deliver {
    // This, and the supporting X-ZeroTLS bits above in tag_carrier set a cookie
    // to tell the browser if contributory features would be zero-rated.
    // Once a carrier's config above has had req.http.X-ZeroTLS set to 1 for
    // 30 days after HTTPS enablement, then then specific block above can be removed
    // because the origin will have populated the cache sufficiently.
    // Notice that a cookie of ZeroOpts=   (empty value) tells the browser to
    // not enable the contributory features, so we remove this first if it exists.
    if (req.http.X-ZeroTLS) {
        // We must use header.remove()/append() here because there can be multiple unrelated Set-Cookie headers
        header.remove(resp.http.Set-Cookie,"ZeroOpts=");
        header.append(resp.http.Set-Cookie,"ZeroOpts=tls");
    }

    // Prepare for outbound X-CS and X-Analytics header assembly.
    if (req.http.X-CS2) {
        // Regardless of X-CS transform to "ON" for Vary and/or server-side
        // purposes, if a carrier was detected at all, set X-CS as an outbound
        // response header for the application to consume.
        set resp.http.X-CS = req.http.X-CS2;

        // X-C and X-C-M are set/split in the common recv code in
        // wikimedia.vcl; X-CS2 is aggregated from them in recv
        if (req.http.X-Carrier) {
            if (resp.http.X-Analytics) {
                set resp.http.X-Analytics = resp.http.X-Analytics + ";zero=" + req.http.X-Carrier;
            } else {
                set resp.http.X-Analytics = "zero=" + req.http.X-Carrier;
            }
            if (req.http.X-Carrier-Meta) {
                set resp.http.X-Analytics = resp.http.X-Analytics + ";zeronet=" + req.http.X-Carrier-Meta;
            }
        }
    } else {
        // Let's ensure no outbound X-CS if pre-analytics X-CS (as determined in corresponding if) was not set.
        unset resp.http.X-CS;
    }
    if (req.http.X-Forwarded-By2) {
        if (resp.http.X-Analytics) {
            set resp.http.X-Analytics = resp.http.X-Analytics + ";proxy=" + req.http.X-Forwarded-By2;
        } else {
            set resp.http.X-Analytics = "proxy=" + req.http.X-Forwarded-By2;
        }
    }
}

# Varnish VCL include file for bits

sub vcl_recv {
	/* Since we are allowing POST at wikimedia3.vcl.erb, disallow here */
        if (req.request == "POST") {
                error 403 "HTTP method not allowed.";
        }
	if (req.http.host == "bits.wikimedia.org") {
		if (req.url ~ "^/event\.gif") {
			error 204;
		}
<% if cluster_options.fetch( "enable_geoiplookup", false ) -%>
		if (req.url == "/geoiplookup") {
			error 666 "geoiplookup";
		} else {
			return (lookup);
		}
<% else -%>
		return (lookup);
<% end -%>
	}
<% if cluster_options.fetch( "enable_geoiplookup", false ) -%>
	else if (req.http.host == "geoiplookup.wikimedia.org" ) {
		error 666 "geoiplookup";
	}
<% end -%>
	else {
		error 403 "Requested target domain not allowed.";
	}
}

sub vcl_fetch {
	/* Don't run the default vcl_fetch function */
	return (deliver);
}

<% if site == "pmtpa" or site == "eqiad" -%>
# FIXME: Implement some proper topology code for primary DCs and downstream cache sites
sub vcl_miss {
	/* transform backend url: /<sitename>/load.php -> /w/load.php
	   set host header for backend to <sitename>
	*/
	if ( req.url ~ "^/([a-zA-Z0-9-]+\.)?([a-zA-Z0-9-]+\.)?([a-zA-Z0-9-]+)\.org/load\.php" ) {
		set bereq.http.host = regsub( req.url, "^/([^/]+)/(.*)$", "\1" );
		set bereq.url = regsub( req.url, "^/([^/]+)/load\.php(.*)?", "/w/load.php\2" );
<% if cluster_options.fetch( "test_hostname", false ) -%>

		# Send test.wikipedia.org to the right backend server
		if ( req.url ~ "^/<%= Regexp.escape( cluster_options.fetch( "test_hostname" ) ) %>/load\.php" ) {
			set req.backend = test_wikipedia;
		}
<% end -%>
	}
}
<% end -%>
<% if cluster_options.fetch( "enable_geoiplookup", false ) -%>

sub vcl_error {
	/* Support geoiplookup */
	if (obj.status == 666) {
		call geoip_lookup;
		set obj.status = 200;
		return(deliver);
	}
	/* 204 responses shouldn't contain a body */
	if (obj.status == 204) {
		return(deliver);
	}
}
<% end -%>

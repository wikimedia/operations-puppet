# Varnish VCL include file for bits

include "device-detection.inc.vcl";

sub vcl_recv {
	/* Since we are allowing POST at wikimedia3.vcl.erb, disallow here */
	if (req.request == "POST") {
		error 403 "HTTP method not allowed.";
	}
	if (req.http.host == "<%= cluster_options.fetch( "bits_domain", "bits.wikimedia.org" )%>") {
		if (req.url ~ "^/event\.gif") {
			error 204;
		}
	/* For https-only wikis, the redirect from http to https for bits assets should occur
		in varnish instead of apache, since the apache redirect and mediawiki doesn't
		vary by protocol. This can result in a redirect loop and assets not loading. */
		if ( req.url ~ "^/(auditcom|boardgovcom|board|chair|chapcom|checkuser|collab|donate|exec|fdc|grants|internal|movementroles|nomcom|office|otrs-wiki|searchcom|spcom|steward|wikimaniateam)\.wikimedia\.org/" && req.http.X-Forwarded-Proto != "https" ) {
			error 301 "https://<%= cluster_options.fetch( "bits_domain", "bits.wikimedia.org" )%>" + req.url;
		}
		# Add X-Device to mobile load.php requests
		if (req.url ~ "^/m/") {
			set req.url = regsub(req.url, "^/m/", "/");
			call device_detection;
		}
<% if cluster_options.fetch( "enable_geoiplookup", false ) -%>
		if (req.url == "/geoiplookup") {
			error 666 "geoiplookup";
		} else {
			return (lookup);
		}
<% else -%>
		return (lookup);
<% end -%>
	}
<% if cluster_options.fetch( "enable_geoiplookup", false ) -%>
	else if (req.http.host == "geoiplookup.wikimedia.org" ) {
		error 666 "geoiplookup";
	}
<% end -%>
	else {
		error 403 "Requested target domain not allowed.";
	}
}

sub vcl_fetch {
	/* Don't run the default vcl_fetch function */
	return (deliver);
}

<% if site == "pmtpa" or site == "eqiad" -%>
# FIXME: Implement some proper topology code for primary DCs and downstream cache sites
sub vcl_miss {
	/* transform backend url: /<sitename>/load.php -> /w/load.php
	   set host header for backend to <sitename>
	*/
	if ( req.url ~ "^/([a-zA-Z0-9-]+\.)?([a-zA-Z0-9-]+\.)?([a-zA-Z0-9-]+)\.<%= Regexp.escape( cluster_options.fetch( "top_domain", "org" ) ) %>/load\.php" ) {
		set bereq.http.host = regsub( req.url, "^/([^/]+)/(.*)$", "\1" );
		set bereq.url = regsub( req.url, "^/([^/]+)/load\.php(.*)?", "/w/load.php\2" );
<% if cluster_options.fetch( "test_hostname", false ) -%>

		# Send test.wikipedia.org to the right backend server
		if ( req.url ~ "^/<%= Regexp.escape( cluster_options.fetch( "test_hostname" ) ) %>/load\.php" ) {
			set req.backend = test_wikipedia;
		}
<% end -%>
	}
}
<% end -%>

sub vcl_error {
<% if cluster_options.fetch( "enable_geoiplookup", false ) -%>
	/* Support geoiplookup */
	if (obj.status == 666) {
		call geoip_lookup;
		set obj.status = 200;
		return(deliver);
	}
<% end -%>
	/* 204 responses shouldn't contain a body */
	if (obj.status == 204) {
		return(deliver);
	}
	/* 301 redirects for https-only wikis */
	if (obj.status == 301) {
		set obj.http.Location = obj.response;
		set obj.status = 301;
		return(deliver);
	}
}

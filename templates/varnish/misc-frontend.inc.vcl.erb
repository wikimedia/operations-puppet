include "misc-common.inc.vcl";

sub cluster_fe_recv_pre_purge { }

sub cluster_fe_recv {
    if (req.http.Host == "yarn.wikimedia.org") {
        // Disabling this as it exposes the YARN ResourceManager REST interface
        <%= error_synth(404, "Public access disabled. See https://wikitech.wikimedia.org/wiki/Analytics/Cluster/Access#ssh_tunnel.28s.29 for access instructions") -%>
    }

    if (req.http.Host == "grafana.wikimedia.org" || req.http.host == "grafana-admin.wikimedia.org"
        || req.http.Host == "grafana-labs.wikimedia.org" || req.http.host == "grafana-labs-admin.wikimedia.org") {
        // X-WEBAUTH-USER is set by Apache's mod_authnz_ldap on the request it
        // proxies to the grafana backend. We discard any user-set X-WEBAUTH-USER
        // header on the Apache layer, but do it here as well as added insurance.
        unset req.http.X-WEBAUTH-USER;
    }

    // STS-preload checker doesn't like [45]xx responses, but 3xx is OK, so
    // re-use the TLS-redirector code and send them to the wikimedia site.
    if (req.http.Host == "wmfusercontent.org") {
        set req.http.Location = "https://www.wikimedia.org";
        <%= error_synth(751, "TLS Redirect") -%>
    }

    call misc_recv_pass;
}

sub cluster_fe_hash { }

sub cluster_fe_hit {
    # XXX debugging v4 CL:0 issues
    if (obj.ttl < 0s) {
        return (miss);
    }
}

sub cluster_fe_miss { }
sub cluster_fe_pass { }

<% if @varnish_version4 -%>
sub cluster_fe_backend_fetch { }
<% end -%>

sub cluster_fe_backend_response {
    // hit_for_pass on objects >= ~10MB or no CL
    if (!beresp.http.Content-Length || beresp.http.Content-Length ~ "^[0-9]{8}") {
	set beresp.http.X-CDIS = "pass";
<% if @varnish_version4 -%>
        set beresp.uncacheable = true;
        return (deliver);
<% else -%>
        return (hit_for_pass);
<% end -%>
    }
}

sub cluster_fe_deliver { }

sub cluster_fe_err_synth { }

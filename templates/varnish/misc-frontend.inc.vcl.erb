include "errorpage.inc.vcl";

sub vcl_recv {
    if (req.http.Host == "git.wikimedia.org") {
        // gitblit requires the following request headers:
        set req.http.X-Forwarded-Proto = "https";
        set req.http.X-Forwarded-Port = "443";
    }

    if (req.http.Host == "grafana.wikimedia.org" || req.http.host == "grafana-admin.wikimedia.org") {
        // X-WEBAUTH-USER is set by Apache's mod_authnz_ldap on the request it
        // proxies to the grafana backend. We discard any user-set X-WEBAUTH-USER
        // header on the Apache layer, but do it here as well as added insurance.
        unset req.http.X-WEBAUTH-USER;
    }

    if (
           req.http.Host == "query.wikidata.org"
        || req.http.Host == "otrs-test.wikimedia.org"
        || req.http.Host == "hue.wikimedia.org"
        || req.http.Host == "yarn.wikimedia.org"
    ) {
        if (req.http.X-Forwarded-Proto != "https") {
            set req.http.Location = "https://" + req.http.Host + req.url;
            error 755 "TLS Redirect";
        }
    }

    // XXX this pass-block is common to all misc VCL, refactor later...
    if (
           req.http.Host == "gerrit.wikimedia.org"
        || req.http.Host == "grafana.wikimedia.org" || req.http.host == "grafana-admin.wikimedia.org"
        || req.http.Host == "static-bugzilla.wikimedia.org" || req.http.Host == "annual.wikimedia.org" || req.http.Host == "transparency.wikimedia.org"
        || req.http.Host == "otrs-test.wikimedia.org" // No caching of OTRS for now
        || req.http.Host == "people.wikimedia.org" // No caching of public_html dirs
        || req.http.Host == "datasets.wikimedia.org" // No caching of datasets.  They can be larger than misc varnish can deal with.
        || req.http.Host == "config-master.wikimedia.org"
        || req.http.Host == "etherpad.wikimedia.org" // No caching of configs; scripts may want to know when things change
    ) {
        return (pass)
    }

    if (req.request != "GET" && req.request != "HEAD") {
        // We only deal with GET and HEAD
        return (pass);
    }

    return (lookup);
}

sub vcl_error {
    // If status is 755, then we are forcing a redirect to https.
    if (obj.status == 755) {
        set obj.http.Location = req.http.Location;
        set obj.status = 301;
        return(deliver);
    }

    call errorpage;
    return (deliver);
}

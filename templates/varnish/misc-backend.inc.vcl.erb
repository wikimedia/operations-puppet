include "errorpage.inc.vcl";
include "misc-common.inc.vcl";

sub vcl_recv {
<% if @site_tier == "one" -%>
    if (req.http.Host == "git.wikimedia.org") {
        set req.backend = antimony;
    } elsif (req.http.Host == "doc.wikimedia.org" || req.http.Host == "integration.wikimedia.org") {
        set req.backend = gallium;
    } elsif (req.http.Host == "download.wikimedia.org") {
        set req.backend = dataset1001;
    } elsif (req.http.Host == "gerrit.wikimedia.org") {
        set req.backend = ytterbium;
    } elsif (req.http.Host == "performance.wikimedia.org" || req.http.Host == "graphite.wikimedia.org") {
        set req.backend = graphite1001;
    } elsif (req.http.Host == "logstash.wikimedia.org"){
        set req.backend = logstash;
    } elsif (req.http.Host == "query.wikidata.org"){
        set req.backend = wdqs;
    } elsif (req.http.Host == "releases.wikimedia.org") {
        set req.backend = caesium;
    } elsif (req.http.Host == "gdash.wikimedia.org") {
        set req.backend = krypton;
    } elsif (req.http.Host == "grafana.wikimedia.org" || req.http.host == "grafana-admin.wikimedia.org") {
        set req.backend = krypton;
    } elsif (req.http.Host == "parsoid-tests.wikimedia.org") {
        set req.backend = ruthenium;
    } elsif (req.http.Host == "horizon.wikimedia.org") {
        set req.backend = californium;
    } elsif (req.http.Host == "phabricator.wikimedia.org" || req.http.Host == "phab.wmfusercontent.org" || req.http.Host == "bugzilla.wikimedia.org" || req.http.Host == "bugs.wikimedia.org") {
        set req.backend = iridium;
    } elsif (req.http.Host == "static-bugzilla.wikimedia.org" || req.http.Host == "annual.wikimedia.org" || req.http.Host == "transparency.wikimedia.org") {
        set req.backend = bromine;
    } elsif (req.http.Host == "servermon.wikimedia.org") {
        set req.backend = netmon1001;
    } elsif (req.http.Host == "otrs-test.wikimedia.org") {
        set req.backend = mendelevium;
    } elsif (req.http.Host == "people.wikimedia.org") {
        set req.backend = rutherfordium;
    } elsif (req.http.Host == "rt.wikimedia.org") {
        set req.backend = magnesium;
    } elsif (req.http.Host == "metrics.wikimedia.org" || req.http.Host == "stats.wikimedia.org") {
        set req.backend = stat1001;
    } elsif (req.http.Host == "datasets.wikimedia.org") {
        set req.backend = stat1001;
    } elsif (req.http.Host == "config-master.wikimedia.org") {
        set req.backend = palladium;
    } elsif (req.http.Host == "noc.wikimedia.org" || req.http.Host == "dbtree.wikimedia.org") {
        set req.backend = noc;
    } elsif (req.http.Host == "scholarships.wikimedia.org" || req.http.Host == "iegreview.wikimedia.org" || req.http.Host == "racktables.wikimedia.org") {
        set req.backend = krypton;
    } elsif (req.http.Host == "hue.wikimedia.org") {
        set req.backend = analytics1027;
    }
    elsif (req.http.Host == "yarn.wikimedia.org") {
        set req.backend = analytics1001;
    }
    elsif (req.http.Host ~ ".*\.planet\.wikimedia\.org" || req.http.Host == "planet.wikimedia.org") {
        set req.backend = planet1001;
    } elsif (req.http.Host == "etherpad.wikimedia.org") {
        set req.backend = etherpad1001;
    } else {
        error 404 "Domain not served here";
    }
<% end -%> // end tier-1 backend selection

    call misc_recv_pass;

    return (lookup);
}

sub vcl_error {
    call errorpage;
    return (deliver);
}

sub vcl_fetch {
    call misc_fetch_large_objects;
}

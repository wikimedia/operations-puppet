include "errorpage.inc.vcl";

sub vcl_recv {
	if (req.http.Host == "git.wikimedia.org") {
		set req.backend = antimony;
		/* gitblit requires the following request headers: */
		set req.http.X-Forwarded-Proto = "https";
		set req.http.X-Forwarded-Port = "443";
	} elsif (req.http.Host == "doc.wikimedia.org" || req.http.Host == "integration.wikimedia.org") {
		set req.backend = gallium;
	} elsif (req.http.Host == "download.wikimedia.org") {
		set req.backend = dataset1001;
	} elsif (req.http.Host == "gerrit.wikimedia.org") {
		set req.backend = ytterbium;
	} elsif (req.http.Host == "gdash.wikimedia.org" || req.http.Host == "graphite.wikimedia.org" || req.http.Host == "performance.wikimedia.org") {
		set req.backend = tungsten;
	} elsif (req.http.Host == "logstash.wikimedia.org"){
		set req.backend = logstash;
	} elsif (req.http.Host == "releases.wikimedia.org") {
		set req.backend = caesium;
	} elsif (req.http.Host == "scholarships.wikimedia.org" || req.http.Host == "transparency.wikimedia.org") {
		set req.backend = zirconium;
	} elsif (req.http.Host == "parsoid-tests.wikimedia.org") {
		set req.backend = ruthenium;
	} elsif (req.http.Host == "legalpad.wikimedia.org") {
		set req.backend = radon;
	} elsif (req.http.Host == "phabricator.wikimedia.org" || req.http.Host == "phab.wmfusercontent.org") {
		set req.backend = iridium;
	} elsif (req.http.Host == "contacts.wikimedia.org") {
		set req.backend = zirconium;
	} elsif (req.http.Host == "svn.wikimedia.org") {
		set req.backend = antimony;
	} elsif (req.http.Host == "people.wikimedia.org") {
		set req.backend = terbium;
		/* no caching of public_html dirs */
		return (pass);
	} else {
		error 404 "Domain not served here";
	}

	if (req.request != "GET" && req.request != "HEAD") {
		/* We only deal with GET and HEAD */
		return (pass);
	}

	return (lookup);
}

sub vcl_error {
	call errorpage;
	return(deliver);
}

#!/bin/sh
# This file is managed by puppet. DO NOT EDIT

<%- if @mysql_binary -%>
MYSQL=<%= @mysql_binary %>
<%- else -%>
MYSQL=/usr/bin/mysql
<%- end -%>
<%- if @mysqldump_binary -%>
MYSQLDUMP=<%= @mysqldump_binary %>
<%- else %>
MYSQLDUMP=/usr/bin/mysqldump
<%- end -%>
DATE=$(date "+%Y%m%d%H%M")

# Let's be polite and not use all available processors
PIGZ="/usr/bin/pigz -p <%= Integer(@processorcount)/8 > 1 ? Integer(@processorcount)/8 : 1 %> "
PIGZD="/usr/bin/pigz -d"
<% if @pigz_level -%>
PIGZ="$PIGZ --<%= @pigz_level -%>"
<% end -%>
<% if @password_file -%>
# This is just for a user with credentials to connect to the database
MYSQL="$MYSQL --defaults-extra-file=<%= @password_file -%> "
MYSQLDUMP="$MYSQLDUMP --defaults-extra-file=<%= @password_file -%> "
<% end -%>
<% if @innodb_only -%>
# Provided we only have innodb tables --single-transcation works wonders
MYSQLDUMP="$MYSQLDUMP --single-transaction "
<% end -%>

find <%= @local_dump_dir %> -name "*sql.gz" -mtime +15 -exec rm {} \;
for database in `$MYSQL -B -N -e "select schema_name from information_schema.schemata where schema_name not like '%\_schema'"`
do
	NP=$((<%= @processorcount %> * 3 / 4)) # This is guaranteed to return an integer

    # Previously this used jobs/wait, but:
    # a) job control may be off in a non-interactive script, especially for /bin/sh
    # b) job control apparently has no option to wait for /any/ child process to die
    while [ $(pgrep mysqldump | wc -l) -ge $NP ]
    do
        sleep 1m
    done

	$MYSQLDUMP --create-options -c $database | $PIGZ > <%= @local_dump_dir %>/$database-$DATE.sql.gz &
done
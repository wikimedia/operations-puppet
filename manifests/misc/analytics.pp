# NOTE:  Contents of this file will be moved to
# modules/kraken once the analytics branch of puppet
# has been reviewed and merged into production.

# == Class analytics::misc::haproxy
# Uses haproxy to set up a proxy to
# internally hosted web services.
#
# TODO: Try Apache mod_http_proxy
#
# Since href links are generated by internal servers and not rewritten,
# occasionally links will point directly at backend server names and ports.
# this breaks when using haproxy, since haproxy is doing name based
# proxying on port 80.
#
# See: https://www.mediawiki.org/wiki/Analytics/Kraken/Access
# for more information.
#
class misc::analytics::proxy {
	# TODO:  Use defined variables from modules/kraken classes
	# once analytics branch is merged into production.

	# list of networks and IPs to allow
	# use of Analytics public proxy services
	# without HTTP auth password
	$whitelist = {
		"analyticsA"    => "10.64.21.0/24",
		"analyticsB"    => "10.64.36.0/24",
		"wmf_office"    => "216.38.130.0/24",
		"diederik"      => "70.28.63.126",
		"dsc"           => "71.198.62.242",
	}

	# haproxy listen port
	$port              = 80

	$namenode_hostname = "analytics1010.eqiad.wmnet"
	# $namenode_hostname = $kraken::hadoop::config::namenode_hostname
	
	$datanode_hostname = "analytics1011.eqiad.wmnet" # can pick any datanode here.
	$frontend_hostname = "analytics1027.eqiad.wmnet"

	$hue_hostname      = $frontend_hostname
	$oozie_hostname    = $frontend_hostname
	$storm_hostname    = "analytics1002.eqiad.wmnet"
	$storm_port        = 6999
	# $storm_hostname    = $kraken::storm::nimbus_host
	# $storm_port        = $kraken::storm::ui_port

	$graphite_hostname  = "analytics1008.eqiad.wmnet"
	$graphite_dash_port = "80"
	$riemann_hostname   = "analytics1008.eqiad.wmnet"
	$riemann_dash_port  = "8081"
	$riemann_ws_port    = "5556"

	package { "haproxy": ensure => "installed" }

	file { "/etc/haproxy/haproxy.cfg":
		content => template("kraken/haproxy.cfg.erb"),
		require => Package["haproxy"],
	}

	service { "haproxy":
		ensure    => running,
		enable    => true,
		subscribe => File["/etc/haproxy/haproxy.cfg"],
	}
}
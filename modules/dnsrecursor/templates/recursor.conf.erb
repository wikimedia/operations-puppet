<%
    def flatten_ips(ips)
        result = []
        if ips.is_a?(Hash) then
            ips.sort.map do |k, v|
                result += flatten_ips(v)
            end
        elsif ips.is_a?(Array) then
            ips.each do |v|
                result += flatten_ips(v)
            end
        else
            result << ips
        end
        return result
    end
-%>
# --- Functional basics ---

config-dir=/etc/powerdns/
setgid=pdns
setuid=pdns
daemon=yes
socket-dir=/var/run/
export-etc-hosts=<%= @export_etc_hosts %>

# --- Listen IPs, allowed clients, local zones+authdns ---

# local-address	IP addresses to listen on, separated by spaces or commas
local-address=<%= flatten_ips(@listen_addresses).sort.join(" ") %>
local-port=53

# If set, only allow these comma separated netmasks to recurse
allow-from=127.0.0.0/8, ::1/128, <%= (@allow_from + flatten_ips(@listen_addresses)).join(", ") %>

# Zones for which we forward queries, comma separated domain=ip pairs
forward-zones=<%= @forward_zones -%>, <%= @additional_forward_zones -%>

# we need ECS to ensure our geoip resolution (e.g. for discovery hostnames) works correctly regardless of which recursor (x-dc) a client uses
# XXX templatize this!
# XXX 4.x-only! (do we have trusty recdns anywhere?)
edns-subnet-whitelist=208.80.154.238/32, 208.80.153.231/32, 91.198.174.239/32

<% if @lua_hooks -%>
# lua scripts allow extending the resolver
# with custom behavior
lua-dns-script=/etc/powerdns/recursorhooks.lua
<% end -%>

# zones for which we have authoritative data, comma separated domain=file pairs 
<% if @auth_zones -%>
auth-zones=<%= @auth_zones -%>
<% end -%>

# --- Cache Params ---

max-cache-entries=<%= @max_cache_entries %>
max-negative-ttl=<%= @max_negative_ttl %>

# --- Public-facing things ---

# This prevents pdns from polling a public server to check for sec fixes
# XXX 4.x-only!
security-poll-suffix=

# which domains we only accept delegations from
delegation-only=com,net

# Root hints distributed by Debian
hint-file=/usr/share/dns/root.hints

# --- Scaling / Limits ---

# For now (4.0.x), we want to keep threads to a more-reasonable value like 4
# because they're sharing a socket and waking up under thundering-herd
# behavior.
# Later (4.1), we can raise threads to 8+ (1/core) and leave the rest of the
# settings below the same, and the recursor will properly use separate
# reuseport sockets

# XXX ulimits for systemd unit need adjusting, too (16K-ish for our case)
threads=4
pdns-distributes-queries=no
reuseport=yes
# XXX for 3.x, should reduce this to threads=2 max-mthreads=512 like before and not include the options above

# TCP tuning/limits
max-tcp-clients=<%= @max_tcp_clients %>
max-tcp-per-client=<%= @max_tcp_per_client %>
client-tcp-timeout=<%= @client_tcp_timeout %>

# --- Logging ---

log-common-errors=yes
# suppress logging of questions and answers
quiet=yes
# trace	if we should output heaps of logging
trace=off

-- This script comes from puppet: modules/dnsrecursor/templates/metaldns.lua.erb.
--
-- It inserts a few select entries for labs metal DNS resolution.
--
-- This is handled here rather than in designate because it's easier to puppetize
--  this file than to insert things into designate from puppet, and currently
--  puppet/hiera contains the canonical representation of bare metal hosts and names.

ARecords = {}
PTRRecords = {}

<% @labs_metal.sort.map do |k,v| -%>
ARecords["<%= k %>.<%= @site %>.<%= @tld %>."] = "<%= v['IPv4'] %>"
ARecords["<%= k %>.<%= v['project'] %>.<%= @site %>.<%= @tld %>."] = "<%= v['IPv4'] %>"
PTRRecords["<%= v['IPv4'].split('.').reverse().join('.') %>.in-addr.arpa."] = "<%= k %>.<%= v['project'] %>.<%= @site %>.<%= @tld %>."
<% end -%>

function postresolve (remoteip, domain, qtype, records, origrcode)
    if ((qtype == pdns.PTR or qtype == pdns.ANY) and PTRRecords[domain]) then
        return 0, {{qtype=pdns.PTR, content=(PTRRecords[domain]), ttl=300}}
    end

    if ((qtype == pdns.A or qtype == pdns.ANY) and ARecords[domain]) then
        return 0, {{qtype=pdns.A, content=(ARecords[domain]), ttl=300}}
    end

    -- Prevent NXDOMAIN if the domain exists, we just don't have a record of the matching type.
    if (ARecords[domain] or PTRRecords[domain]) then
        return 0, records
    end

    return origrcode, records
end

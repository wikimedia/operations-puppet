varnishtest "cache_text rate limiting"

server s1 {
    loop 25 {
        rxreq
        # Cached responses are not rate limited, send CC: private
        txresp -hdr "Cache-Control: private"
    }
} -start

varnish v1 -arg "-p vcl_path=${vcl_path} -p vcc_err_unref=false -p vcc_allow_inline_c=true -p cc_command='${cc_command}'" -vcl+backend {
   backend vtc_backend {
       .host = "${s1_addr}"; .port = "${s1_port}";
   }

   include "${basepath}/usr/share/varnish/tests/wikimedia_misc-frontend.vcl";
}

# Attach the "wikimedia_misc" label to wikimedia_misc-frontend.vcl
varnish v1 -cli "vcl.label wikimedia_misc vcl1"

varnish v1 -vcl {
    backend vtc_backend {
        .host = "${s1_addr}"; .port = "${s1_port}";
    }

    include "${basepath}/usr/share/varnish/tests/wikimedia_text-frontend.vcl";
} -start

client c1 {
    # First 25 requests are fine
    loop 25 {
        txreq -hdr "Host: en.wikipedia.org" -hdr "User-Agent: varnishTest" -hdr "X-Forwarded-Proto: https"
        rxresp
        expect resp.status == 200
    }

    # The 26th request gets rate limited
    txreq -hdr "Host: en.wikipedia.org" -hdr "User-Agent: varnishTest" -hdr "X-Forwarded-Proto: https"
    rxresp
    expect resp.status == 429
    expect resp.reason == "Too Many Requests"
    # test the body
    expect resp.body ~ "<p>Too Many Requests"
    # test the footer
    expect resp.body ~ "<code>Request from"
    expect resp.http.Retry-After == 1
} -run

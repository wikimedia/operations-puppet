// common to upload front+backend VCL

sub upload_common_recv {
	unset req.http.X-Range;
	if (req.http.host != "<%= @vcl_config.fetch('upload_domain') %>") {
		return (synth(404, "Requested domainname does not exist on this server"));
	}

	if (req.http.Range) {
		set req.hash_ignore_busy = true;
	}
}

sub upload_common_hit {
	if (req.http.If-Cached && req.http.If-Cached != obj.http.Etag) {
		return (synth(412, "Etag mismatch"));
	}
}

sub upload_common_miss {
    // Convert range requests into pass
    if (req.http.Range) {
        call upload_common_set_xrange;
        return (pass);
    }
}

sub upload_common_deliver {
	if (resp.http.X-Content-Range) {
		set resp.http.Content-Range = resp.http.X-Content-Range;
		unset resp.http.X-Content-Range;
	}
}

sub upload_common_backend_response {
	// Debugging T144257. Don't cache 200 responses with CL:0.
	if (beresp.http.Content-Length == "0" && beresp.status == 200) {
		set beresp.ttl = 0s;
		set beresp.uncacheable = true;
	}
}

// Varnish strips the Range header before copying req into bereq. Save it into
// a header and restore it in upload_common_set_range
sub upload_common_set_xrange {
	if (req.http.Range) {
		set req.http.X-Range = req.http.Range;
	}
}

sub upload_common_set_range {
	if (bereq.http.X-Range) {
		set bereq.http.Range = bereq.http.X-Range;
		unset bereq.http.X-Range;
	}
}

// common backend code for all clusters
include "wikimedia-common.inc.vcl";

sub vcl_init {
	call wm_common_directors_init;
}

sub vcl_recv {
	if (client.ip !~ wikimedia_nets) {
		// Do not allow direct access to non-frontend layers
		<%= error_synth(403, "Access denied") %>
	}

	call wm_common_recv;
	call wm_common_recv_purge;
	call cluster_be_recv;

	return (lookup); // no default VCL
}

sub vcl_hash {
	call cluster_be_hash;
	// default vcl_hash invokes here!
}

<% if @varnish_version4 -%>
// http://book.varnish-software.com/4.0/chapters/Cache_Invalidation.html
sub vcl_purge {
	return (synth(204, "Purged"));
}
<% end -%>

sub vcl_hit {
	call wm_common_hit;
	call cluster_be_hit;
	return (deliver); // no default VCL (which is just "return (deliver)" anyways)
}

sub vcl_miss {
	call wm_common_miss;
	call cluster_be_miss;
	return (fetch); // no default VCL (which is just "return (fetch)" anyways)
}

sub vcl_pass {
	call wm_common_pass;

<% if @site_tier == "two" -%>
	// pass-traffic should not use consistent hashing, to avoid unecessary
	// traffic focus on one node and keep things performant
	<% if @varnish_version4 -%>
	set req.backend_hint = backend_random.backend();
	<% else -%>
	set req.backend = backend_random;
	<% end -%>
<% end -%>

	call cluster_be_pass;
	return (pass); // no default VCL (which is just "return (pass)" anyways)
}

<% if @varnish_version4 -%>
sub vcl_backend_response {
<% else -%>
sub vcl_fetch {
<% end -%>
	call wm_common_backend_response;
	call cluster_be_backend_response;
	// default vcl_(fetch|backend_response) invokes here, unless cluster VCL unconditionally returns!
}

sub vcl_deliver {
	call wm_common_deliver;
	call cluster_be_deliver;
	return (deliver); // no default VCL (which is just "return (deliver)" anyways)
}

<% if @varnish_version4 -%>

// Varnish4 vcl_synth+vcl_backend_error

sub vcl_synth {
	if (resp.status > 400 && resp.status != 413) {
		call synth_errorpage;
	}
	return (deliver);
}

sub vcl_backend_error {
	if (beresp.status > 400 && beresp.status != 413) {
		call synth_errorpage;
	}
	return (deliver);
}

<% else -%>

// Varnish3 vcl_error
sub vcl_error {
	call wm_common_v3_purge_error;
	if (obj.status > 400 && obj.status != 413) {
		call synth_errorpage;
	}
	return (deliver);
}

<% end -%>

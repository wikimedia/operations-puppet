<%
# Calculates number of director-level retries necessary for chash to hit all
# "n" backends with probability percentage "p", given they're randomly-mixed
# into an array considerably larger in size than "n".  This is an
# overestimation in that it assumes an infinite array, but the values still
# come out reasonably small compared to doing anything based on our actual
# weight*num_backends.
# Blame _joe_ for the math! :)
def chash_def_retries(p, n)
    return n if n == 1
	return ((Math.log10(100 - p) - 2) / (Math.log10(n - 1) - Math.log10(n))).ceil
end
-%>

<% @directors.keys.sort.each do |director_name|
director = @directors[director_name]
if director['dynamic'] == 'yes' -%>
<% if director['type'] == 'vslp' -%>
new <%= director_name %> = vslp.<%= director['type'] %>();
<% else -%>
new <%= director_name %> = directors.<%= director['type'] %>();
<% end -%>
<%- keyspace = "#{@conftool_namespace}/#{director['dc']}/#{@group}/#{director['service']}" -%>
	{{range $node := ls "<%= keyspace %>/"}}{{ $key := printf "<%= keyspace %>/%s" $node }}{{ $data := json (getv $key) }}{{ if eq $data.pooled "yes"}}
	<% if director['type'] == 'vslp' -%>
    <%= director_name %>.add_backend(be_{{ $parts := split $node "." }}{{ join $parts "_" }});
    <% else -%>
    <%= director_name %>.add_backend(be_{{ $parts := split $node "." }}{{ join $parts "_" }}, {{ $data.weight }});
    <% end -%>
	{{end}}{{end}}
<% if director['type'] == 'vslp' -%>
<%= director_name %>.init_hashcircle(150);
<% end -%>
<% end # if director['dynamic'] == 'yes' %>
<% end # directors loop %>

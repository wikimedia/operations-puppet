# SPDX-License-Identifier: Apache-2.0
#####################################################################
### THIS FILE IS MANAGED BY PUPPET
### puppet:///modules/profile/doc/httpd-doc.wikimedia.org.conf
#####################################################################
# vim: filetype=apache
#
# You can add httpbb functional tests to:
#
#   modules/profile/files/httpbb/doc/test_doc.yaml
#
# Once deployed with Puppet, you can run the tests from deployment.eqiad.wmnet
#
#   cd /srv/deployment/httpbb-tests
#   httpbb --hosts doc1003.eqiad.wmnet,doc2002.codfw.wmnet doc/test_doc.yaml
#   >>>
#   Sending to 2 hosts...
#   PASS: 10 requests sent to each of 2 hosts. All assertions passed.

# Where CI publishes the generated documentation
<IfDefine !WMF_DOC_PATH>
    Define WMF_DOC_PATH /srv/docroot/org/wikimedia/doc
</IfDefine>

<VirtualHost *:80>
    ServerName https://doc.wikimedia.org

    LogLevel warn
    ErrorLog /var/log/apache2/doc_error.log
    CustomLog /var/log/apache2/doc_access.log cee_ecs_accesslog_170

    SetEnv WMF_DOC_PATH ${WMF_DOC_PATH}

    # integration/docroot.git deployed by scap at /srv/deployment/integration
    DocumentRoot /srv/deployment/integration/docroot/org/wikimedia/doc

    RewriteEngine On

    # Lower caching length (T184255)
    Header set Cache-Control "s-maxage=3600, must-revalidate, max-age=0"

    # CSP to sandbox content (T213223)
    # Allow XHR requests to enwiki and Wikidata (T285570)
    # Allow blob: and WASM script-src for taint-check-demo (T257301)
    Header always set Content-Security-Policy "\
        default-src 'self' data:; \
        img-src 'self' upload.wikimedia.org data: piwik.wikimedia.org; \
        object-src 'none'; \
        script-src  blob: 'unsafe-inline' 'unsafe-eval' 'wasm-eval' 'self' piwik.wikimedia.org; \
        style-src 'unsafe-inline' 'self'; \
        connect-src 'self' en.wikipedia.org www.wikidata.org wikimedia.org; \
        form-action 'self' en.wikipedia.org www.wikidata.org; \
        "

    # Back-compat for T73060: Redirect mediawiki-core/master/php/html/ to mediawiki-core/master/php/
    RewriteRule ^mediawiki-core/master/php/html/(.*)$ https://doc.wikimedia.org/mediawiki-core/master/php/$1 [L,QSA]

    # Back-compat for T246042
    RewriteRule ^/mediawiki-extensions-CollaborationKit/(.*)$ /CollaborationKit/$1 [L,R]
    RewriteRule ^/mediawiki-extensions-Wikibase/(.*)$ /Wikibase/$1 [L,R]

    # Back-compat for scap T315541
    RewriteRule ^/mw-tools-scap/(.*)$ /scap/$1 [L,R]

    # shorter URL for analytics-API T368482
    RewriteRule "^/analytics-api/?$" "/generated-data-platform/aqs/analytics-api/" [L,NC,R=301]

    DirectoryIndex index.html index.php

    # In a VirtualHost REQUEST_FILENAME is not known yet and initially
    # contains the REQUEST_URI.

    # When the requested URI is not available in our webapp:
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} !-f
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} !-d
    # Then internally redirect to CI published material under WMF_DOC_PATH
    RewriteRule ^(.+) ${WMF_DOC_PATH}$1

    # CI generated documents published under WMF_DOC_PATH
    #
    # DirectoryIndex would be neater but did not work properly under Apache 2.2
    <Directory "${WMF_DOC_PATH}">
        RewriteCond %{REQUEST_FILENAME} -d
        RewriteCond %{REQUEST_FILENAME}/index.php !-f
        RewriteCond %{REQUEST_FILENAME}/index.html !-f
        RewriteRule .* %{DOCUMENT_ROOT}/dir.php
    </Directory>

    <Directory />
        Require all granted
    </Directory>

    <IfModule mod_mime.c>
      AddType application/x-zip .war
      AddType application/octet-stream .ipa
      AddType text/plain .pp .erb .conf .yaml
    </IfModule>

    # PHP-FPM for .php files
    <FilesMatch \.php$>
      SetHandler "proxy:unix:/run/php/${WMF_DOC_PHP_VERSION}-fpm.sock|fcgi://localhost/"
    </FilesMatch>

</VirtualHost>

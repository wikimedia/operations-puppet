#!/bin/bash
#
# Shell script that takes care of running authdns-local-update for each
# nameserver via SSH, optionally skipping failed ones.
#
# Written by Faidon Liambotis, Jul 2013 based on previous work by Mark Bergsma

set -e

CONFFILE=/etc/wikimedia-authdns.conf

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# Source the configuration file
[ -f $CONFFILE ] && . $CONFFILE

# Per-node timeouts: 10s connect + 45s execution
CLUSH_OPTIONS="-S -B -n -t 10 -u 45"
SSH_OPTIONS="-l authdns -i /srv/authdns/.ssh/id_ed25519 -F /srv/authdns/.ssh/config -oCheckHostIP=no -oUserKnownHostsFile=/dev/null"

if [ -z "$NAMESERVERS" -o -z "$FQDN" ]; then
    echo "Missing config file options, system misconfigured"
    exit 1
fi

SKIP=""
while [ -n "$1" ]; do
    if [ "$1" = "-s" ]; then
        # Skip the following slaves
        SKIP="$SKIP $2"
    fi
    shift
done

# Only update the current host if it is pooled and in $NAMESERVERS. Otherwise,
# we don't allow running authdns-update as the human review part of the process
# fails as all the other hosts are updated non-interactively.
for host in $NAMESERVERS; do
    if [ "$FQDN" = "$host" ]; then
        host_pooled=true
        break
    fi
done

if [ "$host_pooled" = true ] ; then
    # update the local instance first -- this may call a review interactively
    echo "Updating $FQDN (self)..."
    # this might seem silly at first, ssh'ing to self; however, this is a paranoid
    # step to ensure that we're running in the exact same way as the slaves and if
    # it fails, it fail for all of them, instead of having a split-brain.
    ssh $SSH_OPTIONS $FQDN authdns-local-update
else
    echo "Unable to run authdns-update from this host: $FQDN is not pooled. Please pick another host!"
    exit 1
fi

OTHERS_OPT=""
for other in $NAMESERVERS; do
    if [ "$FQDN" = "$other" ]; then
        continue
    fi
    for skip in $SKIP; do
        if [ "$skip" = "$other" ]; then
            echo ""; echo "Skipping $other."
            continue 2
        fi
    done
    OTHERS_OPT="${OTHERS_OPT} -w ${other}"
done

clush $CLUSH_OPTIONS -o "${SSH_OPTIONS}" $OTHERS_OPT authdns-local-update $FQDN

echo ""; echo "OK - authdns-update successful on all nodes!"

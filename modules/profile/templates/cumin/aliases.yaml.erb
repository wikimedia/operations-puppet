all: P{*}
# Sites
<% @datacenters.each do |dc| -%>
<%= dc %>: P{P:cumin::target%site = <%= dc %>}
<% end -%>
edges: A:esams or A:ulsfo or A:eqsin or A:drmrs or A:magru

# Distros
<% ['buster', 'bullseye', 'bookworm'].each do |distro| -%>
<%= distro %>: P{F:lsbdistcodename = <%= distro %>}
<% end -%>

vms: P{F:virtual=kvm}

# Server group definitions
acmechief: P{O:acme_chief}
all-mw: A:mw-api or A:mw or A:mw-jobrunner or A:parsoid
all-mw-codfw: A:all-mw and A:codfw
all-mw-eqiad: A:all-mw and A:eqiad
all-etcd: P{P:etcd::v3}
an-conf: P{O:analytics_cluster::zookeeper}
an-all-eqiad: A:hadoop-all or A:hadoop-testcluster or A:aqs or A:druid or A:kafka-jumbo or A:misc-analytics or A:an-airflow or A:an-tools or A:an-web or A:an-presto or A:an-launcher
an-airflow: P{O:analytics_cluster::airflow::research or O:analytics_cluster::airflow::platform_eng_legacy or O:analytics_cluster::airflow::platform_eng or O:analytics_cluster::airflow::search or O:analytics_cluster::airflow::analytics_product or O:analytics_cluster::airflow::wmde} or A:an-launcher
an-launcher: P{O:analytics_cluster::launcher}
an-mariadb: P{O:analytics_cluster::mariadb}
an-tools: P{O:analytics_cluster::hadoop::ui or O:analytics_cluster::turnilo or O:analytics_cluster::turnilo::staging or O:analytics_cluster::ui::superset or O:analytics_cluster::ui::superset::staging or O:analytics_cluster::ui::staging or O:analytics_cluster::hadoop::yarn}
an-web: P{O:analytics_cluster::webserver}
an-psql: P{O:analytics_cluster::postgresql}
an-presto: P{O:analytics_cluster::presto::server}
an-presto-canary: P{an-presto1001.eqiad.wmnet}
an-presto-test: P{O:analytics_test_cluster::presto::server}
apifeatureusage: P{O:apifeatureusage::logstash}
apt: P{O:apt_repo}
apt-staging: P{O:apt_staging}
apt-all: A:apt or A:apt-staging
aqs: P{O:aqs}
aqs-eqiad: A:aqs and A:eqiad
aqs-codfw: A:aqs and A:codfw
aqs-canary: P{aqs1010.eqiad.wmnet}
archiva: P{O:archiva}
aux-etcd: P{O:etcd::v3::aux_k8s_etcd}
aux-master: P{O:aux_k8s::master}
aux-worker: P{O:aux_k8s::worker}
aux-k8s: A:aux-master or A:aux-etcd or A:aux-worker
backup: A:bacula or A:db-backups or A:mediabackups or P{O:dbbackups::monitoring}
bacula: P{O:backup::offsite or O:backup or O:backup::es or O:backup::databases or O:backup::production}
bastion: P{O:bastionhost}
bastion-canary: P{bast4005.wikimedia.org}
centrallog: P{O:syslog::centralserver}
cephosd: P{O:ceph::server}
chartmuseum: P{O:chartmuseum}
cloudelastic: P{O:elasticsearch::cloudelastic}
cloudbackup: P{O:wmcs::openstack::eqiad1::instance_backups} or P{O:wmcs::openstack::eqiad1::cinder_backups} or P{O:wmcs::openstack::codfw1dev::cinder_backups}
cloudcontrol: P{O:wmcs::openstack::eqiad1::control}
cloudcontrol-eqiad1: P{O:wmcs::openstack::eqiad1::control}
cloudcephmon: P{O:wmcs::ceph::mon}
cloudcephmon-eqiad1: P{O:wmcs::ceph::mon} and A:eqiad
cloudcephosd: P{O:wmcs::ceph::osd}
cloudcephosd-eqiad1: P{O:wmcs::ceph::osd} and A:eqiad
cloudceph: A:cloudcephmon or A:cloudcephosd
cloudcephosd-codfw: A:cloudcephosd and A:codfw
cloudcephmon-codfw: A:cloudcephmon and A:codfw
cloudceph-codfw: A:cloudcephosd-codfw or A:cloudcephmon-codfw
cloudceph-eqiad1: A:cloudcephmon-eqiad1 or A:cloudcephosd-eqiad1
clouddumps: P{O:dumps::distribution::server}
cloudgw: P{O:wmcs::cloudgw} and A:eqiad
cloudlb: P{O:wmcs::cloudlb}
cloudnet: P{O:wmcs::openstack::eqiad1::net}
cloudnet-eqiad1: P{O:wmcs::openstack::eqiad1::net}
cloudrabbit: P{O:wmcs::openstack::eqiad1::rabbitmq}
cloudservices: P{O:wmcs::openstack::eqiad1::services}
cloudservices-eqiad1: P{O:wmcs::openstack::eqiad1::services}
cloudvirt: P{O:wmcs::openstack::eqiad1::virt or O:wmcs::openstack::eqiad1::virt_ceph}
cloudvirt-eqiad1: P{O:wmcs::openstack::eqiad1::virt or O:wmcs::openstack::eqiad1::virt_ceph}
cloudweb: P{O:wmcs::openstack::eqiad1::cloudweb}
cloud-eqiad1: A:cloudcontrol-eqiad1 or A:cloudnet-eqiad1 or A:cloudservices-eqiad1 or A:cloudvirt-eqiad1 or A:cloudceph-eqiad1
cloudcontrol-codfw1dev: P{O:wmcs::openstack::codfw1dev::control}
cloudnet-codfw1dev: P{O:wmcs::openstack::codfw1dev::net}
cloudservices-codfw1dev: P{O:wmcs::openstack::codfw1dev::services}
cloudvirt-codfw1dev: P{O:wmcs::openstack::codfw1dev::virt_ceph}
clouddb-codfw1dev: P{O:wmcs::openstack::codfw1dev::db}
cloudgw-codfw1dev: P{O:wmcs::cloudgw} and A:codfw
cloud-codfw1dev: A:cloudcontrol-codfw1dev or A:cloudnet-codfw1dev or A:cloudservices-codfw1dev or A:cloudvirt-codfw1dev or A:clouddb-codfw1dev or A:cloudgw-codfw1dev or A:cloudceph-codfw or P{O:wmcs::openstack::codfw1dev::cloudweb} or P{O:wmcs::openstack::codfw1dev::backups}
conf: P{O:configcluster}
conf-canary: P{conf2004.codfw.wmnet}
conf-codfw: A:conf and A:codfw
conf-eqiad: A:conf and A:eqiad
config-master: P{O:config_master}
config-master-eqiad: A:config-master and A:eqiad
config-master-codfw: A:config-master and A:codfw
contint: P{O:ci}
cp: A:cp-upload or A:cp-text
cp-upload: P{O:cache::upload}
cp-text: P{O:cache::text}
<% @datacenters.each do |dc| -%>
cp-<%= dc %>: A:cp and A:<%= dc %>
<% [ 'text', 'upload' ].each do |cache| -%>
cp-<%= cache %>_<%= dc %>: A:cp-<%= cache %> and A:<%= dc %>
<% end -%>
<% end -%>
cloudcumin: P{O:cluster::cloud_management}
cumin: P{O:cluster::management}
cuminunpriv: P{O:cluster::unprivmanagement}
cumin-all: A:cumin or A:cuminunpriv or A:cloudcumin
datahubsearch: P{O:analytics_cluster::datahub::opensearch}
db-all: A:db-core or A:db-inventory or A:db-misc or A:db-parsercache or A:db-sanitarium or A:db-backup-source or A:db-store or A:db-core-test or A:db-objectstash or A:wikireplicas-all
db-multiinstance: P{O:mariadb::core_multiinstance or O:mariadb::misc::analytics::backup or O:mariadb::misc::multiinstance} or A:db-sanitarium or A:db-backup-source or A:db-store
db-core: P{O:mariadb::core or O:mariadb::core_multiinstance or O:mariadb::sanitarium_master}
db-core-test: P{O:mariadb::core_test}
db-inventory: P{O:mariadb::misc::db_inventory}
db-misc: P{O:mariadb::misc or O:mariadb::misc::multiinstance or O:mariadb::misc::phabricator or O:mariadb::misc::analytics::backup}
db-objectstash: P{O:mariadb::objectstash}
db-parsercache: P{O:mariadb::parsercache}
db-sanitarium-master: P{O:mariadb::sanitarium_master}
db-sanitarium: P{O:mariadb::sanitarium_multiinstance}
db-backup-source: P{O:mariadb::backup_source}
db-store: P{O:mariadb::analytics_replica}
<% @mariadb_roles.each do |role| -%>
db-role-<%= role %>: P{P:mariadb::mysql_role%role = <%= role %>}
<% end -%>
<% @mariadb_sections.each do |section| -%>
<% unless section.start_with?("test-") or section == "tendril" -%>
db-section-<%= section %>: P{R:profile::mariadb::section%section = <%= section %>}
<% end -%>
<% end -%>
db-backups: P{O:dbbackups::metadata or O:dbbackups::content}
db-proxy: P{O:mariadb::proxy::master or O:mariadb::proxy::replicas}
debmonitor: P{O:debmonitor::server}
deployment-servers: P{O:deployment_server}
dns-auth: P{R:Class = profile::dns::auth}
dns-auth-canary: P{dns1004.wikimedia.org}
dns-rec: P{R:Class = profile::dns::recursor}
dns-rec-canary: P{dns2004.wikimedia.org}
dnsbox: P{O:dnsbox}
dnsbox-canary: P{dns1004.wikimedia.org}
doc: P{O:doc}
docker-registry: P{O:docker::registry or O:docker_registry_ha::registry}
dragonfly-peer: P{R:Class = dragonfly::dfdaemon}
dragonfly-supernode: P{O:dragonfly::supernode}
druid-analytics: P{O:druid::analytics::worker}
druid-public: P{O:druid::public::worker}
druid: A:druid-analytics or A:druid-public
druid-canary: P{an-druid1003.eqiad.wmnet}
druid-test: P{O:druid::test_analytics::worker}
dse-k8s-etcd: P{O:etcd::v3::dse_k8s_etcd}
dse-k8s-master: P{O:dse_k8s::master}
dse-k8s-worker: P{O:dse_k8s::worker}
dse-k8s: A:dse-k8s-master or A:dse-k8s-worker
dumps: P{O:dumps::generation::server:alldumps or O:dumps::generation::server::misccrons or O:dumps::generation::server::xmldumps or O:dumps::generation::server::xmlfallback or O:dumps::web::htmldumps or O:dumps::generation::server::spare}
durum: P{O:durum}
<% @datacenters.each do |dc| -%>
durum-<%= dc %>: A:durum and A:<%= dc %>
<% end -%>
elastic: P{O:elasticsearch::cirrus}
elastic-canary: P{elastic1102.eqiad.wmnet}
elastic-codfw: A:elastic and A:codfw
elastic-eqiad: A:elastic and A:eqiad
elastic-codfw-omega: P{R:Service = elasticsearch_7@production-search-omega-codfw}
elastic-codfw-psi: P{R:Service = elasticsearch_7@production-search-psi-codfw}
elastic-eqiad-omega: P{R:Service = elasticsearch_7@production-search-omega-eqiad}
elastic-eqiad-psi: P{R:Service = elasticsearch_7@production-search-psi-eqiad}
etherpad: P{O:etherpad}
eventlogging: P{O:eventlogging::analytics}
failoid: P{O:failoid}
ganeti: P{O:ganeti}
ganeti-all: A:ganeti or A:ganeti-test or A:ganeti-routed
ganeti-test: P{O:ganeti_test}
ganeti-routed: P{O:ganeti_routed}
<% @datacenters.each do |dc| -%>
ganeti-<%= dc %>: A:ganeti and A:<%= dc %>
<% end -%>
gerrit: P{O:gerrit}
gitlab-server: P{O:gitlab}
gitlab-runner: P{O:gitlab_runner}
gitlab: A:gitlab-server or A:gitlab-runner
grafana: P{O:grafana}
graphite: P{O:graphite::production}
hadoop: A:hadoop-worker or A:hadoop-master or A:hadoop-standby
hadoop-all: A:hadoop or A:hadoop-coordinator
hadoop-test: A:hadoop-worker-test or A:hadoop-master-test or A:hadoop-standby-test or A:hadoop-coordinator-test or A:hadoop-ui-test or A:hadoop-client-test
hadoop-all-test: A:hadoop-test or A:hadoop-coordinator-test
hadoop-coordinator: P{O:analytics_cluster::coordinator}
hadoop-coordinator-test: P{O:analytics_test_cluster::coordinator}
hadoop-hdfs-journal: P{C:bigtop::hadoop::journalnode} and A:hadoop-worker
hadoop-master: P{O:analytics_cluster::hadoop::master}
hadoop-standby: P{O:analytics_cluster::hadoop::standby}
hadoop-master-test: P{O:analytics_test_cluster::hadoop::master}
hadoop-standby-test: P{O:analytics_test_cluster::hadoop::standby}
hadoop-worker: P{O:analytics_cluster::hadoop::worker}
hadoop-worker-canary: P{an-worker1100.eqiad.wmnet}
hadoop-worker-test: P{O:analytics_test_cluster::hadoop::worker}
hadoop-hdfs-journal-test: P{C:bigtop::hadoop::journalnode} and A:hadoop-worker-test
hadoop-testcluster: A:hadoop-test or A:hadoop-client-test or A:hadoop-ui-test or A:druid-test or A:an-presto-test
hadoop-client: P{O:statistics::explorer}
hadoop-client-test: P{O:analytics_test_cluster::client}
hadoop-ui: A:hadoop-yarn
hadoop-yarn: P{O:analytics_cluster::hadoop::yarn}
hadoop-ui-test: P{O:analytics_test_cluster::hadoop::ui}
icinga: P{O:alerting_host}
idm: P{O:idm} or A:idm-test
idm-test: P{O:idm_test}
idp: P{O:idp} or A:idp-test
idp-test: P{O:idp_test}
idp-build: P{O:idp_build}
insetup: P{O:insetup::serviceops or O:insetup::collaboration_services or O:insetup::data_engineering or O:insetup::wmcs or O:insetup::unowned or O:insetup::search_platform or O:insetup::observability or O:insetup::infrastructure_foundations or O:insetup::traffic or O:insetup::data_persistence or O:insetup::core_platform or O:insetup::machine_learning  or O:insetup_noferm}
installserver: P{O:installserver}
installserver-full: P{O:installserver or O:apt_repo}
irc: P{O:mw_rc_irc}
kafka-all: A:kafka-main or A:kafka-jumbo or A:kafka-logging or A:kafka-test
kafka-main: P{O:kafka::main}
kafka-main-canary: P{kafka-main2001.codfw.wmnet}
kafka-main-codfw: A:kafka-main and A:codfw
kafka-main-eqiad: A:kafka-main and A:eqiad
kafka-jumbo-canary: P{kafka-jumbo1007.eqiad.wmnet}
kafka-jumbo: P{O:kafka::jumbo::broker}
kafka-jumbo-eqiad: A:kafka-jumbo and A:eqiad
kafka-logging: P{O:kafka::logging}
kafka-logging-eqiad: A:kafka-logging and A:eqiad
kafka-logging-codfw: A:kafka-logging and A:codfw
kafka-test: P{O:kafka::test::broker}
kafka-test-eqiad: P{O:kafka::test::broker} and A:eqiad
kafkamon: P{O:kafka::monitoring_bullseye}
kafka-mirror-maker: P{C:profile::kafka::mirror}
kafka-mirror-maker-jumbo-eqiad: A:kafka-jumbo-eqiad and A:kafka-mirror-maker
kafka-mirror-maker-main-codfw: A:kafka-main-codfw and A:kafka-mirror-maker
kafka-mirror-maker-main-eqiad: A:kafka-main-eqiad and A:kafka-mirror-maker
kafka-mirror-maker-test-eqiad: A:kafka-test-eqiad and A:kafka-mirror-maker
karapace: P{O:karapace}
kerberos: P{O:kerberos::kdc}
kerberos-kadmin: P{<%= @kerberos_kadmin_host %>}
wikikube-etcd: P{O:etcd::v3::kubernetes} or (A:wikikube-master and A:all-etcd)
wikikube-etcd-all: A:wikikube-etcd or A:wikikube-staging-etcd
wikikube-master: P{O:kubernetes::master} or P{O:kubernetes::master_stacked}
wikikube-worker: P{O:kubernetes::worker}
wikikube-staging-etcd: A:wikikube-staging-master and A:all-etcd
wikikube-staging-master: P{O:kubernetes::staging::master_stacked}
wikikube-staging-worker: P{O:kubernetes::staging::worker}
<% ['eqiad', 'codfw'].each do |dc| -%>
wikikube-etcd-<%= dc %>: A:wikikube-etcd and A:<%= dc %>
wikikube-master-<%= dc %>: A:wikikube-master and A:<%= dc %>
wikikube-worker-<%= dc %>: A:wikikube-worker and A:<%= dc %>
wikikube-staging-etcd-<%= dc %>: A:wikikube-staging-etcd and A:<%= dc %>
wikikube-staging-master-<%= dc %>: A:wikikube-staging-master and A:<%= dc %>
wikikube-staging-worker-<%= dc %>: A:wikikube-staging-worker and A:<%= dc %>
<% end -%>
wmcs-nfs: P{O:dumps::distribution::server}
ldap-replicas: P{O:openldap::replica}
ldap-replicas-eqiad: A:ldap-replicas and A:eqiad
ldap-replicas-codfw: A:ldap-replicas and A:codfw
ldap-rw: P{O:openldap::rw}
ldap-main: A:ldap-rw
ldap-all: A:ldap-replicas or A:ldap-rw
lists: P{O:lists}
logstash: A:logstash-data or A:logstash-collector
logstash-data: P{O:logging::opensearch::data}
logstash-collector: P{O:logging::opensearch::collector}
logstash-canary: P{logstash1023.eqiad.wmnet}
logstash-eqiad: A:logstash and A:eqiad
logstash-codfw: A:logstash and A:codfw
lvs: P{O:lvs::balancer}
lvs-canary: P{lvs4008.ulsfo.wmnet}
<% @datacenters.each do |dc| -%>
lvs-<%= dc %>: A:lvs and A:<%= dc %>
<% end -%>
maps: P{O:maps::master or O:maps::replica}
maps-codfw: A:maps and A:codfw
maps-eqiad: A:maps and A:eqiad
maps-replica: P{O:maps::replica}
maps-replica-codfw: A:maps-replica and A:codfw
maps-replica-eqiad: A:maps-replica and A:eqiad
maps-master: P{O:maps::master}
maps-master-codfw: A:maps-master and A:codfw
maps-master-eqiad: A:maps-master and A:eqiad
maps-canary: P{maps1009.eqiad.wmnet}
matomo: P{O:matomo}
mcrouter: P{P:mediawiki::mcrouter_wancache or P:mediawiki::mcrouter_exporter}
mcrouter-codfw: A:mcrouter and A:codfw
mcrouter-eqiad: A:mcrouter and A:eqiad
mediabackups: A:mediabackup-worker or A:mediabackup-storage
mediabackup-worker: P{O:mediabackup::worker}
mediabackup-storage: P{O:mediabackup::storage}
memcached: P{O:mediawiki::memcached or O:memcached}
memcached-canary: P{mc1037.eqiad.wmnet}
memcached-codfw: A:memcached and A:codfw
memcached-eqiad: A:memcached and A:eqiad
memcached-gutter: P{O:mediawiki::memcached::gutter}
mirrors: P{O:mirrors}
miscweb: P{O:miscweb}
ml-cache: P{O:ml_cache::storage}
ml-cache-eqiad: A:ml-cache and A:eqiad
ml-cache-codfw: A:ml-cache and A:codfw
ml-serve-etcd: P{O:etcd::v3::ml_etcd}
ml-serve-etcd-eqiad: A:ml-serve-etcd and A:eqiad
ml-serve-etcd-codfw: A:ml-serve-etcd and A:codfw
ml-serve-master: P{O:ml_k8s::master}
ml-serve-worker: P{O:ml_k8s::worker}
ml-serve-worker-eqiad: A:ml-serve-worker and A:eqiad
ml-serve-worker-codfw: A:ml-serve-worker and A:codfw
ml-serve-master-eqiad: A:ml-serve-master and A:eqiad
ml-serve-master-codfw: A:ml-serve-master and A:codfw
ml-serve: A:ml-serve-master or A:ml-serve-worker
ml-serve-canary: P{ml-serve2001.codfw.wmnet}
ml-serve-eqiad: A:ml-serve and A:eqiad
ml-serve-codfw: A:ml-serve and A:codfw
ml-staging: P{O:ml_k8s::staging::master} or P{O:ml_k8s::staging::worker}
ml-staging-etcd: P{O:etcd::v3::ml_etcd::staging}
ml-staging-master: P{O:ml_k8s::staging::master}
ml-staging-worker: P{O:ml_k8s::staging::worker}
mw: P{O:mediawiki::appserver}
mw-app-canary: P{O:mediawiki::canary_appserver}
mw-api: P{O:mediawiki::appserver::api}
mw-api-canary: P{O:mediawiki::appserver::canary_api}
mw-api-codfw: A:mw-api and A:codfw
mw-api-eqiad: A:mw-api and A:eqiad
mw-canary: A:mw-app-canary or A:mw-api-canary
mw-codfw: A:mw and A:codfw
mw-eqiad: A:mw and A:eqiad
mw-jobrunner: P{O:mediawiki::jobrunner}
mw-jobrunner-canary: P{mw1437.eqiad.wmnet}
mw-jobrunner-codfw: A:mw-jobrunner and A:codfw
mw-jobrunner-eqiad: A:mw-jobrunner and A:eqiad
mw-maintenance: P{O:mediawiki::maintenance}
mwlog: P{O:logging::mediawiki::udp2log}
mx: P{O:mail::mx}
mx-canary: P{mx2001.wikimedia.org}
ncredir: P{O:ncredir}
<% @datacenters.each do |dc| -%>
ncredir-<%= dc %>: A:ncredir and A:<%= dc %>
<% end -%>
netbox: P{O:netbox::frontend}
netbox-canary: P{O:netbox::standalone}
netbox-all: A:netbox or A:netbox-canary
netboxdb: P{O:netbox::database}
netflow: P{O:netinsights}
netmon: P{O:network::monitor}
orchestrator: P{O:orchestrator}
parsoid: P{O:parsoid}
parsoid-codfw: A:parsoid and A:codfw
parsoid-eqiad: A:parsoid and A:eqiad
parsoid-testing: P{O:parsoid::testing} or P{O:parsoid::testreduce}
people: P{O:microsites::peopleweb}
phabricator: P{O:phabricator}
phabricator-aphlict: P{O:aphlict}
phabricator-all: A:phabricator or A:phabricator-aphlict
planet: P{O:planet}
ping: P{O:ping_offload}
pki: P{O:pki::root} or P{O:pki::multirootca}
poolcounter: P{O:poolcounter::server}
poolcounter-codfw: A:poolcounter and A:codfw
poolcounter-eqiad: A:poolcounter and A:eqiad
# after T243057 is done, replace the following with `prometheus: P{O:prometheus}`
prometheus: P{P:prometheus::ops}
puppetboard: P{O:puppetboard}
puppetdb: P{O:puppetdb}
puppetserver: P{O:puppetserver}
puppetmaster: A:puppetmaster-backend or A:puppetmaster-frontend
puppetmaster-backend: P{O:puppetmaster::backend}
puppetmaster-frontend: P{O:puppetmaster::frontend}
pybaltest: P{O:pybaltest}
redis: A:redis-misc-master or A:redis-misc-slave
redis-misc-canary: P{rdb1012.eqiad.wmnet}
redis-misc-codfw: (A:redis-misc-master or A:redis-misc-slave) and A:codfw
redis-misc-eqiad: (A:redis-misc-master or A:redis-misc-slave) and A:eqiad
redis-misc-master: P{O:redis::misc::master}
redis-misc-slave: P{O:redis::misc::slave}
redis-misc-pair1-master: P{rdb1013.eqiad.wmnet or rdb2007.codfw.wmnet}
redis-misc-pair2-master: P{rdb1011.eqiad.wmnet or rdb2009.codfw.wmnet}
redis-misc-pair1-slave: P{rdb1014.eqiad.wmnet or rdb2008.codfw.wmnet}
redis-misc-pair2-slave: P{rdb1012.eqiad.wmnet or rdb2010.codfw.wmnet}
releases: P{O:releases}
relforge: P{O:elasticsearch::relforge}
cassandra-dev: P{O:cassandra_dev}
restbase: P{O:restbase::production}
restbase-canary: P{restbase1033.eqiad.wmnet}
restbase-codfw: A:restbase and A:codfw
restbase-eqiad: A:restbase and A:eqiad
rpki: P{O:rpkivalidator}
schema: P{O:eventschemas::service}
schema-eqiad: A:schema and A:eqiad
schema-codfw: A:schema and A:codfw
search-loader: P{O:search::loader}
sessionstore: P{O:sessionstore}
snapshot: P{O:dumps::generation::worker::dumper or O:dumps::generation::worker::dumper_monitor or O:dumps::generation::worker::dumper_misc_crons_only or O:dumps::generation::worker::testbed}
snapshot-canary: P{O:dumps::generation::worker::testbed}
spare: P{O:spare::system}
sretest: P{O:sretest}
sretestunpriv: P{sretest1001.eqiad.wmnet}
stat: P{O:statistics::explorer}
stewards: P{O:stewards}
swift: A:swift-fe or A:swift-be
swift-be: P{O:swift::storage}
swift-be-canary: P{ms-be1069.eqiad.wmnet}
swift-be-codfw: A:swift-be and A:codfw
swift-be-eqiad: A:swift-be and A:eqiad
swift-fe: P{O:swift::proxy}
swift-fe-canary: P{ms-fe1009.eqiad.wmnet}
swift-fe-codfw: A:swift-fe and A:codfw
swift-fe-eqiad: A:swift-fe and A:eqiad
# sysctl-userns: P{P:base%unprivileged_userns_clone = true}
thanos: A:thanos-fe or A:thanos-be
thanos-be: P{O:thanos::backend}
thanos-be-codfw: A:thanos-be and A:codfw
thanos-be-eqiad: A:thanos-be and A:eqiad
thanos-fe: P{O:thanos::frontend}
thanos-fe-codfw: A:thanos-fe and A:codfw
thanos-fe-eqiad: A:thanos-fe and A:eqiad
titan: P{O:titan}
titan-codfw: A:titan and A:codfw
titan-eqiad: A:titan and A:eqiad
url-downloader: P{O:url_downloader}
vrts: P{O:vrts}
wcqs-public: P{O:wcqs::public}
wdqs-all: A:wdqs-public or A:wdqs-internal or A:wdqs-test
wdqs-main: P{O:wdqs::public or O:wdqs::internal}
wdqs-internal: P{O:wdqs::internal}
wdqs-public: P{O:wdqs::public}
wdqs-test: P{O:wdqs::test}
webperf: P{O:webperf or O:arclamp}
wikidough: P{O:wikidough}
<% @datacenters.each do |dc| -%>
wikidough-<%= dc %>: A:wikidough and A:<%= dc %>
<% end -%>
wikireplicas-all: A:wikireplicas-dedicated or A:wikireplicas-analytics or A:wikireplicas-web
wikireplicas-dedicated: P{O:wmcs::db::wikireplicas::dedicated::analytics_multiinstance}
wikireplicas-analytics: P{O:wmcs::db::wikireplicas::analytics_multiinstance}
wikireplicas-web: P{O:wmcs::db::wikireplicas::web_multiinstance}
zookeeper-flink: P{O:zookeeper::flink}
zookeeper-flink-eqiad: A:zookeeper-flink and A:eqiad
zookeeper-flink-codfw: A:zookeeper-flink and A:codfw
zookeeper-main-eqiad: P{O:configcluster} and A:eqiad
zookeeper-main-codfw: P{O:configcluster} and A:codfw
zookeeper-druid-public: P{O:druid::public::worker} and P{C:profile::zookeeper::server}
zookeeper-druid-analytics: P{O:druid::analytics::worker} and P{C:profile::zookeeper::server}
zookeeper-analytics: P{O:analytics_cluster::zookeeper}
zookeeper-test: P{O:zookeeper::test}
zookeeper-all: A:zookeeper-flink or A:zookeeper-main-eqiad or A:zookeeper-main-codfw or A:zookeeper-druid-public or A:zookeeper-druid-analytics or A:zookeeper-analytics or A:zookeeper-test

# Miscellaneous groups
misc-analytics: P{O:statistics::web or O:matomo or O:analytics_cluster::webserver} or A:eventlogging
misc-devel: P{O:webperf or O:arclamp or O:ve or O:archiva or O:docker::registry} or A:mwlog
misc-nonprod: P{O:spare::system or O:test or O:pybaltest or O:sretest} or A:insetup
#### WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING ####
# The following aliases use the `~` operator to look for a $value in Array.  This is undocumented
# upstream, however the documented approch to use `=` doesn't work?
# As such `~` works we are going with that approach for now but be warned it could break with
# future puppetdb upgrades
#### WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING ####
<%- @owners.each do |owner| -%>
owner-<%= owner.downcase.gsub(/\W/, '-') -%>: P{P:contacts%role_contacts ~ "<%= owner %>"}
 <%- end -%>
puppet5: P{F:puppetversion ~ ^5}
puppet7: P{F:puppetversion ~ ^7}

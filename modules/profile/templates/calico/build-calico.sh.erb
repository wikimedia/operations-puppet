#!/bin/bash
set -e
_dir="<%= @directory %>/calico-containers"
pushd $_dir
<%- if @proxy_address -%>
export HTTPS_PROXY=<%= @proxy_address %>; export http_proxy=<%= @proxy_address %>
<%- end -%>
# Releasing
export VERSION=<% @calico_version %>
git tag | fgrep -q $VERSION || git tag $VERSION
CALICOCONTAINERS_VERSION=$VERSION make release-caliconode
<%- if @registry_address -%>
docker login --username <%= @registry_user %> <%= @registry_address %>
docker push  calico/node:$VERSION <%= @registry_address %>
<%- end %>
popd
# Now build calicoctl
base=$(mktemp -d)
GOPATH="${base}/gopath"
_go_base="${GOPATH}/src/github.com/projectcalico/"
mkdir -p $_go_base
cp -r $_dir $_go_base
cd "${go_base}/calico-containers" && glide install && \
   make release/calicoctl
base_deb=${base}/debian
# Debian control file
mkdir -p ${base_deb}/DEBIAN
cp -ax ${_dir}/debian/control ${base_deb}/DEBIAN

# The actual binary
mkdir -p ${base_deb}/usr/bin
cp "${go_base}/calico-containers/release/calicoctl-*" ${base_deb}/usr/bin/calicoctl

# Changelog, etc
deb_doc="${base_deb}/usr/share/doc/calicoctl"
mkdir -p ${deb_doc}
gzip -c ${_dir}/debian/Changelog > ${deb_doc}/changelog.Debian.gz
gzip -c ${_dir}/debian/Changelog > ${deb_doc}/changelog.gz
cp -ax ${_dir}/debian/copyright ${deb_doc}/copyright

# Lintian, forgive me
mkdir -p ${base_deb}/usr/share/doc/lintian/overrides
cp -ax ${_dir}/debian/calicoctl.lintian-overrides ${base_deb}/usr/share/doc/lintian/overrides/calicoctl
pkg_dst="/tmp/calicoctl_$VERSION~wmf1_amd64.deb"
cd ${base} && fakeroot dpkg-deb --build debian && mv debian.deb $pkg_dst
echo "calicoctl built in ${pkg_dst}"
rm -rf ${base}

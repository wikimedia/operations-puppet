# Exim filter

if first_delivery then
	if $acl_m0 is not "trusted relay" then
		# Remove any SpamAssassin headers and add local ones
		headers remove X-Spam-Score:X-Spam-Report:X-Spam-Checker-Version:X-Spam-Status:X-Spam-Level:X-Spam-Flag
	endif
	if $acl_m0 is not "" and $acl_m0 is not "trusted relay" then
		headers add "X-Spam-Score: $acl_m0"
		headers add "X-Spam-Report: $acl_m1"
	endif
endif

# Mailing list privacy protection
if foranyaddress $h_To:,$h_Cc: ( $thisaddress matches "\\N^(<%= scope.lookupvar('privateexim::listserve::mailing_lists').join("|") %>)@(lists\.|mail\.)?wiki[mp]edia\.org$\\N" ) then
	if foranyaddress $recipients ( $thisaddress matches "\\N@lists\.wikimedia\.org$\\N" and $thisaddress does not match "\\N^(<%= scope.lookupvar('privateexim::listserve::mailing_lists').join("|") %>)@\\N" ) then
		fail text "Message rejected for privacy protection: The list of recipients contains both private and public mail lists"
	endif
endif

# Filter spam observed from qq.com with matching subject.
if $header_subject: contains "只要投紸荭宝天天" and $header_from: contains "@qq.com" then
        fail text "Message rejected ref1"
endif

# Filter spam observed from qq.com with matching subject.
if $header_subject: matches "8。C(O|0)M.*天天" and $header_from: contains "@qq.com" then
        fail text "Message rejected ref2"
endif

# Filter spam observed from qq.com to list owner addresses with only digits in user part
if $header_from: matches "<[0-9]+@qq.com" and $header_to: contains "owner" then
        fail text "Message rejected ref3"
endif

<%-
# TODO: un-copy this from lvs/wikimedia-lvs-realserver.erb.

def flatten_ips(ips)
  result = []

  if ips.is_a?(Hash)
    ips.values.each do |v|
      result += flatten_ips(v)
    end
  elsif ips.is_a?(Array)
    ips.each do |v|
      result += flatten_ips(v)
    end
  else
    result << ips
  end
  return result
end

# TODO: maybe split primary/secondary and classes?
lvs_services = scope.lookupvar("::lvs::configuration::lvs_services")
services = lvs_services.values.select do |srv|
  # We select objects in all classes if class is "secondary"
  (lvs_class == srv['class'] || lvs_class == 'secondary'  ) && srv['sites'].include?(@site)
end
ips = flatten_ips(services.map{ |srv| srv['ip'][@site] })
-%>
<%= ips.uniq.sort.join(" ") -%>

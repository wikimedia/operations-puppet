<%#- SPDX-License-Identifier: Apache-2.0 -%>
# This file is imported by the Mailman Suite. It is used to override
# the default settings from /usr/share/mailman3-web/settings.py.

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '<%= @secret %>'

ADMINS = (
     ('Mailman Suite Admin', 'root@localhost'),
)

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.8/ref/settings/#allowed-hosts
# Set to '*' per default in the Deian package to allow all hostnames. Mailman3
# is meant to run behind a webserver reverse proxy anyway.
ALLOWED_HOSTS = [
    "localhost",  # Archiving API from Mailman, keep it.
    '<%= @host %>',  # External domain name
    '<%= @fqdn %>',  # Internal host name
    '0.0.0.0',
]

# Mailman API credentials
MAILMAN_REST_API_URL = 'http://localhost:8001'
MAILMAN_REST_API_USER = 'restadmin'
MAILMAN_REST_API_PASS = '<%= @api_password %>'
MAILMAN_ARCHIVER_KEY = '<%= @archiver_key %>'
MAILMAN_ARCHIVER_FROM = ('127.0.0.1', '::1', '<%= scope.function_ipresolve([@fqdn]) %>')

POSTORIUS_TEMPLATE_BASE_URL = 'https://<%= @host %>'

# Application definition
INSTALLED_APPS = (
    'hyperkitty',
    'postorius',
    'django_mailman3',
    # Uncomment the next line to enable the admin:
    'django.contrib.admin',
    # Uncomment the next line to enable admin documentation:
    # 'django.contrib.admindocs',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_gravatar',
    'compressor',
    'haystack',
    'django_extensions',
    'django_q',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
)


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        # Use 'sqlite3', 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        #'ENGINE': 'django.db.backends.sqlite3',
        #'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'ENGINE': 'django.db.backends.mysql',
        # DB name or path to database file if using sqlite3.
        'NAME': '<%= @db_name %>',
        # The following settings are not used with sqlite3:
        'USER': '<%= @db_user %>',
        'PASSWORD': '<%= @db_password %>',
        # HOST: empty for localhost through domain sockets or '127.0.0.1' for
        # localhost through TCP.
        'HOST': '<%= @db_host %>',
        # PORT: set to empty string for default.
        'PORT': '',
        # OPTIONS: Extra parameters to use when connecting to the database.
        'OPTIONS': {
            'charset': 'utf8mb4',
            # Set sql_mode to 'STRICT_TRANS_TABLES' for MySQL. See
            # https://docs.djangoproject.com/en/1.11/ref/
            #     databases/#setting-sql-mode
            #'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

<% if @memcached %>
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.PyMemcacheCache',
        'LOCATION': '<%= @memcached %>',
    }
}
<% end %>

# Fulltext search configuration
HAYSTACK_CONNECTIONS = {
      'default': {
          'ENGINE': 'xapian_backend.XapianEngine',
          'PATH': '<%= @mailman_root %>/web/fulltext_xapian_index',
      },
}

GRAVATAR_SECURE_URL = ''
HYPERKITTY_ENABLE_GRAVATAR = False

# If you're behind a proxy, use the X-Forwarded-Host header
# See https://docs.djangoproject.com/en/1.8/ref/settings/#use-x-forwarded-host
USE_X_FORWARDED_HOST = True

# And if your proxy does your SSL encoding for you, set SECURE_PROXY_SSL_HEADER
# https://docs.djangoproject.com/en/1.8/ref/settings/#secure-proxy-ssl-header
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_SCHEME', 'https')
# Other security settings
SECURE_SSL_REDIRECT = True
SECURE_REDIRECT_EXEMPT = [
    "hyperkitty/api/mailman/.*",  # Request from Mailman.
]
SESSION_COOKIE_SECURE = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
CSRF_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True
X_FRAME_OPTIONS = 'DENY'


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Set default domain for email addresses.
EMAILNAME = '<%= @host %>'

# If you enable internal authentication, this is the address that the emails
# will appear to be coming from. Make sure you set a valid domain name,
# otherwise the emails may get rejected.
# https://docs.djangoproject.com/en/1.8/ref/settings/#default-from-email
# DEFAULT_FROM_EMAIL = "mailing-lists@you-domain.org"
DEFAULT_FROM_EMAIL = 'noreply@{}'.format(EMAILNAME)

# If you enable email reporting for error messages, this is where those emails
# will appear to be coming from. Make sure you set a valid domain name,
# otherwise the emails may get rejected.
# https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-SERVER_EMAIL
# SERVER_EMAIL = 'root@your-domain.org'
SERVER_EMAIL = 'root@{}'.format(EMAILNAME)


# Django Allauth
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "https"


#
# Social auth
#
SOCIALACCOUNT_PROVIDERS = {}

# On a production setup, setting COMPRESS_OFFLINE to True will bring a
# significant performance improvement, as CSS files will not need to be
# recompiled on each requests. It means running an additional "compress"
# management command after each code upgrade.
# http://django-compressor.readthedocs.io/en/latest/usage/#offline-compression
COMPRESS_OFFLINE = True

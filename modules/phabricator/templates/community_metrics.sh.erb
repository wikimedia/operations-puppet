#!/bin/bash
# send the number of active users on <s>Bugzilla</s> Phabricator
# in the last month to "community metrics" team
# per RT-3962 - dzahn 20121219
# per T1003 - dzahn,aklapper 20141205
# ! this file is managed by puppet !
# ./modules/phabricator/templates/<%= @script_name %>.erb

declare rcpt_address='<%= Array(@rcpt_address).join(',') %>'
declare sndr_address='<%= @sndr_address %>'

declare sql_host='<%= @mysql_slave %>'
declare sql_user='<%= scope.lookupvar('passwords::mysql::phabricator::metrics_user') %>'
declare sql_name='phabricator_maniphest'
declare sql_pass='<%= scope.lookupvar('passwords::mysql::phabricator::metrics_pass') %>'

#echo "result_activesusers"
result_activeusers=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u $sql_user $sql_name << END

SELECT COUNT(DISTINCT authorPHID) FROM maniphest_transaction WHERE
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

#echo "result_authors"
result_authors=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT COUNT(DISTINCT authorPHID) FROM maniphest_task WHERE
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

#echo "result_resolvers"
result_resolvers=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT COUNT(DISTINCT authorPHID) FROM maniphest_transaction WHERE (transactionType="mergedinto" OR
    (transactionType="status" AND (oldValue="\"open\"" OR oldValue="\"stalled\"") AND
    (newValue="\"resolved\"" OR newValue="\"invalid\"" OR newValue="\"declined\""))) AND
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

#echo "result_projectsboardmove"
result_projectsboardmove=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT COUNT(DISTINCT (edge.dst)) FROM phabricator_maniphest.edge INNER JOIN phabricator_maniphest.maniphest_transaction WHERE FROM_UNIXTIME(maniphest_transaction.dateModified,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m') AND maniphest_transaction.transactionType = "projectcolumn" AND edge.type = 41 AND edge.src = maniphest_transaction.objectPHID AND edge.dst = SUBSTR(maniphest_transaction.newValue, INSTR(maniphest_transaction.newValue, 'projectPHID')+14, 30);

END
)

#echo "result_taskscreated"
result_taskscreated=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT COUNT(*) AS '' FROM maniphest_task WHERE
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

#echo "result_tasksclosed"
result_tasksclosed=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT COUNT(DISTINCT objectPHID) FROM maniphest_transaction WHERE (transactionType="mergedinto" OR
    (transactionType="status" AND (oldValue="\"open\"" OR oldValue="\"stalled\"") AND
    (newValue="\"resolved\"" OR newValue="\"invalid\"" OR newValue="\"declined\""))) AND
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

#echo "result_tasksopen"
result_tasksopen=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT COUNT(*) AS '' FROM maniphest_task WHERE (status = "open" OR status = "stalled");

END
)

#echo "results_mediantasksopen_unbreaknow"
result_mediantasksopen_unbreaknow=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT avg(t1.dateCreated) as '' FROM (SELECT @rownum:=@rownum+1 as row_number, d.dateCreated FROM maniphest_task d, (SELECT @rownum:=0) r WHERE (d.priority = "100" AND d.status = "open") ORDER BY d.dateCreated) as t1, (SELECT COUNT(*) AS total_rows FROM maniphest_task d WHERE (d.priority = "100" AND d.status = "open")) as t2 WHERE 1 AND t1.row_number IN ( floor((total_rows+1)/2), floor((total_rows+2)/2));

END
)

#echo "rm_needstriage"
result_mediantasksopen_needstriage=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT avg(t1.dateCreated) as '' FROM (SELECT @rownum:=@rownum+1 as row_number, d.dateCreated FROM maniphest_task d, (SELECT @rownum:=0) r WHERE (d.priority = "90" AND d.status = "open") ORDER BY d.dateCreated) as t1, (SELECT COUNT(*) AS total_rows FROM maniphest_task d WHERE (d.priority = "90" AND d.status = "open")) as t2 WHERE 1 AND t1.row_number IN ( floor((total_rows+1)/2), floor((total_rows+2)/2));

END
)

#echo "rm_high"
result_mediantasksopen_high=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT avg(t1.dateCreated) as '' FROM (SELECT @rownum:=@rownum+1 as row_number, d.dateCreated FROM maniphest_task d, (SELECT @rownum:=0) r WHERE (d.priority = "80" AND d.status = "open") ORDER BY d.dateCreated) as t1, (SELECT COUNT(*) AS total_rows FROM maniphest_task d WHERE (d.priority = "80" AND d.status = "open")) as t2 WHERE 1 AND t1.row_number IN ( floor((total_rows+1)/2), floor((total_rows+2)/2));

END
)

#echo "rm_normal"
result_mediantasksopen_normal=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT avg(t1.dateCreated) as '' FROM (SELECT @rownum:=@rownum+1 as row_number, d.dateCreated FROM maniphest_task d, (SELECT @rownum:=0) r WHERE (d.priority = "50" AND d.status = "open") ORDER BY d.dateCreated) as t1, (SELECT COUNT(*) AS total_rows FROM maniphest_task d WHERE (d.priority = "50" AND d.status = "open")) as t2 WHERE 1 AND t1.row_number IN ( floor((total_rows+1)/2), floor((total_rows+2)/2));

END
)

#echo "rm_low"
result_mediantasksopen_low=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT avg(t1.dateCreated) as '' FROM (SELECT @rownum:=@rownum+1 as row_number, d.dateCreated FROM maniphest_task d, (SELECT @rownum:=0) r WHERE (d.priority = "25" AND d.status = "open") ORDER BY d.dateCreated) as t1, (SELECT COUNT(*) AS total_rows FROM maniphest_task d WHERE (d.priority = "25" AND d.status = "open")) as t2 WHERE 1 AND t1.row_number IN ( floor((total_rows+1)/2), floor((total_rows+2)/2));

END
)

#echo "rm_lowest"
result_mediantasksopen_lowest=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user $sql_name << END

SELECT avg(t1.dateCreated) as '' FROM (SELECT @rownum:=@rownum+1 as row_number, d.dateCreated FROM maniphest_task d, (SELECT @rownum:=0) r WHERE (d.priority = "10" AND d.status = "open") ORDER BY d.dateCreated) as t1, (SELECT COUNT(*) AS total_rows FROM maniphest_task d WHERE (d.priority = "10" AND d.status = "open")) as t2 WHERE 1 AND t1.row_number IN ( floor((total_rows+1)/2), floor((total_rows+2)/2));

END
)

#echo "number of accounts created"
result_accounts_created=$(MYSQL_PWD=${sql_pass} /usr/bin/mysql -h $sql_host -u$sql_user phabricator_user << END

SELECT COUNT(id) as '' FROM user WHERE FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

accountscreated=$(echo $result_accounts_created | tr -d '\n')

activeusers=$(echo $result_activeusers | cut -d " " -f3)
authors=$(echo $result_authors | cut -d " " -f3)
resolvers=$(echo $result_resolvers | cut -d " " -f3)

projectsboardmove=$(echo $result_projectsboardmove | cut -d " " -f3)

taskscreated=$(echo $result_taskscreated | cut -d " " -f3)
tasksclosed=$(echo $result_tasksclosed | cut -d " " -f3)

tasksopen=$(echo $result_tasksopen | cut -d " " -f3)

epochnow=$(date +%s)

mediantasksopen_unbreaknow_epoch=$(echo $result_mediantasksopen_unbreaknow | cut -d " " -f3 | sed 's/.0000//' | sed 's/.5000//')
diff_unbreaknow=$((epochnow-mediantasksopen_unbreaknow_epoch))
mediantasksopen_unbreaknow=$(echo $((diff_unbreaknow/86400)))

mediantasksopen_needstriage_epoch=$(echo $result_mediantasksopen_needstriage | cut -d " " -f3 | sed 's/.0000//' | sed 's/.5000//')
diff_needstriage=$((epochnow-mediantasksopen_needstriage_epoch))
mediantasksopen_needstriage=$(echo $((diff_needstriage/86400)))

mediantasksopen_high_epoch=$(echo $result_mediantasksopen_high | cut -d " " -f3 | sed 's/.0000//' | sed 's/.5000//')
diff_high=$((epochnow-mediantasksopen_high_epoch))
mediantasksopen_high=$(echo $((diff_high/86400)))

mediantasksopen_normal_epoch=$(echo $result_mediantasksopen_normal | cut -d " " -f3 | sed 's/.0000//' | sed 's/.5000//')
diff_normal=$((epochnow-mediantasksopen_normal_epoch))
mediantasksopen_normal=$(echo $((diff_normal/86400)))

mediantasksopen_low_epoch=$(echo $result_mediantasksopen_low | cut -d " " -f3 | sed 's/.0000//' | sed 's/.5000//')
diff_low=$((epochnow-mediantasksopen_low_epoch))
mediantasksopen_low=$(echo $((diff_low/86400)))

mediantasksopen_lowest_epoch=$(echo $result_mediantasksopen_lowest | cut -d " " -f3 | sed 's/.0000//' | sed 's/.5000//')
diff_lowest=$((epochnow-mediantasksopen_lowest_epoch))
mediantasksopen_lowest=$(echo $((diff_lowest/86400)))


lastmonth=$(date --date="last month" +%Y-%m)

# the actual email
cat <<EOF | /usr/bin/mail -r "${sndr_address}" -s "Phabricator monthly statistics - ${lastmonth}" ${rcpt_address}

Hi Community Metrics team,

This is your automatic monthly Phabricator statistics mail.

Accounts created in (${lastmonth}): ${accountscreated}
Active users (any activity) in (${lastmonth}): ${activeusers}
Task authors in (${lastmonth}): ${authors}
Users who have closed tasks in (${lastmonth}): ${resolvers}

Projects which had at least one task moved from one column to another on
their workboard in (${lastmonth}): ${projectsboardmove}

Tasks created in (${lastmonth}): ${taskscreated}
Tasks closed in (${lastmonth}): ${tasksclosed}
Open and stalled tasks in total: ${tasksopen}

Median age in days of open tasks by priority:

Unbreak now: ${mediantasksopen_unbreaknow}
Needs Triage: ${mediantasksopen_needstriage}
High: ${mediantasksopen_high}
Normal: ${mediantasksopen_normal}
Low: ${mediantasksopen_low}
Lowest: ${mediantasksopen_lowest}

(How long tasks have been open, not how long they have had that priority)

TODO: Numbers which refer to closed tasks might not be correct, as
described in https://phabricator.wikimedia.org/T1003 .

Yours sincerely,
Fab Rick Aytor

(via $(basename $0) on $(hostname) at $(date))
EOF

#!/bin/bash
# send the number of active users on <s>Bugzilla</s> Phabricator
# in the last month to "community metrics" team
# per RT-3962 - dzahn 20121219
# per T1003 - dzahn,aklapper 20141205
# ! this file is managed by puppet !
# ./modules/phabricator/templates/<%= @script_name %>.erb

declare rcpt_address='<%= @rcpt_address %>'
declare sndr_address='<%= @sndr_address %>'

# reads db user/pass/host from bugzilla config
#declare bugzilla_path='<%= @bz_path %>'
#declare -a config_var=(host name user pass)
#declare -A my_var
#declare script_user='<%= @script_user %>'

#define(){ IFS='\n' read -r -d '' ${1} || true; }
#
#for mv in "${config_var[@]}"; do
#	my_var[$mv]=$(grep db_${mv} ${bugzilla_path}/localconfig | cut -d\' -f2 | sed 's/;/\\\;/g')
#done

# fix if there is a ; in the pass itself
#mypass=$(echo ${my_var[pass]} | sed 's/\\//g')

# TODO: which of the passwords should be used
mypass=foo

result_activeusers=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT COUNT(DISTINCT authorPHID) FROM maniphest_transaction WHERE
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

result_authors=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT COUNT(DISTINCT authorPHID) FROM maniphest_task WHERE
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

result_resolvers=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT COUNT(DISTINCT authorPHID) FROM maniphest_transaction WHERE (transactionType="mergedinto" OR
    (transactionType="status" AND (oldValue="\"open\"" OR oldValue="\"stalled\"") AND
    (newValue="\"resolved\"" OR newValue="\"invalid\"" OR newValue="\"declined\""))) AND
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

result_taskscreated=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT COUNT(*) FROM maniphest_task WHERE 
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

result_tasksclosed=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT COUNT(DISTINCT objectPHID) FROM maniphest_transaction WHERE (transactionType="mergedinto" OR
    (transactionType="status" AND (oldValue="\"open\"" OR oldValue="\"stalled\"") AND
    (newValue="\"resolved\"" OR newValue="\"invalid\"" OR newValue="\"declined\""))) AND
    FROM_UNIXTIME(dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

result_shelltasksclosed=(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT COUNT(DISTINCT objectPHID) FROM maniphest_transaction JOIN maniphest_nameindex JOIN edge WHERE
    (maniphest_nameindex.indexedObjectName="shell" AND maniphest_nameindex.indexedObjectPHID=edge.dst
    AND edge.src=maniphest_transaction.objectPHID) AND (transactionType="status" AND (oldValue="\"open\""
    OR oldValue="\"stalled\"") AND newValue="\"resolved\"") AND
    FROM_UNIXTIME(maniphest_transaction.dateCreated,'%Y%m')=date_format(NOW() - INTERVAL 1 MONTH,'%Y%m');

END
)

result_tasksopen=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT COUNT(*) FROM maniphest_task WHERE (status = "open" OR status = "stalled");

END
)

result_mediantasksopen_unbreaknow=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT x.dateCreated from maniphest_task x, maniphest_task y WHERE (x.priority = "100" AND x.status = "open") GROUP BY x.dateCreated HAVING SUM(SIGN(1-SIGN(CAST(y.dateCreated AS SIGNED)-CAST(x.dateCreated AS SIGNED))))/COUNT(*) > .5 LIMIT 1;

END
)

result_mediantasksopen_needstriage=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT x.dateCreated from maniphest_task x, maniphest_task y WHERE (x.priority = "90" AND x.status = "open") GROUP BY x.dateCreated HAVING SUM(SIGN(1-SIGN(CAST(y.dateCreated AS SIGNED)-CAST(x.dateCreated AS SIGNED))))/COUNT(*) > .5 LIMIT 1;

END
)

result_mediantasksopen_high=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT x.dateCreated from maniphest_task x, maniphest_task y WHERE (x.priority = "80" AND x.status = "open") GROUP BY x.dateCreated HAVING SUM(SIGN(1-SIGN(CAST(y.dateCreated AS SIGNED)-CAST(x.dateCreated AS SIGNED))))/COUNT(*) > .5 LIMIT 1;

END
)

result_mediantasksopen_normal=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT x.dateCreated from maniphest_task x, maniphest_task y WHERE (x.priority = "50" AND x.status = "open") GROUP BY x.dateCreated HAVING SUM(SIGN(1-SIGN(CAST(y.dateCreated AS SIGNED)-CAST(x.dateCreated AS SIGNED))))/COUNT(*) > .5 LIMIT 1;

END
)

result_mediantasksopen_low=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT x.dateCreated from maniphest_task x, maniphest_task y WHERE (x.priority = "25" AND x.status = "open") GROUP BY x.dateCreated HAVING SUM(SIGN(1-SIGN(CAST(y.dateCreated AS SIGNED)-CAST(x.dateCreated AS SIGNED))))/COUNT(*) > .5 LIMIT 1;

END
)

result_mediantasksopen_needsvolunteer=$(MYSQL_PWD=${mypass} /usr/bin/mysql -h ${my_var[host]} -u${my_var[user]} ${my_var[name]} << END

SELECT x.dateCreated from maniphest_task x, maniphest_task y WHERE (x.priority = "10" AND x.status = "open") GROUP BY x.dateCreated HAVING SUM(SIGN(1-SIGN(CAST(y.dateCreated AS SIGNED)-CAST(x.dateCreated AS SIGNED))))/COUNT(*) > .5 LIMIT 1;

END
)


activeusers=$(echo $result_activeusers | cut -d " " -f3)
authors=$(echo $result_authors | cut -d " " -f3)
resolvers=$(echo $result_resolvers | cut -d " " -f3)
taskscreated=$(echo $result_taskscreated | cut -d " " -f3)
tasksclosed=$(echo $result_tasksclosed | cut -d " " -f3)
shelltasksclosed=$(echo $result_shelltasksclosed | cut -d " " -f3)

tasksopen=$(echo $result_tasksopen | cut -d " " -f3)

epochnow=$(date +%s)

mediantasksopen_unbreaknow_epoch=$(echo $result_mediantasksopen_unbreaknow | cut -d " " -f3)
diff_unbreaknow=$((epochnow-mediantasksopen_unbreaknow_epoch))
mediantasksopen_unbreaknow=$(echo $((diff_unbreaknow/86400)))

mediantasksopen_needstriage_epoch=$(echo $result_mediantasksopen_needstriage | cut -d " " -f3)
diff_needstriage=$((epochnow-mediantasksopen_needstriage_epoch))
mediantasksopen_needstriage=$(echo $((diff_needstriage/86400)))

mediantasksopen_high_epoch=$(echo $result_mediantasksopen_high | cut -d " " -f3)
diff_high=$((epochnow-mediantasksopen_high_epoch))
mediantasksopen_high=$(echo $((diff_high/86400)))

mediantasksopen_normal_epoch=$(echo $result_mediantasksopen_normal | cut -d " " -f3)
diff_normal=$((epochnow-mediantasksopen_normal_epoch))
mediantasksopen_normal=$(echo $((diff_normal/86400)))

mediantasksopen_low_epoch=$(echo $result_mediantasksopen_low | cut -d " " -f3)
diff_low=$((epochnow-mediantasksopen_low_epoch))
mediantasksopen_low=$(echo $((diff_low/86400)))

mediantasksopen_needsvolunteer_epoch=$(echo $result_mediantasksopen_needsvolunteer | cut -d " " -f3)
diff_needsvolunteer=$((epochnow-mediantasksopen_needsvolunteer_epoch))
mediantasksopen_needsvolunteer=$(echo $((diff_needsvolunteer/86400)))


lastmonth=$(date --date="last month" +%Y-%m)

# the actual email
cat <<EOF | /usr/bin/mail -r "${sndr_address}" -s "Phabricator monthly statistics - ${lastmonth}" ${rcpt_address}

Hi Community Metrics team,

this is your automatic monthly Phabricator statistics mail.

Number of active users (any activity) in (${lastmonth}): ${activeusers}
Number of task authors in (${lastmonth}): ${authors}
Number of users who have closed tasks in (${lastmonth}): ${resolvers}
Number of tasks created in (${lastmonth}): ${taskscreated}
Number of tasks closed in (${lastmonth}): ${tasksclosed}
Number of tasks in the shell project closed as resolved,fixed in (${lastmonth}): ${shelltasksclosed}

Number of open and stalled tasks in total: ${tasksopen}

Median age in days of open tasks by priority:
Unbreak now: ${mediantasksopen_unbreaknow}
Needs Triage: ${mediantasksopen_needstriage}
High: ${mediantasksopen_high}
Normal: ${mediantasksopen_normal}
Low: ${mediantasksopen_low}
Needs Volunteer: ${mediantasksopen_needsvolunteer}

TODO: Numbers which refer to closed tasks might not be correct, as described in T1003.

Yours sincerely,
Fab Rick Aytor

(via $(basename $0) on $(hostname) at $(date))
EOF

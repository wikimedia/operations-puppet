<%#- SPDX-License-Identifier: Apache-2.0 -%>
###
# kubernetes kubelet (minion) config

<%-
daemon_args = [
  "--config=#{@config_file}",         # Path to the KubeletConfiguration YAML
  "--kubeconfig=#{@kubeconfig}",      # No KubeletConfiguration equivalent
  "--v=#{@v_log_level}",              # There is a replacement in KubeletConfiguration but the flag is not deprecated (1.23) an I like it here
  "--hostname-override=#{@fqdn}",     # No KubeletConfiguration equivalent
  # When joining the cluster for the first time, the node will set itself unschedulable.
  # This option is marked as deprecated (still available in 1.29), but there is no alternative as of now.
  # The "registerWithTaint" option does not work here because the taint "node.kubernetes.io/unschedulable" is not allowed to be set by kubelet.
  "--register-schedulable=false",
]

if @cni
	daemon_args.push("--network-plugin=cni") # DEPRECATED: will be removed along with dockershim (k8s >=1.24)
	daemon_args.push("--cni-bin-dir=#{@cni_bin_dir}") # DEPRECATED: will be removed along with dockershim (k8s >=1.24)
	daemon_args.push("--cni-conf-dir=#{@cni_conf_dir}") # DEPRECATED: will be removed along with dockershim (k8s >=1.24)
end

# No KubeletConfiguration equivalent
if !@node_labels.empty?
  daemon_args.push("--node-labels=#{@node_labels.sort.join(',')}")
end

# Command line arguments will override KubeletConfig settings. So this is still fine.
if @extra_params
  daemon_args.concat(@extra_params)
end

if @ipv6dualstack
  daemon_args.push("--node-ip=#{@facts['ipaddress']},#{@facts['ipaddress6']}")
else
  daemon_args.push("--node-ip=#{@facts['ipaddress']}")
end

if @system_reserved
  reserved = []
  for key in ['cpu', 'memory', 'pid', 'ephemeral-storage']
    if !@system_reserved[key].nil? && !@system_reserved[key].empty?
      reserved.push("#{key}=#{@system_reserved[key]}")
    end
  end
  if !reserved.empty?
    daemon_args.push("--system-reserved=#{reserved.join(',')}")
  end
end

if @containerd_cri
  # TODO: Kubernetes >= 1.27 kubelet has a containerRuntimeEndpoint KubeletConfiguration option, use that instead
  daemon_args.push("--container-runtime=remote")
  daemon_args.push("--container-runtime-endpoint=unix:///run/containerd/containerd.sock")
else
  # --pod-infra-container-image is ignored in kubelet when a remote container runtime is used (and issues a warning)
  daemon_args.push("--pod-infra-container-image=#{@pod_infra_container_image}")
end
-%>
DAEMON_ARGS="<%= daemon_args.sort.join(" \\\n ") %>"

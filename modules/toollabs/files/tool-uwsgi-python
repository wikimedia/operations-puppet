#!/usr/bin/python
import re
import socket
import os
import pwd

pwd_entry = pwd.getpwuid(os.getuid())  # Use uid as reserved port for eacht ool
TOOL = re.sub(r'^tools.', '', pwd_entry.pw_name) # Tool users are of form tools.TOOLNAME

PORT = os.getuid()

args = [
    '/usr/bin/uwsgi',
    '--plugin', 'python',
    '--http-socket', ':' + str(PORT),
    '--wsgi-file', 'app.py',
    '--chdir', os.path.expanduser('~/www/python/src'),
    '--logto', os.path.expanduser('~/uwsgi.log'),
    '--callable', 'app',
    '--manage-script-name',
    '--mount', '/%s=%s' % (TOOL, 'app.py'),
    '--die-on-term',
    '--strict',
    '--master'
]

if os.path.exists(os.path.expanduser('~/www/python/venv')):
    args += ['--venv', os.path.expanduser('~/www/python/venv')]

if os.path.exists(os.path.expanduser('~/www/python/uwsgi.ini')):
    args += ['--ini', os.path.expanduser('~/www/python/uwsgi.ini')]

proxies = ('tools-webproxy-01', 'tools-webproxy-02')

socks = []
for proxy in proxies:
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((proxy, 8282))
    sock.send(".*\nhttp://%s:%s\n" % (socket.getfqdn(), PORT))
    socks.append(sock)  # Keep this around, otherwise socket seems to get closed and collected

os.execv('/usr/bin/uwsgi', args)

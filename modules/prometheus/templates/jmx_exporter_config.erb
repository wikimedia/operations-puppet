<%-
# All labels / targets list
all = []


# Find all hosts in the current site, grouped by cluster
@site_clusters.each { |cluster, val|
  cluster_hosts = val[@site].select { |host| @resources.include?(host) }
  if cluster_hosts.length > 0
    # For each host found add a target with any custom labels applied.
    # labels are applied at several levels here:
    # - @labels from the declared prometheus::jmx_exporter_config.
    # - we add a 'cluster' label for this 'cluster' name.
    # - And finally any host/instance specific labels declared on the
    #   prometheus::jmx_exporter_instance class.
    @resources[host].each { |instance|
      all.push({
        'targets' => ["#{instance['parameters']['hostname']}:#{instance['parameters']['port']}"],
        'labels' => @labels.merge({'cluster' => cluster}).merge(instance['parameters']['labels']),
      })
    }
  end
}
-%>
# This file is managed by puppet
<%= scope.function_ordered_yaml([all]) %>

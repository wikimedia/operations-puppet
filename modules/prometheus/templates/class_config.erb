<%-
# All labels / targets list
all = []

# Construct the query parameters for the class
if @class_params
  param_query = "{#{@class_params.map{ |k,v| "#{k} = \"#{v}\"" }.join(", ")}}"
else
  param_query = ""
end

# Query PuppetDB for the class/params and group by certname to get a list of servers
# that have the class applied.
servers = scope.function_query_resources(false, "Class['#{@class_name}']#{param_query}", "certname").keys

# Find all servers in the current site, and filter them by the servers list we just found
scope.function_get_clusters([{'site' => @site}]).each do |cluster, val|
  targets = val[@site].select { |server| servers.include?(server) }
  if targets.length
    all.push(
      {
        'labels' => @labels.merge({'cluster' => cluster, 'site' => @site}),
        'targets' => targets.map{|t| "#{t.split('.')[0]}:#{@port}" },
      }
    )
  end  
end
-%>
# This file is managed by puppet
<%= scope.function_ordered_yaml([all]) %>

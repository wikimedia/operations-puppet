#!/bin/bash

# Bail out early if any of these first commands exit abnormally
set -e

# We pass show-diff, show the log may be sensitive,
# so make sure it's sufficiently protected
touch /var/log/puppet.log
chmod 600 /var/log/puppet.log

# Check this before apt-get update, so that our update doesn't screw up
# package installs in a running (manual and/or initial install) puppet run
PUPPETLOCK=`puppet agent --configprint agent_catalog_run_lockfile`

# From here out, make a best effort to continue in the face of failure
set +e

if [ -n "$PUPPETLOCK" -a -e "$PUPPETLOCK" ]; then
    PUPPETPID=$(cat $PUPPETLOCK)
    CMDLINE_FILE="/proc/$PUPPETPID/cmdline"
    if [ -f $CMDLINE_FILE ]; then
        grep -q puppet $CMDLINE_FILE
        if [ $? -eq 0 ]; then
            echo Skipping this run, puppet agent already running at pid `cat $PUPPETLOCK` >>/var/log/puppet.log
            exit 0
        fi
    fi
    echo Ignoring stale puppet agent lock for pid `cat $PUPPETLOCK` >>/var/log/puppet.log
fi

timeout -k 60 300 apt-get update -qq >> /var/log/puppet.log 2>&1

timeout -k 60 1800 puppet agent \
  --onetime \
  --no-daemonize \
  --verbose \
  --show_diff \
  --splay \
  --splaylimit 59 \
  >> /var/log/puppet.log 2>&1

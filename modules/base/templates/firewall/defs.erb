<%-
domain_networks = scope.lookupvar('network::constants::domain_networks')
all_network_subnets = scope.lookupvar('network::constants::all_network_subnets')
production_networks = scope.lookupvar('network::constants::production_networks')
cloud_networks = scope.lookupvar('network::constants::cloud_networks')
cloud_networks_public = scope.lookupvar('network::constants::cloud_networks_public')
all_cloud_private_networks = scope.lookupvar('network::constants::all_cloud_private_networks')
frack_networks = scope.lookupvar('network::constants::frack_networks')
analytics_networks = scope.lookupvar('network::constants::analytics_networks')
mw_appserver_networks = scope.lookupvar('network::constants::mw_appserver_networks')
network_infra = scope.lookupvar('network::constants::network_infra')
mgmt_networks = scope.lookupvar('network::constants::mgmt_networks')
services_kubepods_networks = scope.lookupvar('network::constants::services_kubepods_networks')
staging_kubepods_networks = scope.lookupvar('network::constants::staging_kubepods_networks')
mlserve_kubepods_networks = scope.lookupvar('network::constants::mlserve_kubepods_networks')
mlstage_kubepods_networks = scope.lookupvar('network::constants::mlstage_kubepods_networks')
dse_kubepods_networks = scope.lookupvar('network::constants::dse_kubepods_networks')
-%>

@def $INTERNAL = (10.0.0.0/8 2620:0:860:100::/56 2620:0:861:100::/56 2620:0:863:100::/56 2001:df2:e500:100::/56 2a02:ec80:300:100::/56 2a02:ec80:600:100::/56 2a02:ec80:700:100::/56 2a02:ec80:ff00:100::/56);
# $DOMAIN_NETWORKS is a set of all networks belonging to a domain.
# a domain is a realm currently, but the notion is more generic than that on purpose
@def $DOMAIN_NETWORKS = (<%- domain_networks.each do |net| -%><%= net %> <% end -%>);

# $PRODUCTION_NETWORKS is a set of all production networks
@def $PRODUCTION_NETWORKS = (<%- production_networks.each do |net| -%><%= net %> <% end -%>);
# $CLOUD_NETWORKS is a set of all Cloud VPS instance networks
@def $CLOUD_NETWORKS = (<%- cloud_networks.each do |net| -%><%= net %> <% end -%>);
# $LABS_NETWORKS is a deprecated alias for $CLOUD_NETWORKS
@def $LABS_NETWORKS = (<%- cloud_networks.each do |net| -%><%= net %> <% end -%>);
# $CLOUD_NETWORKS_PUBLIC is meant to be a set of all Cloud public networks
@def $CLOUD_NETWORKS_PUBLIC = (<%- cloud_networks_public.each do |net| -%><%= net %> <% end -%>);
# $CLOUD_PRIVATE_NETWORKS is the cloud-private networks with WMCS
# hardware with cloud realm private 172.20.x.x addresses. These
# hosts are dual-homed, usually also in at least cloud-hosts.
@def $CLOUD_PRIVATE_NETWORKS = (<%= all_cloud_private_networks.join(' ') %>);
# $FRACK_NETWORKS is meant to be a set of all fundraising networks
@def $FRACK_NETWORKS = (<%- frack_networks.each do |net| -%><%= net %> <% end -%>);

@def $ANALYTICS_NETWORKS = (<%- analytics_networks.each do |net| -%><%= net %> <% end -%>);
@def $MW_APPSERVER_NETWORKS = (<%- mw_appserver_networks.each do |net| -%><%= net %> <% end -%>);
@def $WIKIKUBE_KUBEPODS_NETWORKS  = (<%- services_kubepods_networks.each do |net| -%><%= net %> <% end -%>);
@def $STAGING_KUBEPODS_NETWORKS  = (<%- staging_kubepods_networks.each do |net| -%><%= net %> <% end -%>);
@def $MLSERVE_KUBEPODS_NETWORKS = (<%- mlserve_kubepods_networks.each do |net| -%><%= net %> <% end -%>);
@def $MLSTAGE_KUBEPODS_NETWORKS = (<%- mlstage_kubepods_networks.each do |net| -%><%= net %> <% end -%>);
@def $DSE_KUBEPODS_NETWORKS = (<%- dse_kubepods_networks.each do |net| -%><%= net %> <% end -%>);


@def $NETWORK_INFRA = (<%= network_infra.values.reduce('') {|memo, nets| memo += ' ' + nets.join(' ')}.strip %>);
@def $MGMT_NETWORKS = (<%- mgmt_networks.each do |net| -%><%= net %> <% end -%>);


@def $DEPLOYMENT_HOSTS = (<%- @deployment_hosts.each do |ip| -%><%= ip %> <% end -%>);
@def $CUMIN_MASTERS = (<%- @cumin_masters.each do |ip| -%><%= ip %> <% end -%>);
@def $CACHES = (<%- @cache_hosts.each do |ip| -%><%= ip %> <% end -%>);
@def $KAFKA_BROKERS_MAIN = (<%- @kafka_brokers_main.each do |ip| -%><%= ip %> <% end -%>);
@def $KAFKA_BROKERS_JUMBO = (<%- @kafka_brokers_jumbo.each do |ip| -%><%= ip %> <% end -%>);
@def $KAFKA_BROKERS_LOGGING = (<%- @kafka_brokers_logging.each do |ip| -%><%= ip %> <% end -%>);
@def $KAFKAMON_HOSTS = (<%- @kafkamon_hosts.each do |ip| -%><%= ip %> <% end -%>);
@def $ZOOKEEPER_HOSTS_MAIN = (<%- @zookeeper_hosts_main.each do |ip| -%><%= ip %> <% end -%>);
@def $ZOOKEEPER_FLINK_HOSTS = (<%- @zookeeper_flink_hosts.each do |ip| -%><%= ip %> <% end -%>);
@def $DRUID_PUBLIC_HOSTS = (<%- @druid_public_hosts.each do |ip| -%><%= ip %> <% end -%>);
@def $LABSTORE_HOSTS = (<%- @labstore_hosts.each do |ip| -%><%= ip %> <% end -%>);
@def $MYSQL_ROOT_CLIENTS = (<%- @mysql_root_clients.each do |ip| -%><%= ip %> <% end -%>);
<%-
all_network_subnets.sort.map do |realm, sites|
	sites.sort.map do |site, spheres|
		spheres.sort.map do |sphere, networks |
			networks.sort.map do |network, families| -%>

# Realm: <%= realm %>, # Site: <%= site %>, # Sphere: <%= sphere %>, # Network: <%= network %>
				<%-
				descr = "#{site.upcase()}_#{sphere.upcase()}_#{network.upcase()}".gsub('-', '_').gsub('+', '_')
				familydescrs = Array.new()
				families.sort.map do |family, address|
					familydescr = "#{descr}_#{family.upcase()}"
					familydescrs << familydescr -%>
@def $<%= familydescr %> = (<%= address %>);
				<%- end -%>
@def $<%= descr %> = (<%- familydescrs.each do |fd|%>$<%= fd %> <% end -%>);
			<%- end
		end
	end
end -%>

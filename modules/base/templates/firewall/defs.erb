<%-
domain_networks = scope.lookupvar('network::constants::domain_networks')
all_networks = scope.lookupvar('network::constants::all_networks')
all_network_subnets = scope.lookupvar('network::constants::all_network_subnets')
special_hosts = scope.lookupvar('network::constants::special_hosts')
production_networks = scope.lookupvar('network::constants::production_networks')
labs_networks = scope.lookupvar('network::constants::labs_networks')
frack_networks = scope.lookupvar('network::constants::frack_networks')
analytics_networks = scope.lookupvar('network::constants::analytics_networks')
mw_appserver_networks = scope.lookupvar('network::constants::mw_appserver_networks')
-%>

@def $INTERNAL = (10.0.0.0/8 2620:0:860:100::/56 2620:0:861:100::/56 2620:0:862:100::/56 2620:0:863:100::/56);
# $DOMAIN_NETWORKS is a set of all networks belonging to a domain.
# a domain is a realm currently, but the notion is more generic than that on purpose
@def $DOMAIN_NETWORKS = (<%- domain_networks.each do |net| -%><%= net %> <% end -%>);

# $PRODUCTION_NETWORKS is a set of all production networks
@def $PRODUCTION_NETWORKS = (<%- production_networks.each do |net| -%><%= net %> <% end -%>);
# $LABS_NETWORKS is meant to be a set of all labs networks
@def $LABS_NETWORKS = (<%- labs_networks.each do |net| -%><%= net %> <% end -%>);
# $FRACK_NETWORKS is meant to be a set of all fundraising networks
@def $FRACK_NETWORKS = (<%- frack_networks.each do |net| -%><%= net %> <% end -%>);

@def $ANALYTICS_NETWORKS = (<%- analytics_networks.each do |net| -%><%= net %> <% end -%>);
@def $MW_APPSERVER_NETWORKS = (<%- mw_appserver_networks.each do |net| -%><%= net %> <% end -%>);

<%- special_hosts.sort.map do |realm, services | -%>
	<%- if @realm != realm then next end -%>
	<%- services.sort.map do |service, addresses| -%>
@def $<%= service.upcase() -%> = (<%- addresses.each do |address| -%><%= address %> <% end -%>);
	<%- end -%>
<%- end -%>
<%-
all_network_subnets.sort.map do |realm, sites|
	sites.sort.map do |site, spheres|
		spheres.sort.map do |sphere, networks |
			networks.sort.map do |network, families| -%>

# Realm: <%= realm %>, # Site: <%= site %>, # Sphere: <%= sphere %>, # Network: <%= network %>
				<%-
				descr = "#{site.upcase()}_#{sphere.upcase()}_#{network.upcase()}".gsub('-', '_').gsub('+', '_')
				familydescrs = Array.new()
				families.sort.map do |family, address|
					familydescr = "#{descr}_#{family.upcase()}"
					familydescrs << familydescr -%>
@def $<%= familydescr %> = (<%= address %>);
				<%- end -%>
@def $<%= descr %> = (<%- familydescrs.each do |fd|%>$<%= fd %> <% end -%>);
			<%- end
		end
	end
end -%>

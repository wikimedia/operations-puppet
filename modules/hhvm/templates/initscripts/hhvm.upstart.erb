# hhvm - HipHop Virtual Machine
# Starts HHVM in server (FastCGI) mode.
# Configured via /etc/default/hhvm.
description "HipHop Virtual Machine for PHP"

start on (local-filesystems and net-device-up IFACE!=lo)

pre-start script
  [ ! -r /etc/default/hhvm ] && { stop; exit 0; }
  . /etc/default/hhvm
  mkdir -p -m0755 "${HHVM_RUN_DIR:=/var/run/hhvm}"
  mkdir -p -m0750 "<%= @cache_dir %>"
  mkdir -p -m0775 "<%= @log_dir %>"
  mkdir -p -m0775 "<%= @tmp_dir %>"
  chown -R "${HHVM_USER:=www-data}:${HHVM_GROUP:=www-data}" "${HHVM_RUN_DIR:=/run/hhvm}"
  chown -R "${HHVM_USER:=www-data}:${HHVM_GROUP:=www-data}" "<%= @cache_dir %>" "<%= @tmp_dir %>"
  chown -R "syslog:${HHVM_GROUP}" "<%= @log_dir %>"
end script

# Decomment this to start HHVM with memory profiling capabilities enabled but inactive.
# Profiling can then be toggled on-the-fly by cURLing the /jemalloc-prof-*
# endpoints of the admin server. See the jemalloc(3) man page for details.
# You can override these options by assigning MALLOC_CONF a different value
# in /etc/default/hhvm.
#env MALLOC_CONF="prof:true,prof_active:false,prof_final:false"

script
  . /etc/default/hhvm
  # HHVM clears its PID file on exit. We need it in the post-stop
  # stanza so we know where to look for stack traces. So we let
  # start-stop-daemon create the PID file instead.
  exec /sbin/start-stop-daemon --quiet --start \
    --chuid "${HHVM_USER:-www-data}:${HHVM_GROUP:-www-data}" \
    --make-pidfile --pidfile "${HHVM_RUN_DIR:-/run/hhvm}/hhvm.pid" \
    --chdir "${HHVM_TMP_DIR:-/var/tmp/hhvm}" \
    --startas /usr/bin/hhvm -- \
      --config "${HHVM_CONFIG_DIR:-/etc/hhvm}/fcgi.ini" \
      --mode server
end script

post-stop script
  . /etc/default/hhvm
  # Read the PID of the exited HHVM process and remove the PID file.
  read PID </var/run/hhvm/hhvm.pid
  rm -f /var/run/hhvm/hhvm.pid

  # Check if HHVM wrote a stack trace before exiting.
  TRACE="<%= @log_dir %>/stacktrace.${PID}.log"
  [ -r "$TRACE" ] || exit 0

  # If a stack trace exists and a handler is defined, invoke it.
  [ -n "$HHVM_TRACE_HANDLER" ] && $HHVM_TRACE_HANDLER "$TRACE"

  # Append the current UTC date (in YYYYMMDD format) to the file
  # name, so it doesn't get clobbered when the PID is recycled.
  mv --backup "$TRACE" "${TRACE}.$(date -u +%Y%m%d)"
end script

# Don't limit the size of core dumps.
limit core unlimited unlimited

# Increase the maximum number of open files.
limit nofile 65536 65536

# Increase the maximum size of the stack to 64MiB. See T73486.
limit stack 67108864 unlimited

respawn
respawn limit unlimited

# vim: set ft=upstart:

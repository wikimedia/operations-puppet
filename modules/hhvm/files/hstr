#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
  HHVM stack trace reporter

  Usage: hstr stacktrace.XXX.log

  The path to this script can be set as the value for $HHVM_TRACE_HANDLER
  in /etc/default/hhvm.

"""
import sys
reload(sys)
sys.setdefaultencoding('utf-8')

import ast
import re


cpp_trace_re = re.compile(r'^#[\d\s]+(?P<context_line>.+?) at (?P<abs_path>'
                          r'[^\]]+?):(?P<lineno>[^\]]+?)$', re.M)
php_trace_re = re.compile(r'^#[\d\s]+(?P<context_line>.+?) called at '
                          r'\[(?P<abs_path>.*?):(?P<lineno>\d+?)\]$', re.M)


def auto_cast(literal):
    """Cast numeric strings to the appropriate type."""
    try:
        return ast.literal_eval(literal)
    except (ValueError, SyntaxError):
        return literal


if '-h' in sys.argv or '--help' in sys.argv or len(sys.argv) != 2:
    sys.exit('Usage: hstr stacktrace.XXX.log')

with open(sys.argv[1], 'rt') as f:
    raw = f.read()

data = {k: auto_cast(v) for k, v in re.findall(r'^(\w+): ([^\n]+)', raw, re.M)}
data['cpp_trace'] = [{k: auto_cast(v) for k, v in m.groupdict().items()}
                     for m in cpp_trace_re.finditer(raw)]
data['php_trace'] = [{k: auto_cast(v) for k, v in m.groupdict().items()}
                     for m in php_trace_re.finditer(raw)]


# XXX: do something useful!
print data

# hhvm - HipHop Virtual Machine
# Starts HHVM in server (FastCGI) mode.
# Configured via /etc/default/hhvm.
description "HipHop Virtual Machine for PHP"

start on (local-filesystems and net-device-up IFACE!=lo)

pre-start script
  [ ! -r /etc/default/hhvm ] && { stop; exit 0; }
  . /etc/default/hhvm
  mkdir -p -m0755 "${HHVM_RUN_DIR:=/run/hhvm}"
  mkdir -p -m0750 "${HHVM_RUN_DIR}/cache"
  mkdir -p -m0755 "${HHVM_LOG_DIR:=/var/log/hhvm}"
  chown -R "${HHVM_USER:=www-data}:${HHVM_GROUP:=www-data}" "$HHVM_RUN_DIR"
  chown -R "${HHVM_USER}:${HHVM_GROUP}" "$HHVM_LOG_DIR"
end script

script
  . /etc/default/hhvm
  # HHVM clears its PID file on exit. We need it in the post-stop
  # stanza so we know where to look for stack traces. So we let
  # start-stop-daemon create the PID file instead.
  exec /sbin/start-stop-daemon --quiet --start \
    --chuid "${HHVM_USER:-www-data}:${HHVM_GROUP:-www-data}" \
    --make-pidfile --pidfile "${HHVM_RUN_DIR:-/run/hhvm}/hhvm.pid" \
    --startas /usr/bin/hhvm -- \
      --config "${HHVM_CONFIG_DIR:=/etc/hhvm/fcgi}/config.hdf" \
      --config "${HHVM_CONFIG_DIR}/php.ini" \
      --mode server
end script

post-stop script
  . /etc/default/hhvm
  # Read the PID of the exited HHVM process and remove the PID file.
  read PID </var/run/hhvm/hhvm.pid
  rm -f /var/run/hhvm/hhvm.pid
  # Check if HHVM wrote a stack trace before exiting.
  # If a stack trace exists and a handler is defined, invoke it.
  TRACE="/tmp/stacktrace.${PID}.log"
  if [ -r "$TRACE" ] && [ -x "$HHVM_TRACE_HANDLER" ]; then
    $HHVM_TRACE_HANDLER "$TRACE"
  fi
end script

# HHVM performs a graceful stop on SIGHUP
# <https://github.com/facebook/hhvm/commit/91e8609>
kill signal HUP

respawn
respawn limit unlimited

# vim: set ft=upstart:

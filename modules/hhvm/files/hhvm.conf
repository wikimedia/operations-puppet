# hhvm - HipHop Virtual Machine
# Starts HHVM in server (FastCGI) mode.
# Configured via /etc/default/hhvm.
description "HipHop Virtual Machine for PHP"

start on (local-filesystems and net-device-up IFACE!=lo)

pre-start script
  [ ! -r /etc/default/hhvm ] && { stop; exit 0; }
  . /etc/default/hhvm
  mkdir -p -m0755 "${HHVM_RUN_DIR:=/run/hhvm}"
  mkdir -p -m0750 "${HHVM_RUN_DIR}/cache"
  mkdir -p -m0775 "${HHVM_LOG_DIR:=/var/log/hhvm}"
  chown -R "${HHVM_USER:=www-data}:${HHVM_GROUP:=www-data}" "$HHVM_RUN_DIR"
  chown -R "syslog:${HHVM_GROUP}" "$HHVM_LOG_DIR"

  # Update the symlink `/usr/lib/x86_64-linux-gnu/hhvm/extensions/current`
  # so it points to the directory whose name matches the extension API
  # version (e.g. `/usr/lib/x86_64-linux-gnu/hhvm/extensions/20140829`).
  API_VERSION="$(/usr/bin/hhvm --version | grep -Po '(?<=API: ).+')"
  ( cd /usr/lib/x86_64-linux-gnu/hhvm/extensions; ln -Trsf "$API_VERSION" current; )
end script

script
  . /etc/default/hhvm
  # HHVM clears its PID file on exit. We need it in the post-stop
  # stanza so we know where to look for stack traces. So we let
  # start-stop-daemon create the PID file instead.
  exec /sbin/start-stop-daemon --quiet --start \
    --chuid "${HHVM_USER:-www-data}:${HHVM_GROUP:-www-data}" \
    --make-pidfile --pidfile "${HHVM_RUN_DIR:-/run/hhvm}/hhvm.pid" \
    --startas /usr/bin/hhvm -- \
      --config "${HHVM_CONFIG_DIR:-/etc/hhvm/fcgi}/php.ini" \
      --mode server
end script

post-start script
  . /etc/default/hhvm

  # warmup.urls is an optional configuration file. If it exists, we
  # expect it to be a list of URLs, one per line. We request each URL
  # from HHVM on start-up.
  WARMUP_URLS_FILE="${HHVM_CONFIG_DIR:-/etc/hhvm/fcgi}/warmup.urls"

  grep -vEs '^[[:space:]]*(#|$)' "$WARMUP_URLS_FILE" | while read -r URL; do
    HOST=$(echo "$URL" | cut -d/ -f3)
    # cut(1) is awesome - if not able to cut it prints the whole line.
    if [ $HOST == $URL ]; then continue; fi;
    curl -Ss --max-time 20 --resolve "$HOST:80:127.0.0.1" "$URL" >/dev/null
  done
end script

post-stop script
  . /etc/default/hhvm
  # Read the PID of the exited HHVM process and remove the PID file.
  read PID </var/run/hhvm/hhvm.pid
  rm -f /var/run/hhvm/hhvm.pid

  # Check if HHVM wrote a stack trace before exiting.
  TRACE="${HHVM_LOG_DIR:-/var/log/hhvm}/stacktrace.${PID}.log"
  [ -r "$TRACE" ] || exit 0

  # If a stack trace exists and a handler is defined, invoke it.
  [ -n "$HHVM_TRACE_HANDLER" ] && $HHVM_TRACE_HANDLER "$TRACE"

  # Append the current UTC date (in YYYYMMDD format) to the file
  # name, so it doesn't get clobbered when the PID is recycled.
  mv --backup "$TRACE" "${TRACE}.$(date -u +%Y%m%d)"
end script

# Don't limit the size of core dumps.
limit core unlimited unlimited

# Increase the maximum number of open files.
limit nofile 65536 65536

# Increase the maximum size of the stack. See bug 71486.
limit stack 33554432 unlimited

# When `hhvm.server.graceful_shutdown_wait` is set to a positive
# integer, HHVM will perform a graceful shutdown on SIGHUP.
kill signal HUP

respawn
respawn limit unlimited

# vim: set ft=upstart:

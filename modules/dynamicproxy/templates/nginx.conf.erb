# SPDX-License-Identifier: Apache-2.0
# Default nginx config for Debian Jessie with overrides for worker_connections
# and worket_rlimit_nofile. Also includes a health check endpoint.

user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
worker_rlimit_nofile 16192; # Twice the number of worker_connections

events {
  worker_connections 8096;
  # multi_accept on;
}

http {

  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  # server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # SSL Settings
  ##

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;

  ##
  # Logging Settings
  ##
  log_format vhosts '$host $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" (backend $upstream_addr)';
  access_log /var/log/nginx/access.log vhosts;
  error_log /var/log/nginx/error.log;

  ##
  # Gzip Settings
  ##

  gzip on;
  gzip_disable "msie6";

  # gzip_vary on;
  # gzip_proxied any;
  # gzip_comp_level 6;
  # gzip_buffers 16 8k;
  # gzip_http_version 1.1;
  # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  ##
  # Virtual Host Configs
  ##


  lua_package_path "/etc/nginx/lua/?.lua";

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # do XFF conditionally, only for a selected set of FQDNs
  map $http_host $xff {
    # no default, so nginx sets an empty string!
    <%- @xff_fqdns.each do |fqdn| -%>
    <%= fqdn %> $proxy_add_x_forwarded_for;
    <%- end -%>
  }

  geo $bad_user {
    default 0;
    # 0: OK, 1: banned
    # 1.2.3.4 1;     # ban single IP
    # 1.2.3.4/24 1;  # ban IP block
    <%- @banned_ips.each do |val| -%>
    <%= val %> 1;
    <%- end -%>
  }

  # Add a simple, arbitrarily picked per-IP rate limit to prevent
  # a single client for causing platform-wide issues.
  limit_req_zone $binary_remote_addr zone=cloudvps:10m rate=<%= @rate_limit_requests %>r/s;
  limit_req_status 429;

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;

}

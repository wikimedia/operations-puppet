#Copyright 2013 Yuvi Panda <yuvipanda@gmail.com>
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.

lua_package_path "/etc/nginx/lua/?.lua;;";

map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
}

<%- if !@notfound_servers.empty? -%>
upstream notfound {
    <%- @notfound_servers.each do |server| -%>
    server <%= server %>;
    <%- end -%>
}
<%- end -%>

server {
    resolver 208.80.154.20;

    listen 80;

    <%- if @ssl_certificate_name != false -%>
    # Serve both HTTP and HTTPS
    listen 443 default_server ssl spdy;

    ssl_certificate /etc/ssl/localcerts/<%= @ssl_certificate_name %>.chained.crt;
    ssl_certificate_key /etc/ssl/private/<%= @ssl_certificate_name %>.key;

    # Copied from modules/tlsproxy/templates/nginx.conf.erb. Eugh
    # Enable a shared cache, since it is defined at this level
    # it will be used for all virtual hosts. 1m = 4000 active sessions,
    # so we are allowing 200,000 active sessions.
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;

    <%= @ssl_settings.join("\n") %>

    <%- end -%>

    # Some projects have tools that take data in and process them
    # for a long time. While ideally they should be made async, this
    # is an interim solution that works for now.
    proxy_read_timeout 600s;

    # People upload large files, and that is okay.
    # We can make this larger if need be.
    client_max_body_size 128m;

    # Block requests with no UA string
    if ($http_user_agent = "") {
        return 403 "Requests must have a user agent";
    }

    # Block crawlers that do not behave well
    if ($http_user_agent ~* "TweetmemeBot") { # T73120
        return 403;
    }

    include uwsgi_params;
    include fastcgi_params;

    # See http://www.gnuterrypratchett.com/
    add_header X-Clacks-Overhead "GNU Terry Pratchett";

    location / {
        # Let errors go through to the client if using a special debug header (same as prod)
        # X-Wikimedia-Debug set to 1 to trigger it
        # See https://wikitech.wikimedia.org/wiki/Debugging_in_production for more info
        if ($http_x_wikimedia_debug != '1') {
            #error_page 403 /admin/?403; # bug 64393
            #error_page 404 /admin/?404; # bug 64393
            error_page 500 /admin/?500;
            error_page 502 /admin/?502;
            error_page 503 /admin/?503;
        }

        set $backend '';

        access_by_lua_file /etc/nginx/lua/urlproxy.lua;

        proxy_pass $backend;

        proxy_http_version 1.1;
        proxy_intercept_errors on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host 'tools.wmflabs.org';
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $request_uri;

        # For upstream servers, all requests appear to come over http,
        # thus emitting redirects to that as well.  So we need to
        # rewrite redirects with the /actual/ scheme the request came
        # in over.  There may be fringe cases where upstream servers
        # want https requests to redirect to non-Tools servers over
        # http, so we limit the rewriting to tools.wmflabs.org.
        proxy_redirect http://tools.wmflabs.org/ $scheme://tools.wmflabs.org/;
    }

    # GZIP ALL THE THINGS!
    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml application/json application/javascript application/x-javascript text/javascript;
}


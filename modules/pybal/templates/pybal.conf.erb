# PyBal configuration file
# This file is managed by Puppet!

[global]
bgp = <%= @global_options.fetch('bgp', "no") %>
bgp-local-asn = 64600
bgp-peer-address = <%= @global_options['bgp-peer-address'] %>
#bgp-as-path = 64600 64601
bgp-nexthop-ipv4 = <%= @global_options['bgp-nexthop-ipv4'] %>
bgp-nexthop-ipv6 = <%= @global_options['bgp-nexthop-ipv6'] %>
instrumentation = <%= @global_options.fetch('instrumentation', 'yes') %>
<% if @global_options.fetch('instrumentation_ips', nil) -%>
instrumentation_ips = <%= @global_options.fetch('instrumentation_ips') %>
<% end -%>
<% if @global_options.fetch('advertised_instrumentation_ips', nil) -%>
advertised_instrumentation_ips = <%= @global_options.fetch('advertised_instrumentation_ips') %>
<% end -%>
<% if @global_options.fetch('bgp-local-ips', nil) -%>
bgp-local-ips = <%= @global_options.fetch('bgp-local-ips') %>
<% end -%>
<% if @global_options.fetch('bgp-med', nil) -%>
# Lower values prefered over higher ones
bgp-med = <%= @global_options.fetch('bgp-med') %>
<% end -%>

<% if @global_options.fetch('dry-run', nil) %>dry-run = <%= @global_options.fetch('dry-run', 'no') %><% end %>
#
# LVS service definitions
#

<% @services.sort.each do |servicename, service|
   serviceip = service['ip'][@site]
-%>
<% serviceip.sort.each do |subservicename, subserviceip|
if subservicename == 'default'
   subservicename = servicename
end
lvs = service['lvs']
-%>
# SERVICE <%= subservicename %>
# Class: <%= lvs['class'] %>
# Description: <%= service['description'] %>
# LVS balancers: <%= @lvs_class_hosts[lvs['class']].join(" ") %>
<% if lvs.fetch('protocol', 'tcp') != 'tcp' -%>
[<%= subservicename %>_<%= service['port'] %>_<%= lvs['protocol'] %>]
<% else -%>
[<%= subservicename %>_<%= service['port'] %>]
<% end -%>
<%# IF MODIFYING THE DEFAULT, MODIFY ALSO spicerack.service.ServiceLVS -%>
protocol = <%= lvs.fetch('protocol', "tcp") %>
ip = <%= subserviceip %>
port = <%= service['port'] %>
scheduler = <%= lvs.fetch('scheduler', "wrr") %>
ops = false
<% ipip_encapsulation = lvs.fetch('ipip_encapsulation', [])
-%>
tunneling = <%= @ipip_enabled and ipip_encapsulation.include?(@site) %>

<% if @config == 'etcd' -%>
<%- conftool = lvs['conftool'] -%>
config = etcd://<%= @config_host %><%= @conftool_prefix %>/pools/<%= @site %>/<%= conftool['cluster'] %>/<%= conftool['service'] %>/
<%- else -%>
config = http://<%= @config_host %>/pybal/<%= @site %>/<%= servicename %>
<% end -%>

<%- if lvs.has_key? 'bgp' -%>
bgp = <%= lvs.fetch('bgp') %>
<%- end -%>
depool-threshold = <%= lvs['depool_threshold'] %>
<%- if lvs.has_key? 'monitors' -%>
monitors = <%= lvs['monitors'].keys.sort.inspect %>

<% lvs['monitors'].sort.each do |monitorname, monitor| -%>
# <%= monitorname %> monitor configuration
<% monitor.keys.sort.each do |param|
value = monitor[param] -%>
<%= monitorname.downcase %>.<%= param %> = <%= value.class == Array ? value.inspect : value %>
<% end -%>
<% end -%>
<% end -%>

<% end -%>

<% end -%>

#!/bin/bash
#
# Track slow queries and their history in a db using pt-query-digest
# Filters out SELECT MASTER_POS_WAIT queries which would otherwise 
# rise to the top.

pw=<%= scope.lookupvar('passwords::mysql::querydigest::mysql_ops_db') %>
mysql_user=<%= mysql_user %>
digest_host=<%= digest_host %>
digest_db=<%= digest_db %>
hostname=$(hostname)
log=/a/sqldata/${hostname}-slow.log
runtime=8m
table="query_review"

digestif() {
	/usr/bin/pt-query-digest --review h=${digest_host},D=${digest_db},t=${hostname}_${table},u=${mysql_user},p=${pw} \
		--create-review-table \
		--review-history h=${digest_host},D=${digest_db},t=${hostname}_${table}_history,u=${mysql_user},p=${pw} \
		--create-review-history-table \
		--noreport \
		--run-time $runtime \
		--filter '$event->{fingerprint} !~ m/^select master_pos_wait/' \
		$log
}

# optionally analayze all query traffic via tcpdump for a limited time
if [ "$1" = "tcpdump" ] ; then
	# safeguard in case of --run-time failure
	/usr/bin/pgrep -f "pt-query-digest.*tcpdump" >/dev/null && /usr/bin/pkill -f "pt-query-digest.*tcpdump"
	log="--type tcpdump --limit 100%"
	runtime=30s
	table="tcpquery_review"
	/usr/sbin/tcpdump -s 65535 -x -nn -q -tttt -i any port 3306 | digestif
else
	[ -s $log ] || exit 0
	# safeguard in case of --run-time failure
	/usr/bin/pgrep -f "pt-query-digest.*${log}" >/dev/null && /usr/bin/pkill -9 -f "pt-query-digest.*${log}"
	digestif
	> $log
fi

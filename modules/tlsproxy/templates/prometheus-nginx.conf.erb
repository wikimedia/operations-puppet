# See https://github.com/knyar/nginx-lua-prometheus/

lua_shared_dict prometheus_metrics 10M;

init_by_lua '
  prometheus = require("prometheus").init("prometheus_metrics")
  metric_requests = prometheus:counter("nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})

  metric_latency = prometheus:histogram("nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
';

log_by_lua '
  local host = ngx.var.host:gsub("^www.", "")

  metric_requests:inc(1, {host, ngx.var.status})

  metric_latency:observe(ngx.now() - ngx.req.start_time(), {host})
';

server {
    listen 9145;
    allow 127.0.0.1;
<% @prometheus_nodes.each do |node| -%>
    allow <%= scope.function_ipresolve([node]) %>;
<% end -%>
    deny all;
    location /metrics {
      content_by_lua 'prometheus:collect()';
    }
}

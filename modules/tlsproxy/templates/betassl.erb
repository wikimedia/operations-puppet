# Proxy site configuration file for <%= @proxy_server_name %>
# This file is managed by Puppet!

upstream <%= name %> {
<% if @site == "eqiad" then -%>
	# max fails is ignored when using one host, so we use the same host twice
	server <%= @proxy_backend["eqiad"]["primary"] %>:<%= @proxy_port %>;
	server <%= @proxy_backend["eqiad"]["primary"] %>:<%= @proxy_port %>;
<% end -%>
}

# SSL proxying
server {
<%
# proxy_addresses is optional or migth be empty for the current site
if @proxy_addresses.has_key?(@site) then
	@proxy_addresses[@site].each do |proxy_address|
-%>
	listen <%= proxy_address %>:443<% if proxy_address == @proxy_addresses[@site][0] -%> <%= @proxy_listen_flags %><% end -%>;
<%
	end  # .each
end  # if
-%>
	# For LVS-DR, we must listen to the RIP and the VIP addresses
	listen <%= @ipaddress %>:443;
	ssl on;
	server_name  <%= @proxy_server_name %>;

	error_log   /var/log/nginx/<%= @name %>.error.log;
	access_log   off;

	ssl_certificate /etc/ssl/localcerts/<%= @proxy_server_cert_name %>.chained.crt;
	ssl_certificate_key /etc/ssl/private/<%= @proxy_server_cert_name %>.key;
	keepalive_timeout 60;

	location / {
		<% if @ssl_backend.has_key?(site) and @ssl_backend[@site] == "true" %>
		proxy_pass https://<%= @name %>_fallback;
		<% else %>
		proxy_pass http://<%= @name %>;
		<% end %>

		# this should be in sync with Varnish's first_byte_timeout
		# and PHP's max_execution_time
		proxy_read_timeout 180s;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		proxy_set_header X-Forwarded-Proto https;

		proxy_redirect off;
		proxy_buffering off;
	}
}

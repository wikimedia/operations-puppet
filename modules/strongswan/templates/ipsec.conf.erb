<%
def individual_node(node)
    result = []
    if @fqdn != node
      left_ipv4 = scope.function_ipresolve([@fqdn, 4])
      right_ipv4 = scope.function_ipresolve([node, 4])
      left_ipv6 = scope.function_ipresolve([@fqdn, 6])
      right_ipv6 = scope.function_ipresolve([node, 6])
      if left_ipv4 != "" and right_ipv4 != ""
          result << "conn #{@fqdn}-#{node}_by_ipv4"
          result << "\tleft=#{left_ipv4} "
          result << "\tleftcert=#{@puppet_certname}.pem"
          result << "\tright=#{right_ipv4}"
          result << "\trightid=\"CN=#{node}\""
          result << ""
      end
      if left_ipv6 != "" and right_ipv6 != ""
          result << "conn #{@fqdn}-#{node}_by_ipv6"
          result << "\tleft=#{left_ipv6} "
          result << "\tleftcert=#{@puppet_certname}.pem"
          result << "\tright=#{right_ipv6}"
          result << "\trightid=\"CN=#{node}\""
          result << ""
      end
    end

    return result
end
-%>
# ipsec.conf - StrongSwan IPsec configuration file
# Generated by Puppet

# Basic configuration
config setup
	charondebug="cfg 1, dmn 1"

conn %default
	# https://wiki.strongswan.org/projects/strongswan/wiki/IKEv2CipherSuites
	# https://wikitech.wikimedia.org/wiki/IPsec#Cipher_selection
	# https://wikitech.wikimedia.org/wiki/IPsec#Cipher_proposals
	ike=aes128gcm16-prfsha384-ecp384bp!
	esp=aes128gcm16-ecp384bp-noesn!
	type=transport
	auto=start
	keyexchange=ikev2 # don't accept IKEv1
	mobike=no # no need for multi-home/roam, I don't think?
	keyingtries=%forever # don't give up after serial keying failures
	margintime=13m # default is 9m (double this value must be less than "lifetime", which is def 1h)
	# dead peer detection: restart for tier two, clear for tier one (apparently both sides as "restart" breaks things)
	dpdaction=<%= @site_tier == "one" ? "clear" : "restart" %>

# Connections
<% @hosts.each do |node| -%>
<%= individual_node(node).join("\n") %>
<% end -%>

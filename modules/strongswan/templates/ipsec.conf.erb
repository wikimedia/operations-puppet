<%
def individual_node(node)
    result = []
    if @fqdn != node
      # dead peer detection: need clear|restart on opposite sides of each
      #  peering, so use hostname > hostname comparison for consistency
      dpdaction = @fqdn > node ? "restart" : "clear"
      left_ipv4 = scope.function_ipresolve([@fqdn, 4])
      right_ipv4 = scope.function_ipresolve([node, 4])
      begin
        left_ipv6 = scope.function_ipresolve([@fqdn, 6])
        right_ipv6 = scope.function_ipresolve([node, 6])
      rescue
        left_ipv6 = right_ipv6 = ""
      end
      ns = node.gsub(/\..*$/, '')
      if left_ipv4 != "" and right_ipv4 != ""
          result << "conn #{ns}_v4"
          result << "\tleft=#{left_ipv4} "
          result << "\tleftcert=#{@puppet_certname}.pem"
          result << "\tright=#{right_ipv4}"
          result << "\trightid=\"CN=#{node}\""
          result << "\tdpdaction=#{dpdaction}"
          result << ""
      end
      if left_ipv6 != "" and right_ipv6 != ""
          result << "conn #{ns}_v6"
          result << "\tleft=#{left_ipv6} "
          result << "\tleftcert=#{@puppet_certname}.pem"
          result << "\tright=#{right_ipv6}"
          result << "\trightid=\"CN=#{node}\""
          result << "\tdpdaction=#{dpdaction}"
          result << ""
      end
    end

    return result
end
-%>
# ipsec.conf - StrongSwan IPsec configuration file
# Generated by Puppet

# Basic configuration
config setup
	charondebug="dmn 0, mgr 0, ike 0, chd 0, job 0, cfg 0, knl 0, net 0, asn 0, enc 0, lib 0, esp 0, tls 0, tnc 0, imc 0, imv 0, pts 0"

conn %default
	# https://wiki.strongswan.org/projects/strongswan/wiki/IKEv2CipherSuites
	# https://wikitech.wikimedia.org/wiki/IPsec#Cipher_selection
	# https://wikitech.wikimedia.org/wiki/IPsec#Cipher_proposals
	ike=aes128gcm16-prfsha384-ecp384bp!
	esp=aes128gcm16-ecp384bp-noesn!
	type=transport
	auto=start
	keyexchange=ikev2 # don't accept IKEv1
	mobike=no # no need for multi-home/roam, I don't think?
	keyingtries=%forever # don't give up after serial keying failures
	margintime=13m # default is 9m (double this value must be less than "lifetime", which is def 1h)

# Connections
<% @hosts.each do |node| -%>
<%= individual_node(node).join("\n") %>
<% end -%>

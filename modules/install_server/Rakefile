require 'rake'
require 'fileutils'

require 'rspec/core/rake_task'

# Note: The nginx puppet module is a git submodule right now, so don't forget to
# checkout submodules before testing
extra_modules = [ 'nginx', 'wmflib' ]

modulename = File.basename(File.expand_path(File.dirname(__FILE__)))

symlinks = { 'spec/fixtures/modules/%s/files' % modulename => '../../../../files',
  'spec/fixtures/modules/%s/manifests' % modulename => '../../../../manifests',
  'spec/fixtures/modules/%s/templates' % modulename => '../../../../templates',
}


task :setup do
  FileUtils.mkdir_p('spec/fixtures/modules/%s' % modulename)
  extra_modules.each do |x|
      FileUtils.ln_s('../../../../%s' % x, 'spec/fixtures/modules/%s' % x)
  end
  symlinks.each do |x|
    if !File.exist?(x[0])
      FileUtils.ln_s(x[1], x[0])
    end
  end
end

task :teardown do
  symlinks.each { |x| FileUtils.rm(x[0], :force => true) }
  FileUtils.rmdir('spec/fixtures/modules/%s' % modulename)
  extra_modules.each do |x|
      FileUtils.rm('spec/fixtures/modules/%s' % x, :force => true)
  end
  FileUtils.rmdir('spec/fixtures/modules')
end

RSpec::Core::RakeTask.new(:realspec) do |t|
  t.fail_on_error = false
  t.pattern = 'spec/*/*_spec.rb'
end

task :spec => [ :setup, :realspec, :teardown]

task :default => :spec do
end

[DEFAULT]
# swift_dir = /etc/swift
# user = swift
# You can specify default log routing here if you want:
log_name = swift-container-reconciler

<% if @statsd_host -%>
log_statsd_host = <%= @statsd_host %>
log_statsd_port = 8125
log_statsd_metric_prefix = <%= @statsd_metric_prefix %>
log_statsd_sample_rate_factor = <%= @statsd_sample_rate_factor %>
<% end -%>

[container-reconciler]
# The reconciler will re-attempt reconciliation if the source object is not
# available up to reclaim_age seconds before it gives up and deletes the entry
# in the queue.
# reclaim_age = 604800
# The cycle time of the daemon
# interval = 30
# Server errors from requests will be retried by default
# request_tries = 3
#
# You can set scheduling priority of processes. Niceness values range from -20
# (most favorable to the process) to 19 (least favorable to the process).
# nice_priority =
#
# You can set I/O scheduling class and priority of processes. I/O niceness
# class values are IOPRIO_CLASS_RT (realtime), IOPRIO_CLASS_BE (best-effort) and
# IOPRIO_CLASS_IDLE (idle). I/O niceness priority is a number which goes from
# 0 to 7. The higher the value, the lower the I/O priority of the process.
# Work only with ionice_class.
# ionice_class =
# ionice_priority =

[pipeline:main]
pipeline = catch_errors proxy-logging cache proxy-server

[app:proxy-server]
use = egg:swift#proxy
# See proxy-server.conf-sample for options

[filter:cache]
use = egg:swift#memcache
# See proxy-server.conf-sample for options
memcache_servers = <%= @memcached_servers.join(",") %>
memcache_serialization_support = 2
# per worker!
memcache_max_connections = 12

[filter:proxy-logging]
use = egg:swift#proxy_logging

[filter:catch_errors]
use = egg:swift#catch_errors
# See proxy-server.conf-sample for options

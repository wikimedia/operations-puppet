<%#- SPDX-License-Identifier: Apache-2.0 -%>
/**
 * Configuration for parsoid-rt-testing testreduce client.js script
 */
'use strict';

(function() {
	var testWrapper = require('/srv/parsoid-testing/tests/testreduce/rtTestWrapper.js');
	if (typeof module === 'object') {
		module.exports = {
			server: {
				// The address of the master HTTP server (for getting titles and posting results) (no protocol)
				host: 'localhost',

				// The port where the server is running
				port: 8002,
			},

			// A unique name for this client (optional) (URL-safe characters only)
			clientName: 'Parsoid RT testing client',

			opts: {
				// Talk to the existing Parsoid service.
				// No need to spin up our own private Parsoid service.
				parsoidURL: 'http://localhost:<%= @parsoid_port %>',
				parsoidPHP: {
					baseUrl: 'http://DOMAIN/w/rest.php',
					proxy: {
						host: 'http://parsoidtest1001.eqiad.wmnet',
						port: 80
					}
				}
			},

			// The return value of this function is the key for parsoid-rt test runs
			// You can start new test runs by updating the string this function returns.
			//
			// If the string has a "PHP:" prefix, the wrapper will run tests with the
			// Parsoid/PHP endpoint. If not, it will run tests with the Parsoid/JS endpoint.
			//
			// Set "gitRepoPath: <directory-here>" if you want to control this automatically
			// based on when code in a git repo is updated.
			gitCommitFetch: testWrapper.getTestRunId,

			runTest: testWrapper.runRoundTripTest,
		};
	}
}());

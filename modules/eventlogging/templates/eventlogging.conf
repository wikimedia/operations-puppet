; supervisor configuration for EventLogging
; -----------------------------------------
; This file is managed by Puppet.

; Data flow
; ---------
; - varnishncsa broadcasts UDP log data to vanadium on port 8422.
; - MediaWiki broadcasts UDP log data to vanadium on port 8421.
; - On Vanadium, each incoming UDP stream is re-broadcast over ZMQ (same port
;   number, but TCP/IP). This is to allow for multiple consumers with buffering
;   support.
; - zmq2log consumes each stream and writes it unmodified to disk.
; - log2json consumes the stream from Varnish and transforms it into a parsed
;   and validated JSON stream, which it publishes on port 8522.
; - json2sql consumes the JSON event stream and inserts each event into a MySQL
;   database.

; Logging
; -------
; - Each program's stderr is merged into its stdout (2>&1).
; - stderr log is disabled (per above).
; - stdout log is written to /var/log/supervisor/(program name).log.
; - Log files are rotated at 50MB (default).
; - Ten most recent log archives are kept (default).

; Notifications
; -------------
; - Changes in process status are reported to
;     <eventlogging-alerts@lists.wikimedia.org>.


; UDP -> ZMQ bridge
; -----------------

[program:udp2zmq]
user = eventlogging
numprocs = 2
numprocs_start = 8421
command = udp2zmq %(process_num)d
redirect_stderr = true
process_name = %(program_name)s_%(process_num)d
stdout_logfile = /var/log/supervisor/%(program_name)s_%(process_num)s.log
stderr_logfile = NONE


; File-based logs
; ---------------

[group:zmq2log]
programs = zmq2log-8421,zmq2log-8422,zmq2log-8600
priority = 200

[program:zmq2log-8421]
; Log MediaWiki-generated events (port 8421)
user = eventlogging
command = zmq2log --sid=8421 tcp://127.0.0.1:8421
    /var/log/eventlogging/server-side-events.log
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE

[program:zmq2log-8422]
; Log client-side events (port 8422)
user = eventlogging
command = zmq2log --sid=8422 tcp://127.0.0.1:8422
    /var/log/eventlogging/client-side-events.log
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE

[program:zmq2log-8600]
; Log all parsed events (port 8600)
user = eventlogging
command = zmq2log --sid=8600 tcp://127.0.0.1:8600
    /var/log/eventlogging/all-events-json.log
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE


; Raw logs -> Parsed / validated JSON
; -----------------------------------

[program:log2json-8521]
user = eventlogging
command = log2json --sid=log2json "%%n\sEventLogging\s%%j" tcp://localhost:8421 tcp://*:8521
priority = 300
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE

[program:log2json-8522]
user = eventlogging
command = log2json --sid=log2json "%%q\s%%l\s%%n\s%%t\s%%h" tcp://localhost:8422 tcp://*:8522
priority = 300
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE


; Multiplexing
; ------------

[program:zmux-8600]
user = eventlogging
command = zmux --sid=%(program_name)s tcp://*:8600 tcp://localhost:8521 tcp://localhost:8522
priority = 400
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE


; JSON logs -> MySQL
; ------------------

[program:json2sql-db1047]
user = eventlogging
command = json2sql --sid=db1047 tcp://localhost:8600
    mysql://<%= scope.lookupvar('passwords::mysql::eventlogging::user') %>:<%= scope.lookupvar('passwords::mysql::eventlogging::password') %>@db1047.eqiad.wmnet/log?charset=utf8
priority = 500
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE

; JSON logs -> MongoDB
; --------------------

[program:json2mongo-vanadium]
user = eventlogging
command = json2mongo --sid=json2mongo tcp://localhost:8600
    mongodb://vanadium.eqiad.wmnet:27017/?w=1
priority = 500
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE

; UDP sequence ID monitoring
; --------------------------

[group:seqmon]
programs = seqmon-8421,seqmon-8422
priority = 999

[program:seqmon-8421]
user = eventlogging
command = seqmon --sid=seqmon --hpos=1 --spos=0 tcp://127.0.0.1:8421
    /var/log/eventlogging/packet-loss-8421.log
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE

[program:seqmon-8422]
user = eventlogging
command = seqmon --sid=seqmon --hpos=1 --spos=2 tcp://127.0.0.1:8422
    /var/log/eventlogging/packet-loss-8422.log
redirect_stderr = true
stdout_logfile = /var/log/supervisor/%(program_name)s.log
stderr_logfile = NONE


; Alerts
; ------

[eventlistener:email-alerts]
command = sv-alerts eventlogging@vanadium.eqiad.wmnet eventlogging-alerts@lists.wikimedia.org
events = PROCESS_STATE_EXITED, PROCESS_STATE_RUNNING
environment = PYTHONUNBUFFERED=1

#!/bin/bash
#
# Shell script that pulls zone templates from the origin or master DNS server,
# regenerate zones & configuration and reload the DNS server.
#
# Written by Faidon Liambotis, Jul 2013

set -e

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

CONFFILE=/etc/wikimedia-authdns.conf

# Source the configuration file
[ -f $CONFFILE ] && . $CONFFILE

die() { echo >&2 "E: $*"; exit 1; }

if [ "$(id -u)" -ne "0" ]; then
    die "this script needs root"
fi

# 1.x and 2.x have differences
GDNSD_V2=1
(gdnsd -h 2>&1 | grep -q 'gdnsd version 2') || GDNSD_V2=0

# setup locking; only one copy of this may be running at the same time
LOCKFILE=/var/lock/authdns-local-update
LOCKFD=9
lock()   { flock -xn $LOCKFD; }
unlock() { rm -f $LOCKFILE; }
eval "exec $LOCKFD>\"$LOCKFILE\""; trap unlock EXIT

if ! flock -xn $LOCKFD; then
    die "failed to lock, another update running?"
fi

while :; do
    case "$1" in
        --skip-reload)
            SKIP_RELOAD="true"
            shift
            ;;
        --skip-review)
            SKIP_REVIEW="true"
            shift
            ;;
        *)
            break
            ;;
    esac
done

REMOTE=""
if [ -z "$1" ]; then
    if [ -z "$ORIGIN" ]; then
        die "no master given and no origin defined in config"
    fi
    REMOTE=$ORIGIN
    if [ "$SKIP_REVIEW" = "true" ]; then
        PULL_ARGS="--skip-review"
    fi
else
    REMOTE="ssh://${1}${WORKINGDIR}"
    PULL_ARGS="--skip-review"
fi
echo "Pulling the current revision from $REMOTE"
(cd $WORKINGDIR; sudo -u authdns authdns-git-pull $PULL_ARGS $REMOTE)

if [ ! -e "/etc/gdnsd/config-head" ]; then
    die "config-head not found, system misconfigured?"
fi
if [ ! -e "$WORKINGDIR/templates" ]; then
    die "templates not found, system misconfigured?"
fi
if [ ! -e "$WORKINGDIR/config-geo" ]; then
    die "config-geo not found, system misconfigured?"
fi

echo "Generating zonefiles from zone templates"
authdns-gen-zones $WORKINGDIR/templates /etc/gdnsd/zones

echo "Generating gdnsd config"
cp -f $WORKINGDIR/config-geo /etc/gdnsd/
cp -f /etc/gdnsd/config /etc/gdnsd/config~ 2>/dev/null || true
cat /etc/gdnsd/config-head /etc/gdnsd/config-geo > /etc/gdnsd/config

echo "Doing sanity checks"
if [ ! -s "/etc/gdnsd/config" ]; then
    die "config seems empty, aborting"
elif [ `ls /etc/gdnsd/zones |wc -l` -le 10 ]; then
    die "less than 10 zones, something's probably wrong, aborting";
fi

# initial run, before gdnsd was installed
if ! which gdnsd > /dev/null || [ "$SKIP_RELOAD" = "true" ]; then
    rm -f /etc/gdnsd/config~
    exit 0
fi

if [ $GDNSD_V2 -eq 1 ]; then
    if ! gdnsd checkconf >/dev/null; then
        if [ -f /etc/gdnsd/config~ ]; then
            mv /etc/gdnsd/config~ /etc/gdnsd/config
        fi
        die "gdnsd checkconf failed, aborting"
    fi
else
    if ! gdnsd checkconf 2>/dev/null; then
        if [ -f /etc/gdnsd/config~ ]; then
            mv /etc/gdnsd/config~ /etc/gdnsd/config
        fi
        die "gdnsd checkconf failed, aborting"
    fi
fi

### reload

if ! cmp --quiet /etc/gdnsd/config~ /etc/gdnsd/config; then
    rm -f /etc/gdnsd/config~
    echo "Restarting to update zones & config"
    gdnsd restart
else
    rm -f /etc/gdnsd/config~
    echo "Reloading zones"
    if [ $GDNSD_V2 -eq 1 ]; then
        gdnsd reload-zones
    else
        gdnsd reload
    fi
fi

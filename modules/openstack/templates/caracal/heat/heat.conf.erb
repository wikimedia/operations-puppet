# SPDX-License-Identifier: Apache-2.0

# SPDX-License-Identifier: Apache-2.0
[DEFAULT]

num_engine_workers = 3

# Template default for how the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to
# the cfn API action DescribeStackResource authenticated with the provided keypair (requires enabled heat-api-cfn). POLL_SERVER_HEAT will
# allow calls to the Heat API resource-show using the provided keystone credentials (requires keystone v3 API, and configured stack_user_*
# config options). POLL_TEMP_URL will create and populate a Swift TempURL with metadata for polling (requires object-store endpoint which
# supports TempURL).ZAQAR_MESSAGE will create a dedicated zaqar queue and post the metadata for polling. (string value)
# Possible values:
# POLL_SERVER_CFN - <No description provided>
# POLL_SERVER_HEAT - <No description provided>
# POLL_TEMP_URL - <No description provided>
# ZAQAR_MESSAGE - <No description provided>
#default_software_config_transport = POLL_SERVER_CFN

# Template default for how the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN
# keypair signed URL (requires enabled heat-api-cfn). TEMP_URL_SIGNAL will create a Swift TempURL to be signaled via HTTP PUT (requires
# object-store endpoint which supports TempURL). HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone
# credentials. ZAQAR_SIGNAL will create a dedicated zaqar queue to be signaled using the provided keystone credentials. (string value)
# Possible values:
# CFN_SIGNAL - <No description provided>
# TEMP_URL_SIGNAL - <No description provided>
# HEAT_SIGNAL - <No description provided>
# ZAQAR_SIGNAL - <No description provided>
#default_deployment_signal_transport = CFN_SIGNAL

# Template default for how the user_data should be formatted for the server. For HEAT_CFNTOOLS, the user_data is bundled as part of the
# heat-cfntools cloud-init boot configuration data. For RAW the user_data is passed to Nova unmodified. For SOFTWARE_CONFIG user_data is
# bundled as part of the software config data, and metadata is derived from any associated SoftwareDeployment resources. (string value)
# Possible values:
# HEAT_CFNTOOLS - <No description provided>
# RAW - <No description provided>
# SOFTWARE_CONFIG - <No description provided>
#default_user_data_format = HEAT_CFNTOOLS

# Instance connection to CFN/CW API via https. (string value)
#instance_connection_is_secure = 0

# Instance connection to CFN/CW API validate certs if SSL is used. (string value)
#instance_connection_https_validate_certificates = 1

# Default region name used to get services endpoints. (string value)
region_name_for_services = <%= @region %>

# Region name for shared services endpoints. (string value)
#region_name_for_shared_services = <%= @region %>

# Keystone role for heat template-defined users. (string value)
#heat_stack_user_role = heat_stack_user

# Keystone domain ID which contains heat template-defined users. If this option is set, stack_user_domain_name option will be ignored.
# (string value)
# Deprecated group/name - [DEFAULT]/stack_user_domain
#stack_user_domain_id = <None>

# Keystone domain name which contains heat template-defined users. If `stack_user_domain_id` option is set, this option is ignored. (string
# value)
#stack_user_domain_name = <None>

stack_domain_admin = heat_domain_admin
stack_domain_admin_password = <%= @domain_admin_pass %>
stack_user_domain_name = heat

# Key used to encrypt authentication info in the database. Length of this key must be 32 characters. (string value)
auth_encryption_key = <%= @auth_encryption_key %>

# From heat.engine.notification
#

# Default notification level for outgoing notifications. (string value)
#default_notification_level = INFO

# Default publisher_id for outgoing notifications. (string value)
#default_publisher_id = <None>

#
# From heat.engine.resources
#

# Custom template for the built-in loadbalancer nested stack. (string value)
#loadbalancer_template = <None>

#
# From oslo.log
#

# If set to true, the logging level will be set to DEBUG instead of the default INFO level. (boolean value)
# Note: This option can be changed without restarting.
#debug = false

# The name of a logging configuration file. This file is appended to any existing logging configuration files. For details about logging
# configuration files, see the Python logging module documentation. Note that when logging configuration files are used then all logging
# configuration is set in the configuration file and other logging configuration options are ignored (for example, log-date-format). (string
# value)
# Note: This option can be changed without restarting.
# Deprecated group/name - [DEFAULT]/log_config
#log_config_append = <None>

# Defines the format string for %%(asctime)s in log records. Default: %(default)s . This option is ignored if log_config_append is set.
# (string value)
#log_date_format = %Y-%m-%d %H:%M:%S

# (Optional) Name of log file to send logging output to. If no default is set, logging will go to stderr as defined by use_stderr. This
# option is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logfile
#log_file = <None>

# (Optional) The base directory used for relative log_file  paths. This option is ignored if log_config_append is set. (string value)
# Deprecated group/name - [DEFAULT]/logdir
#log_dir = <None>

# ================= Syslog Options ============================

# Send logs to syslog (/dev/log) instead of to file specified
# by `log_file`
use_syslog = True

# Facility to use. If unset defaults to LOG_USER.
syslog_log_facility = LOG_LOCAL0

# The network address and optional user credentials for connecting to the messaging backend, in URL format. The expected format is:
#
# driver://[user:pass@]host:port[,[userN:passN@]hostN:portN]/virtual_host?query
#
# Example: rabbit://rabbitmq:password@127.0.0.1:5671//
#
# For full details on the fields in the URL see the documentation of oslo_messaging.TransportURL at
# https://docs.openstack.org/oslo.messaging/latest/reference/transport.html (string value)
transport_url = rabbit://<%= @rabbitmq_nodes.map{ |rabbit_host| "#{@rabbit_user}:#{@rabbit_pass}\@#{rabbit_host}:5671" }.join(',') %>


[clients_cinder]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>

# Allow client's debug log output. (boolean value)
#http_log_debug = false


[clients_designate]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>


[clients_glance]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>


[clients_heat]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>

# Optional heat url in format like http://0.0.0.0:8004/v1/%(tenant_id)s. (string value)
#url =


[trustee]
auth_type = password
auth_url = https://<%= @keystone_fqdn %>:25000
username = heat
password = <%= @ldap_user_pass %>
user_domain_name = default


[clients_keystone]

#
# From heat.common.config
#

endpoint_type = internal
auth_uri = https://<%= @keystone_fqdn %>:25000


[clients_magnum]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>


[clients_neutron]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>


[clients_nova]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>

# Allow client's debug log output. (boolean value)
#http_log_debug = false

[clients_swift]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>


[clients_trove]

#
# From heat.common.config
#

# Type of endpoint in Identity service catalog to use for communication with the OpenStack service. (string value)
#endpoint_type = <None>

# Optional CA cert file to use in SSL connections. (string value)
#ca_file = <None>

# Optional PEM-formatted certificate chain file. (string value)
#cert_file = <None>

# Optional PEM-formatted file that contains the private key. (string value)
#key_file = <None>

# If set, then the server's certificate will not be verified. (boolean value)
#insecure = <None>

<%= scope.call_function('template', ["openstack/#{@version}/common/database.erb"]) %>

[heat_api]

#
# From heat.common.wsgi
#

# Address to bind the server. Useful when selecting a particular network interface. (IP address value)
#bind_host = 0.0.0.0

# The port on which the server will listen. (port value)
# Minimum value: 0
# Maximum value: 65535
#bind_port = 8004

# Number of backlog requests to configure the socket with. (integer value)
#backlog = 4096

# Location of the SSL certificate file to use for SSL mode. (string value)
#cert_file = <None>

# Location of the SSL key file to use for enabling SSL mode. (string value)
#key_file = <None>

# Number of workers for Heat service. Default value 0 means, that service will start number of workers equal number of cores on server.
# (integer value)
# Minimum value: 0
workers = 2

# Maximum line size of message headers to be accepted. max_header_line may need to be increased when using large tokens (typically those
# generated by the Keystone v3 API with big service catalogs). (integer value)
#max_header_line = 16384

# The value for the socket option TCP_KEEPIDLE.  This is the time in seconds that the connection must be idle before TCP starts sending
# keepalive probes. (integer value)
#tcp_keepidle = 600

# Root of the Heat API URL. Set this if the Heat API URL is not set to the root of your web server. This influences the way href links are
# written inside stacks when doing a stack show. Leave this value commented or set to None if Heat API is served at the root of your server.
# (string value)
#
# This option has a sample default set, which means that
# its actual default value may vary from the one documented
# below.
#heat_api_root = https://example.com/orchestration/v1


[heat_api_cfn]

#
# From heat.common.wsgi
#

# Address to bind the server. Useful when selecting a particular network interface. (IP address value)
#bind_host = 0.0.0.0

# The port on which the server will listen. (port value)
# Minimum value: 0
# Maximum value: 65535
#bind_port = 8000

# Number of backlog requests to configure the socket with. (integer value)
#backlog = 4096

# Location of the SSL certificate file to use for SSL mode. (string value)
#cert_file = <None>

# Location of the SSL key file to use for enabling SSL mode. (string value)
#key_file = <None>

# Number of workers for Heat service. (integer value)
# Minimum value: 0
#workers = 1

# Maximum line size of message headers to be accepted. max_header_line may need to be increased when using large tokens (typically those
# generated by the Keystone v3 API with big service catalogs). (integer value)
#max_header_line = 16384

# The value for the socket option TCP_KEEPIDLE.  This is the time in seconds that the connection must be idle before TCP starts sending
# keepalive probes. (integer value)
#tcp_keepidle = 600


<%= scope.call_function('template', ["openstack/#{@version}/common/keystone_authtoken.erb"]) %>

<%= scope.call_function('template', ["openstack/#{@version}/common/servicetoken.erb"]) %>

<%= scope.call_function('template', ["openstack/#{@version}/common/oslo_messaging_rabbit.erb"]) %>

[oslo_policy]
enforce_scope = <%= @enforce_policy_scope %>
enforce_new_defaults = <%= @enforce_new_policy_defaults %>
policy_file = policy.yaml

[volumes]

#
# From heat.common.config
#

# Indicate if cinder-backup service is enabled. This is a temporary workaround until cinder-backup service becomes discoverable, see
# LP#1334856. (boolean value)
#backups_enabled = true

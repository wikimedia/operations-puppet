# SPDX-License-Identifier: Apache-2.0

[DEFAULT]

use_syslog = True
syslog_log_facility = LOG_LOCAL0

debug = false
verbose = false

# Uncomment these two to get isolated keystone logfiles.
#  As is, logs will only go to syslog.
#log_file = keystone.log
#log_dir = /var/log/keystone

# Login info for wikitech, for project page updates
wiki_host=<%= @osm_host %>
wiki_page_prefix=<%= @wiki_status_page_prefix %>
wiki_consumer_token=<%= @wiki_status_consumer_token %>
wiki_consumer_secret=<%= @wiki_status_consumer_secret %>
wiki_access_token=<%= @wiki_status_access_token %>
wiki_access_secret=<%= @wiki_status_access_secret %>

[assignment]
driver = sql

[auth]
methods = external,password,token,wmtotp,application_credential

# Override the default password plugin with a custom
#  one that checks source IPs.
password = safelist

password_restricted_domains = default

<% @labs_networks.each do |subnet| -%>
password_safelist = novaobserver:<%=subnet%>
password_safelist = osstackcanary:<%=subnet%>
password_safelist = deployment-prep-dns-manager:<%=subnet%>
password_safelist = testlabs-dns-manager:<%=subnet%>
password_safelist = traffic-cloud-dns-manager:<%=subnet%>
password_safelist = tools-dns-manager:<%=subnet%>
password_safelist = toolsbeta-dns-manager:<%=subnet%>
password_safelist = project-proxy-dns-manager:<%=subnet%>
password_safelist = paws-dns-manager:<%=subnet%>
password_safelist = cloudinfra-dns-manager:<%=subnet%>
password_safelist = codfw1dev-proxy-dns-manager:<%=subnet%>
password_safelist = cloudinfrakeystonevalidate:<%= subnet %>
<% end -%>
<% @prod_networks.each do |subnet| -%>
password_safelist = *:<%=subnet%>
<% end -%>

[oath]

wikitech_host = <%=@osm_host %>
wikitech_consumer_token = <%= @wiki_consumer_token %>
wikitech_consumer_secret = <%= @wiki_consumer_secret %>
wikitech_access_token = <%= @wiki_access_token %>
wikitech_access_secret = <%= @wiki_access_secret %>

[cache]
backend = oslo_cache.memcache_pool
memcache_servers = <%= @memcached_nodes.map{|host| "#{host}:11211"}.join(",") %>

[catalog]
driver = sql

[credential]

<%= scope.call_function('template', ["openstack/#{@version}/common/database.erb"]) %>

[domain_config]
[endpoint_filter]
[endpoint_policy]
[eventlet_server]
public_workers = <%= @public_workers %>
admin_workers = <%= @admin_workers %>

[eventlet_server_ssl]
[federation]
[fernet_tokens]
max_active_keys = <%= @max_active_keys %>

[identity]
driver = sql

# The following allows the creation of additional domains which are configured
#  with files in /etc/keystone/domains. Typically these are DB-backed
#  domains that support transient (non-ldap) users.
#
# These config files must be named keystone.<domain-name>.conf and have contents
#  like
#
#  [identity]
#  driver = sql
#
#  [database]
#  connection = mysql+pymysql://keystone:<redacted>@openstack.codfw1dev.wikimediacloud.org/keystone
#  max_pool_size = 4
#
#
# Such config files should be puppetized; there's a ready-made template 
#  named 'keystone.sqldomain.conf.erb'
#
# Currently (June 2022) this is only used for a special 'magnum' domain.
domain_specific_drivers_enabled = true
domain_config_dir = /etc/keystone/domains


[identity_mapping]
# This is a WMF-specific generator that takes a username and returns the username.
#
# This mapping is invoked to hash a username and domain into a unique key for lookup.
# Because we're consuming a pre-existing ldap (where typically userkey == username)
# we need to disable this hash so that keystone just looks up the actual user-specified
# username in ldap rather than the hash.
generator = nohash

[kvs]

[ldap]
url = <% @ldap_hosts.each do |ldap_host| %>ldap://<%= ldap_host %>,<% end %>
tree_dn = <%= @ldap_base_dn %>
user_tree_dn = ou=people,<%= @ldap_base_dn %>
user_objectclass = inetOrgPerson
user_filter = (!(pwdPolicySubentry=cn=disabled,ou=ppolicies,<%= @ldap_base_dn %>))
user_id_attribute = <%= @ldap_user_id_attribute %>
user_name_attribute = <%= @ldap_user_name_attribute %>
user = <%= @ldap_user_dn %>
password = <%= @ldap_user_pass %>

[matchmaker_redis]
[memcache]
# deprecated in favor of [cache]
[oauth1]
[os_inherit]
[oslo_messaging_amqp]

[oslo_messaging_notifications]
driver = wmfkeystonehooks

[oslo_messaging_rabbit]
[oslo_middleware]

[oslo_policy]

enforce_scope = <%= @enforce_policy_scope %>
enforce_new_defaults = <%= @enforce_new_policy_defaults %>

policy_file = policy.yaml



[paste_deploy]

[policy]
driver = rules

[resource]
project_name_url_safe = new
domain_name_url_safe = new

[revoke]
[role]
[saml]
[shadow_users]
[signing]
[ssl]

[token]
provider = fernet
expiration = 613440

[tokenless_auth]
[trust]

[wmfhooks]
region = <%= @region %>
admin_pass = <%= @ldap_user_pass %>
auth_url = <%= @keystone_admin_uri %>
instance_ip_range = <%= @instance_ip_range %>
wmcloud_domain_owner = <%= @wmcloud_domain_owner %>
bastion_project_id = <%= @bastion_project_id %>
ldap_rw_uri = ldap://<%= @ldap_rw_host %>


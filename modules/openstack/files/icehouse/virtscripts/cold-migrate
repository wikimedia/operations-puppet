#!/bin/bash
#####################################################################
### THIS FILE IS MANAGED BY PUPPET
### puppet:///modules/openstack/icehouse/virtscripts/cold-migrate
#####################################################################
ssh-add -l > /dev/null
if [ "$?" != "0" ]
then
	echo "You must have a forwarded agent to use this script"
	exit 1
fi
if [ "$#" -ne 2 ]; then
	echo "Usage:  $0 <instance-id> <destination-host>"
	exit 1
fi
INSTANCE=$1
TOHOST=$2
echo "testing that instance exists."
nova show ${INSTANCE}
if [ "$?" != "0" ]
then
    echo "Instance not found."
    exit 1
fi
FROMHOST=`nova show ${INSTANCE} | grep 'OS-EXT-SRV-ATTR:host' | awk '{ print $4 }'`
INSTANCENAME=`nova show ${INSTANCE} | grep ' name ' | awk '{ print $4 }'`
echo "Migrating $INSTANCE from $FROMHOST to $TOHOST"
echo ""
ssh $FROMHOST.eqiad.wmnet "test -f /var/lib/nova/instances/${INSTANCE}/disk"
if [ $? -eq 0 ]
then
    echo "Verifying availability of backing file"
    BACKINGFILE=`ssh ${FROMHOST}.eqiad.wmnet "qemu-img info /var/lib/nova/instances/${INSTANCE}/disk | grep 'backing file'" | awk '{ print $3 }'`
    if [ -z $BACKINGFILE ]
    then
        echo "Backing file not found."
        exit 1
    fi
    ssh $TOHOST.eqiad.wmnet "test -e ${BACKINGFILE}"
    if [ "$?" != "0" ]
    then
        echo "Copying backing file ${BACKINGFILE} to ${TOHOST}"
        echo ""
        ssh -A $FROMHOST.eqiad.wmnet "rsync -S -av --bwlimit 40000 ${BACKINGFILE} ${TOHOST}.eqiad.wmnet:${BACKINGFILE}"
    fi
fi

echo ""
echo "Destroying instance on $FROMHOST"
echo ""
ssh $FROMHOST.eqiad.wmnet "virsh destroy ${INSTANCE}"
echo ""
echo "Rsyncing instance from $FROMHOST to $TOHOST"
echo ""
ssh -A $FROMHOST.eqiad.wmnet "rsync -S -av --bwlimit 40000 /var/lib/nova/instances/${INSTANCE} ${TOHOST}.eqiad.wmnet:/var/lib/nova/instances/"

ssh $TOHOST.eqiad.wmnet "test -f /var/lib/nova/instances/${INSTANCE}/disk"
if [ $? -eq 0 ]
then
    echo ""
    echo "Shrinking the instance on $TOHOST"
    echo ""

    ssh $TOHOST.eqiad.wmnet "mv /var/lib/nova/instances/${INSTANCE}/disk /var/lib/nova/instances/${INSTANCE}/disk.bak"
    ssh $TOHOST.eqiad.wmnet "qemu-img convert -f qcow2 -O qcow2 /var/lib/nova/instances/${INSTANCE}/disk.bak /var/lib/nova/instances/${INSTANCE}/disk"

    # If something went wrong, we still want there to be a 'disk' file.
    ssh $TOHOST.eqiad.wmnet "test -f /var/lib/nova/instances/${INSTANCE}/disk"
    if [ $? -ne 0 ]
    then
        echo ""
        echo "Shrink failed; restoring original disk image"
        echo ""
        ssh $TOHOST.eqiad.wmnet "mv /var/lib/nova/instances/${INSTANCE}/disk.bak /var/lib/nova/instances/${INSTANCE}/disk"
    fi
fi

echo "Defining the instance on $TOHOST"
echo ""
ssh $TOHOST.eqiad.wmnet "virsh define /var/lib/nova/instances/${INSTANCE}/libvirt.xml"
echo ""
echo "Undefining the instance on $FROMHOST"
echo ""
ssh $FROMHOST.eqiad.wmnet "virsh undefine ${INSTANCE}"
echo
echo ""
echo "Updating the instance's host in the database"
echo ""
mysql -uroot nova -e "update instances set host=\"${TOHOST}\" where hostname=\"${INSTANCENAME}\";"
mysql -uroot nova -e "update instances set host=\"${TOHOST}\" where hostname=\"${INSTANCE}\";"
echo ""
echo "Rebooting the instance"
echo ""
nova start ${INSTANCE}

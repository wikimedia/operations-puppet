# SPDX-License-Identifier: Apache-2.0
From 5c224983015bca5041885049aeaec6e06635a543 Mon Sep 17 00:00:00 2001
From: Andrew Bogott <abogott@wikimedia.org>
Date: Fri, 01 Sep 2023 18:14:43 -0500
Subject: [PATCH] config loader: Prefer cli/env over clouds.yaml args for some args

If a user specifies a project or domain on the cli, that should take
precedence over the value set in clouds.yaml. This fixes enables workflows
that rely on domain- or cloud-wide credentials in clouds.yaml.

The cli args that are reprioritized in this patch are:

 domain_id
 domain_name
 user_domain_id
 user_domain_name
 project_domain_id
 project_domain_name
 auth-token
 project_id
 tenant_id
 project_name
 tenant_name

Story: 2010784
Change-Id: I45e7cff6579e6686d790bd3bb3e3ab9955885a64
---

diff --git a/openstack/config/loader.py b/openstack/config/loader.py
index 8df3422..d6ba780 100644
--- a/openstack/config/loader.py
+++ b/openstack/config/loader.py
@@ -776,12 +776,12 @@
         for target_key, possible_values in mappings.items():
             target = None
             for key in possible_values:
-                if key in cloud:
-                    target = str(cloud[key])
-                    del cloud[key]
                 if key in cloud['auth']:
                     target = str(cloud['auth'][key])
                     del cloud['auth'][key]
+                if key in cloud:
+                    target = str(cloud[key])
+                    del cloud[key]
             if target:
                 cloud['auth'][target_key] = target
         return cloud
diff --git a/openstack/tests/unit/config/test_config.py b/openstack/tests/unit/config/test_config.py
index da56589..0d865e9 100644
--- a/openstack/tests/unit/config/test_config.py
+++ b/openstack/tests/unit/config/test_config.py
@@ -1471,6 +1471,49 @@
         }
         self.assertEqual(expected, result)
 
+    def test_project_conflict_priority(self):
+        """The order of priority should be
+        1: env or cli settings
+        2: setting from 'auth' section of clouds.yaml
+
+        The ordering of #1 is important so that operators can use domain-wide
+        inherited credentials in clouds.yaml.
+        """
+
+        c = config.OpenStackConfig(
+            config_files=[self.cloud_yaml], vendor_files=[self.vendor_yaml]
+        )
+        cloud = {
+            'auth_type': 'password',
+            'auth': {
+                'project_id': 'my_project_id',
+            },
+        }
+        result = c._fix_backwards_project(cloud)
+        expected = {
+            'auth_type': 'password',
+            'auth': {
+                'project_id': 'my_project_id',
+            },
+        }
+        self.assertEqual(expected, result)
+
+        cloud = {
+            'auth_type': 'password',
+            'auth': {
+                'project_id': 'my_project_id',
+            },
+            'project_id': 'different_project_id',
+        }
+        result = c._fix_backwards_project(cloud)
+        expected = {
+            'auth_type': 'password',
+            'auth': {
+                'project_id': 'different_project_id',
+            },
+        }
+        self.assertEqual(expected, result)
+
     def test_backwards_network_fail(self):
         c = config.OpenStackConfig(
             config_files=[self.cloud_yaml], vendor_files=[self.vendor_yaml]
diff --git a/releasenotes/notes/story-2010784-21d23043155497f5.yaml b/releasenotes/notes/story-2010784-21d23043155497f5.yaml
new file mode 100644
index 0000000..347219c
--- /dev/null
+++ b/releasenotes/notes/story-2010784-21d23043155497f5.yaml
@@ -0,0 +1,30 @@
+---
+prelude: >
+    Many cloud administrators use universal cloud-wide credentials. This is
+    supported in keystone via 'inherited' roles that can be applied cloud-
+    or domain-wide.
+
+    In previous releases, these credentials could not be usefully defined
+    within 'clouds.yaml' because clouds.yaml supports only specifying a single
+    domain and project for auth purposes. This project or domain could not
+    be overridden on the commandline.
+fixes:
+  - |
+    When some config settings are specified multiple times, the order of precendence
+    has been changed to prefer command-line or env settings over those found in
+    clouds.yaml. The same reordering has been done when a setting is specified
+    multiple times within clouds.yaml; now a higher-level setting will take
+    precedence over that specified within the auth section.
+
+    Affected settings are:
+      domain_id
+      domain_name
+      user_domain_id
+      user_domain_name
+      project_domain_id
+      project_domain_name
+      auth-token
+      project_id
+      tenant_id
+      project_name
+      tenant_name

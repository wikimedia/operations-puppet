#      ______                 __    _ __
#     / ____/________ _____  / /_  (_) /____
#    / / __/ ___/ __ `/ __ \/ __ \/ / __/ _ \
#   / /_/ / /  / /_/ / /_/ / / / / / /_/  __/
#   \____/_/   \__,_/ .___/_/ /_/_/\__/\___/
#                  /_/
#
# Settings file for Graphite webapp.
# This file is managed by Puppet.


## General

TIME_ZONE = 'Etc/UTC'
SECRET_KEY = '<%= @secret_key %>'
DOCUMENTATION_URL = '<%= @documentation_url %>'
DEFAULT_CACHE_DURATION = 120
REMOTE_USER_AUTHENTICATION = <% @remote_user_auth.capitalize %>


## Logging

LOG_RENDERING_PERFORMANCE = True
LOG_CACHE_PERFORMANCE = True
LOG_METRIC_ACCESS = True
MEMCACHE_HOSTS = ['127.0.0.1:11211']


## File paths

CONF_DIR = '/etc/graphite'
CONTENT_DIR = '/usr/share/graphite-web/static'
GRAPHITE_ROOT = '/usr/share/graphite-web'
INDEX_FILE = '/var/lib/graphite-web/search_index'
LOG_DIR = '/var/log/graphite-web'
STORAGE_DIR = '<%= @storage_dir %>'


## Database

DATABASES = {
    'default': {
        'NAME': '/var/lib/graphite-web/graphite.db',
        'ENGINE': 'django.db.backends.sqlite3',
    }
}


## Carbon

<%- carbon_settings = scope.lookupvar('::graphite::carbon_settings'); if carbon_settings.key? 'relay' -%>
CARBONLINK_HOSTS = [<%=
    carbon_settings['relay']['destinations'].map { |dest|
        server, pickle_receiver_port, instance = dest.split(':')
        cache_query_port = carbon_settings["cache:#{instance}"]['cache_query_port']
        "\"#{server}:#{cache_query_port}:#{instance}\""
    }.join(', ')
%>]
<%- end -%>


## CORS

from graphite.app_settings import *

CORS_ORIGINS = <%= Array(@cors_origins).inspect %>

MIDDLEWARE_CLASSES += (
    'cors.CorsMiddleware',
)

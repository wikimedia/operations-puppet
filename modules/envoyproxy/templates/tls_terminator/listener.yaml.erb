<%#- SPDX-License-Identifier: Apache-2.0 -%>
address:
    socket_address:
        port_value: <%= @name %>
<%- if @listen_ipv6 -%>
        address: '::'
        ipv4_compat: true
<%- else -%>
        address: 0.0.0.0
<%- end -%>
<%- if @connection_buffer_limit -%>
per_connection_buffer_limit_bytes: <%= @connection_buffer_limit %>
<%- end -%>
listener_filters:
- name: "envoy.filters.listener.tls_inspector"
  typed_config:
    "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
tcp_fast_open_queue_length: <%= @fast_open_queue %>
filter_chains:
<%- @upstreams.each do |upstream| -%>
<%- unless upstream['certificates'] == :undef || upstream['certificates'].nil? -%>
- filter_chain_match:
    server_names: <%= upstream['server_names'] %>
<%- if @tls_handshake_timeout -%>
  transport_socket_connect_timeout: <%= @tls_handshake_timeout %>s
<%- end -%>
  transport_socket:
    name: envoy.transport_sockets.tls
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
<%- unless @stek_files.empty? -%>
      session_ticket_keys:
        keys:
<% @stek_files.each do |stek_file| -%>
        - filename: <%= stek_file %>
<%- end -%>
<%- end -%>
      common_tls_context:
<%- if upstream['tlsparams'] != nil -%>
        tls_params:
<%- if upstream['tlsparams']['cipher_suites'] != nil -%>
          cipher_suites: <%= upstream['tlsparams']['cipher_suites'] %>
<%- end -%>
<%- if upstream['tlsparams']['ecdh_curves'] != nil -%>
          ecdh_curves: <%= upstream['tlsparams']['ecdh_curves'] %>
<%- end -%>
<%- if upstream['tlsparams']['tls_min_version'] != nil -%>
          tls_minimum_protocol_version: <%= upstream['tlsparams']['tls_min_version'] %>
<%- end -%>
<%- if upstream['tlsparams']['tls_max_version'] != nil -%>
          tls_maximum_protocol_version: <%= upstream['tlsparams']['tls_max_version'] %>
<%- end -%>
<%- end -%>
        tls_certificates:
<% upstream['certificates'].each do |certificate| -%>
        - certificate_chain: { filename: "<%= certificate['cert_path'] %>" }
          private_key: { filename: "<%= certificate['key_path'] %>" }
<%- if certificate['ocsp_path'] -%>
          ocsp_staple: { filename: "<%= certificate['ocsp_path'] %>" }
<%- end -%>
<%- end -%>
<%- if upstream['alpn_protocols'] -%>
        alpn_protocols: <%= upstream['alpn_protocols'] %>
<%- end -%>
  filters:
  - name: envoy.http_connection_manager
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
<%- if @websockets -%>
      upgrade_configs:
      - upgrade_type: "websocket"
<%- end -%>
<%- if @use_remote_address -%>
      use_remote_address: true
      skip_xff_append: false
<%- end -%>
<%- if @downstream_idle_timeout -%>
      common_http_protocol_options:
        idle_timeout: <%= @downstream_idle_timeout %>s
<%- end -%>
<%- if @stream_idle_timeout -%>
      stream_idle_timeout: <%= @stream_idle_timeout %>s
<%- end -%>
<%- if @request_timeout -%>
      request_timeout: <%= @request_timeout %>s
<%- end -%>
<%- if @request_headers_timeout -%>
      request_headers_timeout: <%= @request_headers_timeout %>s
<%- end -%>
<%- if @delayed_close_timeout -%>
      delayed_close_timeout: <%= @delayed_close_timeout %>s
<%- end -%>
<%- if @http2_options -%>
      http2_protocol_options:
        max_concurrent_streams: <%= @http2_options['max_concurrent_streams'] %>
        initial_stream_window_size: <%= @http2_options['initial_stream_window_size'] %>
        initial_connection_window_size: <%= @http2_options['initial_connection_window_size'] %>
<%- end -%>
      http_protocol_options:
        accept_http_10: true
<%- if @header_key_format != 'none' -%>
        header_key_format:
<%- if @header_key_format == 'proper_case' -%>
          proper_case_words: {}
<%- elsif @header_key_format == 'preserve_case' -%>
          stateful_formatter:
            name: preserve_case
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig
<%- end -%>
<%- end -%>
<%- unless @generate_request_id -%>
      generate_request_id: false
<%- end -%>
<%- if @local_otel_reporting_pct > 0 -%>
      tracing:
        random_sampling:
          value: <%= @local_otel_reporting_pct %>
        provider:
          name: envoy.tracers.opentelemetry
          typed_config:
            "@type": type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
            grpc_service:
              envoy_grpc:
                cluster_name: otel-collector
              timeout: 0.250s
<%- end -%>
      stat_prefix: ingress_http
<%- if @has_error_page -%>
      local_reply_config:
        mappers:
          - filter:
              # We only intercept pages with
              # status code 502 or higher.
              status_code_filter:
                comparison:
                  op: "GE"
                  value:
                    default_value: 502
                    runtime_key: errorpage_min_code
            body_format_override:
              text_format_source:
                filename: /etc/envoy/error_page.html
              content_type: "text/html; charset=UTF-8"
<%- end -%>
<%- if @access_log -%>
      access_log:
      - name: envoy.file_access_log
        filter:
          status_code_filter:
            comparison:
              op: "GE"
              value:
                default_value: 500
                runtime_key: <%= upstream['cert_name'] %>_min_log_code
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
          path: "/var/log/envoy/<%= upstream['cert_name'] %>.log"
<%- end -%>
      route_config:
<%- unless @response_headers_to_add.empty? -%>
        response_headers_to_add:
  <%- @response_headers_to_add.each_pair do |header, value| -%>
        - header: {key: <%= header %>, value: <%= value %>}
  <%- end -%>
<%- end -%>
        virtual_hosts:
        - name: default
          domains: ["*"]
          routes:
          - match: { prefix: "/" }
            route:
<%- if upstream['upstream'].include? 'port' -%>
              cluster: local_port_<%= upstream['upstream']['port'] %>
<%- elsif upstream['upstream'].include? 'path' -%>
              cluster: local_path_<%= upstream['upstream']['path'] %>
<%- end -%>
              timeout: <%= @upstream_response_timeout %>s
<%- if @upstream_idle_timeout -%>
              idle_timeout: <%= @upstream_idle_timeout %>s
<%- end -%>
              <%- unless @retry_policy.empty? -%>
              retry_policy:
                <%- @retry_policy.each do |k, v| -%>
                <%= k %>: <%= scope.call_function('to_json',[v]) %>
                <%- end -%>
              <%- end -%>
      http_filters:
<%- if @lua_script -%>
      - name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inline_code: |
<%- @lua_script.each_line do |script_line| -%>
            <%= script_line -%>
<%- end -%>
<%- end -%>
      - name: envoy.filters.http.router
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      server_header_transformation: APPEND_IF_ABSENT
<%- end -%>
<%- end -%>
<%- unless @global_certs.empty? -%>
# Non-SNI support
- transport_socket:
    name: envoy.transport_sockets.tls
    typed_config:
      '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
<%- unless @stek_files.empty? -%>
      session_ticket_keys:
        keys:
<% @stek_files.each do |stek_file| -%>
        - filename: <%= stek_file %>
<%- end -%>
<%- end -%>
      common_tls_context:
<%- if @global_tlsparams != nil -%>
        tls_params:
<%- if @global_tlsparams['cipher_suites'] != nil -%>
          cipher_suites: <%= @global_tlsparams['cipher_suites'] %>
<%- end -%>
<%- if @global_tlsparams['ecdh_curves'] != nil -%>
          ecdh_curves: <%= @global_tlsparams['ecdh_curves'] %>
<%- end -%>
<%- if @global_tlsparams['tls_min_version'] != nil -%>
          tls_minimum_protocol_version: <%= @global_tlsparams['tls_min_version'] %>
<%- end -%>
<%- if @global_tlsparams['tls_max_version'] != nil -%>
          tls_maximum_protocol_version: <%= @global_tlsparams['tls_max_version'] %>
<%- end -%>
<%- end -%>
        tls_certificates:
<% @global_certs.each do |certificate| -%>
        - certificate_chain: { filename: "<%= certificate['cert_path'] %>" }
          private_key: { filename: "<%= certificate['key_path'] %>" }
<%- if certificate['ocsp_path'] -%>
          ocsp_staple: { filename: "<%= certificate['ocsp_path'] %>" }
<%- end -%>
<%- end -%>
<%- if @global_alpn_protocols -%>
        alpn_protocols: <%= @global_alpn_protocols %>
<%- end -%>
<%- if @tls_handshake_timeout -%>
  transport_socket_connect_timeout: <%= @tls_handshake_timeout %>s
<%- end -%>
  filters:
  - name: envoy.http_connection_manager
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
<%- if @websockets -%>
      upgrade_configs:
      - upgrade_type: "websocket"
<%- end -%>
<%- unless @generate_request_id -%>
      generate_request_id: false
<%- end -%>
<%- if @local_otel_reporting_pct > 0 -%>
      tracing:
        random_sampling:
          value: <%= @local_otel_reporting_pct %>
        provider:
          name: envoy.tracers.opentelemetry
          typed_config:
            "@type": type.googleapis.com/envoy.config.trace.v3.OpenTelemetryConfig
            grpc_service:
              envoy_grpc:
                cluster_name: otel-collector
              timeout: 0.250s
<%- end -%>
      stat_prefix: ingress_http
<%- if @has_error_page -%>
      local_reply_config:
        mappers:
          - filter:
              # We only intercept pages with
              # status code 502 or higher.
              status_code_filter:
                comparison:
                  op: "GE"
                  value:
                    default_value: 502
                    runtime_key: errorpage_min_code
            body_format_override:
              text_format_source:
                filename: /etc/envoy/error_page.html
              content_type: "text/html; charset=UTF-8"
<%- end -%>
<%- if @use_remote_address -%>
      use_remote_address: true
      skip_xff_append: false
<%- end -%>
<%- if @downstream_idle_timeout -%>
      common_http_protocol_options:
        idle_timeout: <%= @downstream_idle_timeout %>s
<%- end -%>
<%- if @stream_idle_timeout -%>
      stream_idle_timeout: <%= @stream_idle_timeout %>s
<%- end -%>
<%- if @request_timeout -%>
      request_timeout: <%= @request_timeout %>s
<%- end -%>
<%- if @request_headers_timeout -%>
      request_headers_timeout: <%= @request_headers_timeout %>s
<%- end -%>
<%- if @delayed_close_timeout -%>
      delayed_close_timeout: <%= @delayed_close_timeout %>s
<%- end -%>
<%- if @http2_options -%>
      http2_protocol_options:
        max_concurrent_streams: <%= @http2_options['max_concurrent_streams'] %>
        initial_stream_window_size: <%= @http2_options['initial_stream_window_size'] %>
        initial_connection_window_size: <%= @http2_options['initial_connection_window_size'] %>
<%- end -%>
<%- if @access_log -%>
      access_log:
      - name: envoy.file_access_log
        filter:
          status_code_filter:
            comparison:
              op: "GE"
              value:
                default_value: 500
                runtime_key: global_tls_min_log_code
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
          path: "/var/log/envoy/global_tls.log"
<%- end -%>
      route_config:
<%- unless @response_headers_to_add.empty? -%>
        response_headers_to_add:
  <%- @response_headers_to_add.each_pair do |header, value| -%>
        - header: {key: <%= header %>, value: <%= value %>}
  <%- end -%>
<%- end -%>
        virtual_hosts:
        <%- @upstreams.each do |upstream| -%>
<%- if upstream['upstream'].include? 'port' -%>
        - name: non_sni_port_<%= upstream['upstream']['port'] %>
<%- elsif upstream['upstream'].include? 'path' -%>
        - name: non_sni_path_<%= upstream['upstream']['path'] %>
<%- end -%>
          domains: <%= upstream['server_names'] %>
          routes:
          - match: { prefix: "/" }
            route:
<%- if upstream['upstream'].include? 'port' -%>
              cluster: local_port_<%= upstream['upstream']['port'] %>
<%- elsif upstream['upstream'].include? 'path' -%>
              cluster: local_path_<%= upstream['upstream']['path'] %>
<%- end -%>
              timeout: <%= @upstream_response_timeout %>s
<%- if @upstream_idle_timeout -%>
              idle_timeout: <%= @upstream_idle_timeout %>s
<%- end -%>
              <%- unless @retry_policy.empty? -%>
              retry_policy:
                <%- @retry_policy.each do |k, v| -%>
                <%= k %>: <%= scope.call_function('to_json',[v]) %>
                <%- end -%>
              <%- end -%>
        <%- end -%>
      http_filters:
<%- if @lua_script -%>
      - name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inline_code: |
<%- @lua_script.each_line do |script_line| -%>
            <%= script_line -%>
<%- end -%>
<%- end -%>
      - name: envoy.filters.http.router
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      http_protocol_options:
        accept_http_10: true
<%- if @header_key_format != 'none' -%>
        header_key_format:
<%- if @header_key_format == 'proper_case' -%>
          proper_case_words: {}
<%- elsif @header_key_format == 'preserve_case' -%>
          stateful_formatter:
            name: preserve_case
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig
<%- end -%>
<%- end -%>
      server_header_transformation: APPEND_IF_ABSENT
<%- end -%>

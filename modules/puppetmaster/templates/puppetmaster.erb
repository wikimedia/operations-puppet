# This file is managed by Puppet!

# Passenger configuration
PassengerHighPerformance on
PassengerMaxPoolSize <%= scope.lookupvar('::processorcount').to_i * 4 %>
PassengerPoolIdleTime 1500
PassengerMaxRequests 100
PassengerStatThrottleRate 120
PassengerUseGlobalQueue on
RackAutoDetect Off
RailsAutoDetect Off

<VirtualHost <%= scope.lookupvar('puppetmaster::passenger::bind_address') %>:8140>
	SSLEngine on
	SSLProtocol -ALL +SSLv3 +TLSv1
	SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP

	SSLCertificateFile      /var/lib/puppet/server/ssl/certs/<%= scope.lookupvar('puppetmaster::server_name') %>.pem
	SSLCertificateKeyFile   /var/lib/puppet/server/ssl/private_keys/<%= scope.lookupvar('puppetmaster::server_name') %>.pem
	SSLCACertificateFile    /var/lib/puppet/server/ssl/ca/ca_crt.pem
	SSLCertificateChainFile /var/lib/puppet/server/ssl/ca/ca_crt.pem
	# If Apache complains about invalid signatures on the CRL, you can try disabling
	# CRL checking by commenting the next line, but this is not recommended.
	SSLCARevocationPath     /var/lib/puppet/server/ssl/crl
	SSLVerifyClient <%= scope.lookupvar('puppetmaster::passenger::verify_client') %>
	SSLVerifyDepth  1
	SSLOptions +StdEnvVars

	RackBaseURI /

	<Location />
		Order Allow,Deny
<% scope.lookupvar('puppetmaster::passenger::allow_from').each do |entry| -%>
		Allow from <%= entry.gsub(/^\*/, "") %>
<% end -%>
<% scope.lookupvar('puppetmaster::passenger::deny_from').each do |entry| -%>
		Deny from <%= entry.gsub(/^\*/, "") %>
<% end -%>
	</Location>

	DocumentRoot /usr/share/puppet/rack/puppetmasterd/public
	<Directory /usr/share/puppet/rack/puppetmasterd/>
		Options None
		AllowOverride None
		Order allow,deny
		allow from all
	</Directory>

	LogFormat "%h %l %u %{%Y-%m-%d %H:%M:%S}t \"%r\" %>s %O %D \"%{Referer}i\" \"%{User-Agent}i\"" puppetmaster
	CustomLog /var/log/apache2/access.log puppetmaster
</VirtualHost>


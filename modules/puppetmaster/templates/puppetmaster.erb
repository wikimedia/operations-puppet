# This file is managed by Puppet!

<VirtualHost <%= scope.lookupvar('puppetmaster::passenger::bind_address') %>:8140>
    SSLEngine on
    <%= @ssl_settings.join("\n    ") %>
    SSLCertificateFile      /var/lib/puppet/server/ssl/certs/<%= scope.lookupvar('puppetmaster::server_name') %>.pem
    SSLCertificateKeyFile   /var/lib/puppet/server/ssl/private_keys/<%= scope.lookupvar('puppetmaster::server_name') %>.pem
    SSLCACertificateFile    /var/lib/puppet/server/ssl/ca/ca_crt.pem
    SSLCertificateChainFile /var/lib/puppet/server/ssl/ca/ca_crt.pem
    # If Apache complains about invalid signatures on the CRL, you can try disabling
    # CRL checking by commenting the next line, but this is not recommended.
    SSLCARevocationPath     /var/lib/puppet/server/ssl/crl
    SSLVerifyClient <%= scope.lookupvar('puppetmaster::passenger::verify_client') %>
    SSLVerifyDepth  1
    SSLOptions +StdEnvVars

    RackBaseURI /

    <Location />
        <%- scope.lookupvar('puppetmaster::passenger::allow_from').each do |entry| -%>
        Require ip <%= entry.gsub(/^\*/, "") %>
        <%- end -%>
        <%- scope.lookupvar('puppetmaster::passenger::deny_from').each do |entry| -%>
        Require not ip <%= entry.gsub(/^\*/, "") %>
        <%- end -%>
    </Location>

    DocumentRoot <%= @puppetmaster_rack_path %>/public
    <Directory <%= @puppetmaster_rack_path %>/>
        Options None
        AllowOverride None
        Require all granted
    </Directory>

    CustomLog /var/log/apache2/puppetmaster.log wmf
</VirtualHost>



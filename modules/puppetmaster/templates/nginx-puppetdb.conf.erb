# This file is managed by puppet. Do not edit
log_format  show_client_cert '$remote_addr - $ssl_client_s_dn - $ssl_client_verify - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$upstream_response_time"';

server {

    listen <%= @port %> ssl default_server;
    listen [::]:<%= @port %> ssl default_server ipv6only=on;

    # SSL settings
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;

    ssl_verify_client optional;
    ssl_client_certificate /etc/ssl/certs/Puppet_Internal_CA.pem;

    <%= @ssl_settings.join("\n    ") %>

    access_log   /var/log/nginx/puppetdb_access.log show_client_cert;
    error_log    /var/log/nginx/puppetdb_error.log;

    root /dev/null;

    client_max_body_size 30m;

    # Don't be fussy about who can do this
    location /pdb/query/v4/ {
        proxy_pass http://127.0.0.1:<%= @jetty_port %>/pdb/query/v4/;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Real-IP $remote_addr;
    }

    location / {
        if ($ssl_client_verify != "SUCCESS") {
            return 401;
        }

        set $authorised 0;
<%- @puppetmasters.each do |host| -%>
        if ($ssl_client_s_dn = 'CN=<%= host %>') {
            set $authorised 1;
        }
<%- end -%>
        if ($authorised = 0) {
            return 403;
        }
        proxy_pass http://127.0.0.1:<%= @jetty_port %>/;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Real-IP $remote_addr;
    }
}


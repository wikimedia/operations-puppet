#!/usr/bin/env bash
# Update the local puppet checkout

set -e
#set -x

# TODO: rewrite in python?

# Run script as root
[[ ${UID} -ne 0 ]] && exec sudo ${0} "${@}"

echo "--- $0 $(date +%Y-%m-%dT%H:%M:%S)"

REPO='<%= @repo_path %>'
TRACK_BRANCH=production
REBASE_OPTS=(
    '--preserve-merges'
    '--stat'
    '--strategy-option=patience'
    '--strategy=recursive'
)
HAVE_STASH=0

cd ${REPO}

# Fetch new changes from origin
git fetch --verbose origin

# Kill all local uncommited changes.
# Local hacking on a puppetmaster is bad. Do not do that.
git reset --hard

# Rebase locally commited changes on top of tracked origin branch
git rebase "${REBASE_OPTS[@]}" origin/${TRACK_BRANCH}

if [[ $? -ne 0 ]]; then
    echo "Rebase failed! See error messages above." 1>&2
    echo "Reverting rebase attempt" 1>&2
    git rebase --abort
    exit 2
fi

# Ensure that submodule changes are applied to the local checkout
git submodule update --init --recursive

# Tag the local repo state for rollback and troubleshooting
TAG="beta-$(date +%Y%m%dT%H%M)"
git tag "$TAG"
echo "Tagged as: ${TAG}"

# Display local commits
echo "Local hacks:"
git log --color --pretty=oneline --abbrev-commit origin/HEAD..HEAD |
sed 's/^/  /'

# Send stats on how many cherry-picked commits there are to statsd
STATS_PREFIX="`cat /etc/wmflabs-project`.`cat /etc/wmflabs-instancename`"
CHERRY_PICKED_COUNT=`git log --pretty=oneline --abbrev-commit origin/HEAD..HEAD | wc -l`
echo -n "$STATS_PREFIX.puppetmaster.cherrypicked_commits:$CHERRY_PICKED_COUNT|g" |
    nc -w 1 -u <%= @statsd_host %> 8125

#!/usr/bin/env bash
# Update the local puppet checkout

set -e
#set -x

# TODO: rewrite in python?

# Run script as root
[[ ${UID} -ne 0 ]] && exec sudo ${0} "${@}"

echo "--- ${0} $(date +%Y-%m-%dT%H:%M:%S)"

function rebase_repo() {
    REPO_PATH="${1}"
    TRACK_BRANCH="${2}"
    REBASE_OPTS=(
        '--preserve-merges'
        '--stat'
        '--strategy=recursive'
        '--strategy-option=patience'
    )

    cd "${REPO_PATH}"

    DIFF=$(git diff)
    if [ -n "${DIFF}" ]; then
        echo "Local diffs detected.  Commit your changes!"
        return 2
    fi

    # Fetch new changes from origin
    git fetch --verbose origin

    # Rebase locally commited changes on top of tracked origin branch
    if ! git rebase "${REBASE_OPTS[@]}" "origin/${TRACK_BRANCH}"; then
        echo "Rebase failed! See error messages above." 1>&2
        echo "Reverting rebase attempt" 1>&2
        git rebase --abort
        return 2
    fi

    # Ensure that submodule changes are applied to the local checkout
    git submodule update --init --recursive

    # Tag the local repo state for rollback and troubleshooting
    TAG="snapshot-$(date +%Y%m%dT%H%M)"
    git tag "${TAG}"
    echo "Tagged as: ${TAG}"

    # Display local commits
    echo "Local hacks:"
    git log --color --pretty=oneline --abbrev-commit origin/HEAD..HEAD |
    sed 's/^/  /'
}

rebase_repo /var/lib/git/operations/puppet production
rebase_repo /var/lib/git/labs/private master

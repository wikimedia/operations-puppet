#!/usr/bin/env bash
# Update the local puppet checkout

set -e
#set -x

# TODO: rewrite in python?

# pull via ssh - use the wrapper ssh command
export GIT_SSH=/var/lib/git/ssh

# Used only on labs, send metrics to labmon1001
STATSD_HOST=labmon1001.eqiad.wmnet
# Run script as root
[[ ${UID} -ne 0 ]] && exec sudo ${0} "${@}"

echo "--- ${0} $(date +%Y-%m-%dT%H:%M:%S)"

function rebase_repo() {
    REPO_NAME="${1}"
    REPO_PATH="${2}"
    TRACK_BRANCH="${3}"
    REBASE_OPTS=(
        '--preserve-merges'
        '--stat'
        '--strategy-option=patience'
        '--strategy=recursive'
    )
    HAVE_STASH=0

    cd ${REPO_PATH}

    DIFF=`git diff`
    if [ -n "${DIFF}" ]; then
        echo "Local diffs detected.  Commit your changes!"
        exit 2
    fi

    # Fetch new changes from origin
    git fetch --verbose origin

    # Rebase locally commited changes on top of tracked origin branch
    git rebase "${REBASE_OPTS[@]}" origin/${TRACK_BRANCH}

    if [[ ${?} -ne 0 ]]; then
        echo "Rebase failed! See error messages above." 1>&2
        echo "Reverting rebase attempt" 1>&2
        git rebase --abort
        exit 2
    fi

    # Ensure that submodule changes are applied to the local checkout
    git submodule update --init --recursive

    # Tag the local repo state for rollback and troubleshooting
    TAG="snapshot-$(date +%Y%m%dT%H%M)"
    git tag "${TAG}"
    echo "Tagged as: ${TAG}"

    # Display local commits
    echo "Local hacks:"
    git log --color --pretty=oneline --abbrev-commit origin/HEAD..HEAD |
    sed 's/^/  /'

    # Send stats on how many cherry-picked commits there are to statsd
    STATS_PREFIX="`cat /etc/wmflabs-project`.`cat /etc/wmflabs-instancename`"
    CHERRY_PICKED_COUNT=`git log --pretty=oneline --abbrev-commit origin/HEAD..HEAD | wc -l`
    echo -n "${STATS_PREFIX}.puppetmaster.cherrypicked_commits.${REPO_NAME}:${CHERRY_PICKED_COUNT}|g" |
        nc -w 1 -u ${STATSD_HOST} 8125
}

rebase_repo ops-puppet /var/lib/git/operations/puppet production

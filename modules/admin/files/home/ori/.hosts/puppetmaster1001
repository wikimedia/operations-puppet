#!/bin/bash

PYBAL_CONFIG="/srv/pybal-config/pybal"


# Echo the current state of a host.
_pybal_query() { (
  cd "$PYBAL_CONFIG"
  state="$(git grep "$1")"
  enabled="$(grep -Po "(True|False)" <<<"$state")"
  weight="$(grep -Po "(?<='weight': )\d+" <<<"$state")"
  case "$enabled" in
  True) echo "$1 is $(tput setaf 7; tput bold)pooled$(tput sgr0) (weight: $(tput setaf 3; tput bold)$weight$(tput sgr0))." ;;
  False) echo "$1 is $(tput setaf 0; tput bold)depooled$(tput sgr0)." ;;
  esac
) }


# Verify that a string corresponds to a hostname with a single entry.
_pybal_validate_host() { (
  cd "$PYBAL_CONFIG"
  [ "$(git grep -c "$1" | awk -F: '{s+=$2}END{print s}')" -eq 1 ]
) }


# Pool/depool a host.
_pybal_set() { (
  local command="$1" host="$2"

  cd "$PYBAL_CONFIG"

  case "$command" in
  pool|repool) replace=False with=True ;;
  depool) replace=True with=False ;;
  *) echo >&2 "Invalid command."; return 1 ;;
  esac

  local match=$(git grep -n "$host" | cut -d: -f-2)
  local line="${match##*:}"
  local file="${PYBAL_CONFIG}/${match%%:*}"

  sudo sed -i -e "${line}s/${replace}/${with}/" "$file"
) }


pybal() {
  local command="$1" host="$2"

  _pybal_validate_host "$host" || {
    echo >&2 "'$1' is ambiguous."
    return 1
  }

  case "$command" in
  pool|repool|depool) _pybal_set "$command" "$host" ;;
  esac

  _pybal_query "$host"
}


hhvm_rolling_restart() {
    set -e
    sudo -v  # Acquire and/or extend sudo up-front.

    local base_dir="/srv/pybal-config/pybal/eqiad"
    local temp_dir="$(/bin/mktemp --directory --tmpdir="$HOME" pybal.XXXXXXXXXX)"
    local pools=( apaches api rendering )

    echo "* Creating backups..."

    pushd "$base_dir" &>/dev/null
    cp "${pools[@]}" "$temp_dir"
    md5sum "${pools[@]}" > "${temp_dir}/checksum"

    for i in {0..1}; do
        echo "---"
        echo "* Doing mwXXX${i}.eqiad.wmnet..."
        md5sum --quiet --check --strict "${temp_dir}/checksum"
        for pool in "${pools[@]}"; do
            sudo sed -i'' -e "s/\(mw...${i}.eqiad.wmnet.*\)True/\1False/" "$pool"
        done
        echo "* Sleeping for 30 seconds to drain connections..."
        sleep 30
        sudo salt "mw*${i}.eqiad.wmnet" cmd.run "status hhvm 2>/dev/null | grep -q running && restart hhvm"
        pushd "$temp_dir" &>/dev/null
        sudo cp "${pools[@]}" "${base_dir}"
        popd &>/dev/null
        md5sum --check --strict "${temp_dir}/checksum"
    done

    popd &>/dev/null
    rm -rf "$temp_dir"
}

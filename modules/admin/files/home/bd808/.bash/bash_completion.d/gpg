# bash completion for gpg

have gpg &&
_gpg()
{
    local cur prev

    COMPREPLY=()
    _get_comp_words_by_ref cur prev

    case $prev in
        -s|--sign|--clearsign|--decrypt-files|--load-extension)
            _filedir
            return 0
            ;;
        --export|--sign-key|--lsignkey|--nrsignkey|--nrlsignkey|--editkey)
            # return list of public keys
            COMPREPLY=( $( compgen -W "$( gpg --list-keys 2>/dev/null | \
                sed -ne 's@^pub.*/\([^ ]*\).*$@\1@p' \
                    -ne 's@^.*\(<\([^>]*\)>\).*$@\2@p' )" -- "$cur" ) )
            return 0
            ;;
        -r|--recipient)
            COMPREPLY=( $( compgen -W "$( gpg --list-keys 2>/dev/null | \
                sed -ne 's@^.*<\([^>]*\)>.*$@\1@p')" -- "$cur" ))
            if [ -e ~/.gnupg/gpg.conf ]; then
                COMPREPLY=( "${COMPREPLY[@]}" $( compgen -W "$( sed -ne \
                    's@^[ \t]*group[ \t][ \t]*\([^=]*\).*$@\1@p' \
                    ~/.gnupg/gpg.conf  )" -- "$cur") )
            fi
            return 0
        ;;
    esac

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '$(gpg --dump-options)' -- "$cur" ) )
     fi

} &&
complete -F _gpg -o default gpg

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh

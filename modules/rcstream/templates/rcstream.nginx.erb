# Nginx reverse-proxy for RCStream
# <http://siriux.net/2013/06/nginx-and-websockets/>
# <http://socket.io/docs/using-multiple-nodes/#nginx-configuration>
# Requires Nginx 1.4+.
upstream websockets {
    ip_hash;
    <%- @backends.each do |backend| -%>
    server <%= if backend.to_s.include?(':') then backend else "127.0.0.1:#{backend}" end %>;
    <%- end -%>
}

log_format combined_with_proto '$remote_addr - $remote_user [$time_local] '
                               '"$request" $status $body_bytes_sent '
                               '"$http_referer" "$http_user_agent" '
                               '"$http_x_forwarded_proto"';

server {
    <%- Array(@listen).each do |bind| -%>
    listen       <%= bind %>;
    <%- end -%>
    server_name  <%= @server_name %>;


    access_log   /var/log/nginx/rcstream_access.log combined_with_proto;
    error_log    /var/log/nginx/rcstream_error.log;

    location <%= @location %> {
        <%- if @location != '/' -%>
        rewrite             ^<%= @location %>/?$ /rcstream_status break;
        rewrite             <%= @location %>(/.*)$ $1 break;
        <%- else -%>
        rewrite             ^/$ /rcstream_status break;
        <%- end -%>
        proxy_pass          http://websockets;
        proxy_redirect      off;
        proxy_set_header    Host $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Real-IP $remote_addr;
    }

    location <%= @location %>socket.io {
        proxy_pass          http://websockets/socket.io;
        proxy_redirect      off;
        proxy_buffering     off;

        proxy_set_header    Host $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Real-IP $remote_addr;

        proxy_http_version  1.1;
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection "upgrade";
    }
}

# Nginx reverse-proxy for RCStream
# <http://siriux.net/2013/06/nginx-and-websockets/>
# <http://socket.io/docs/using-multiple-nodes/#nginx-configuration>
# Requires Nginx 1.4+.
<%- if ! @use_ssl -%>
upstream websockets {
    ip_hash;
    <%- @backends.each do |backend| -%>
    server <%= if backend.to_s.include?(':') then backend else "127.0.0.1:#{backend}" end %>;
    <%- end -%>
}
<%- end -%>

server {
    <%- Array(@listen).each do |bind| -%>
    listen       <%= bind %><%= ' ssl' if @use_ssl %>;
    <%- end -%>
    server_name  <%= @server_name %>;
    access_log   /var/log/nginx/rcstream_<%= 'ssl_' if @use_ssl %>access.log;
    error_log    /var/log/nginx/rcstream_<%= 'ssl_' if @use_ssl %>error.log;

    <%- if @use_ssl -%>
    ssl_certificate      /etc/ssl/localcerts/<%= @server_name %>.crt;
    ssl_certificate_key  /etc/ssl/private/<%= @server_name %>.key;
    ssl_session_cache    shared:SSL:50m;
    ssl_session_timeout  5m;
    <%= @ssl_settings.join("\n") %>
    <%- end -%>

    location <%= @location %> {
        <%- if @location != '/' -%>
        rewrite             <%= @location %>(/.*)$ $1 break;
        <%- end -%>
        proxy_pass          http://websockets;
        proxy_redirect      off;
        proxy_set_header    Host $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Real-IP $remote_addr;
    }

    location <%= @location %>socket.io {
        proxy_pass          http://websockets/socket.io;
        proxy_redirect      off;
        proxy_buffering     off;

        proxy_set_header    Host $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Real-IP $remote_addr;

        proxy_http_version  1.1;
        proxy_set_header    Upgrade $http_upgrade;
        proxy_set_header    Connection "upgrade";
    }
}

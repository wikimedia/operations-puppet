#!/bin/bash
#######################################################################
# WARNING: this file is managed by Puppet
# puppet:///files/misc/beta/wmf-beta-autoupdate
#######################################################################

# NAME
# wmf-beta-autoupdate -- Continuously update MW code for beta
#
# DESCRIPTION
# wmf-beta-autoupdate is an infinite "while loop" used to checkout
# MediaWiki core code and all extensions.

# Parameters with sane (to the WMF) default values
MW_CORE_PATH=${MW_CORE_PATH:-"/home/wikipedia/common/php-master"}
MW_EXTENSIONS_PATH=${MW_EXTENSIONS_PATH:-"$MW_CORE_PATH/extensions"}
WMF_BETA_AUTOUPDATE_SLEEP=${WMF_BETA_AUTOUPDATE_SLEEP:-180}
VERBOSE=${VERBOSE:-"no"}

if [ "$VERBOSE" != "no" ]; then
	GIT_QUIET=""
else
	GIT_QUIET="--quiet"
fi

# Wrappers to make sure we dont forget about --quiet
GIT_PULL="git pull $GIT_QUIET"
GIT_FOREACH="git submodule $GIT_QUIET foreach"

# Write a message prefixed with the current time
ts_echo() { echo `date '+%Y-%m-%d %H:%M:%S'` $*; }
# Write message to stderr
error() { ts_echo "$*" >&2; }

# Params: $exitcode, $output
handle_command_result() {
	local exitcode=$1
	shift
	local output="$*"
	if [ $exitcode -eq 0 ]; then
		return 0
	fi
	ts_echo $output
	ts_echo "Exit code: $exitcode"
}

# When killed, make sure we are also getting rid of the child jobs
# we have spawned.
trap 'kill %-; exit' SIGTERM

# Start infinite loop
while [ 1 ]; do

	ts_echo "update MediaWiki core in $MW_CORE_PATH"
#	if [ ! -d "${MW_CORE_PATH}/.git" ]; then
#		error "ERR> $MW_CORE_PATH is not a git repo"
#	else
		OUTPUT=`(cd $MW_CORE_PATH && $GIT_PULL 2>&1)`
		handle_command_result $? "$OUTPUT"
#	fi

	ts_echo "update extensions in $MW_EXTENSIONS_PATH"
	if [ ! -d "${MW_EXTENSIONS_PATH}/.git" ]; then
		error "ERR> $MW_EXTENSIONS_PATH is not a git repo"
	else
		# Update the generic repository holding all submodules
		OUTPUT=`(cd $MW_EXTENSIONS_PATH && $GIT_PULL 2>&1)`
		handle_command_result $? "$OUTPUT"
		# Update submodules
		OUTPUT=`(cd $MW_EXTENSIONS_PATH && $GIT_FOREACH $GIT_PULL 2>&1)`
		handle_command_result $? "$OUTPUT"
	fi

	# Update localisation cache
	ts_echo "updating localisation cache"
	OUTPUT=`(mw-update-l10n)`
	handle_command_result $? "$OUTPUT"

	ts_echo "Sleeping for ${WMF_BETA_AUTOUPDATE_SLEEP} seconds"
	sleep $WMF_BETA_AUTOUPDATE_SLEEP;

done;

cluster: cephosd
profile::ceph::auth::load_all::configuration:
  dse-k8s-csi:
    caps:
      mon: profile rbd
      mgr: profile rbd pool=dse-k8s-csi-ssd
      osd: profile rbd pool=dse-k8s-csi-ssd
  dse-k8s-csi-cephfs:
    # Cf https://github.com/ceph/ceph-csi/blob/devel/docs/capabilities.md#cephfs
    caps:
      mgr: allow rw
      osd: allow rw tag cephfs metadata=dpe, allow rw tag cephfs data=dpe
      mds: allow r fsname=dpe path=/volumes, allow rws fsname=dpe path=/volumes/csi
      mon: allow r fsname=dpe
  admin:
    caps:
      mgr: allow *
      mon: allow *
      osd: allow *
      mds: allow *
  mon.:
    keyring_path: /etc/ceph/ceph.mon.keyring
    import_to_ceph: false
    caps:
      mon: allow *
  mon.cephosd1001:
    import_to_ceph: false
    caps:
      mon: allow *
  mon.cephosd1002:
    import_to_ceph: false
    caps:
      mon: allow *
  mon.cephosd1003:
    import_to_ceph: false
    caps:
      mon: allow *
  mon.cephosd1004:
    import_to_ceph: false
    caps:
      mon: allow *
  mon.cephosd1005:
    import_to_ceph: false
    caps:
      mon: allow *
  mgr.cephosd1001:
    keyring_path: /var/lib/ceph/mgr/ceph-cephosd1001/keyring
    caps:
      mon: allow profile mgr
      osd: allow *
      mds: allow *
  mgr.cephosd1002:
    keyring_path: /var/lib/ceph/mgr/ceph-cephosd1002/keyring
    caps:
      mon: allow profile mgr
      osd: allow *
      mds: allow *
  mgr.cephosd1003:
    keyring_path: /var/lib/ceph/mgr/ceph-cephosd1003/keyring
    caps:
      mon: allow profile mgr
      osd: allow *
      mds: allow *
  mgr.cephosd1004:
    keyring_path: /var/lib/ceph/mgr/ceph-cephosd1004/keyring
    caps:
      mon: allow profile mgr
      osd: allow *
      mds: allow *
  mgr.cephosd1005:
    keyring_path: /var/lib/ceph/mgr/ceph-cephosd1005/keyring
    caps:
      mon: allow profile mgr
      osd: allow *
      mds: allow *
  bootstrap-osd:
    keyring_path: /var/lib/ceph/bootstrap-osd/ceph.keyring
    caps:
      mgr: allow r
      mon: profile bootstrap-osd
  osd.cephosd1001:
    caps:
      mon: allow profile osd
      mgr: allow profile osd
      osd: allow *
  osd.cephosd1002:
    caps:
      mon: allow profile osd
      mgr: allow profile osd
      osd: allow *
  osd.cephosd1003:
    caps:
      mon: allow profile osd
      mgr: allow profile osd
      osd: allow *
  osd.cephosd1004:
    caps:
      mon: allow profile osd
      mgr: allow profile osd
      osd: allow *
  osd.cephosd1005:
    caps:
      mon: allow profile osd
      mgr: allow profile osd
      osd: allow *
  radosgw:
    caps:
      mon: allow rw
      osd: allow rwx
  client.rgw.cephosd1001:
    caps:
      mon: allow rw
      osd: allow rwx
  client.rgw.cephosd1002:
    caps:
      mon: allow rw
      osd: allow rwx
  client.rgw.cephosd1003:
    caps:
      mon: allow rw
      osd: allow rwx
  client.rgw.cephosd1004:
    caps:
      mon: allow rw
      osd: allow rwx
  client.rgw.cephosd1005:
    caps:
      mon: allow rw
      osd: allow rwx
  mds.cephosd1001:
    keyring_path: /var/lib/ceph/mds/ceph-cephosd1001/keyring
    caps:
      mon: profile mds
      mgr: profile mds
      mds: allow *
      osd: allow *
  mds.cephosd1002:
    keyring_path: /var/lib/ceph/mds/ceph-cephosd1002/keyring
    caps:
      mon: profile mds
      mgr: profile mds
      mds: allow *
      osd: allow *
  mds.cephosd1003:
    keyring_path: /var/lib/ceph/mds/ceph-cephosd1003/keyring
    caps:
      mon: profile mds
      mgr: profile mds
      mds: allow *
      osd: allow *
  mds.cephosd1004:
    keyring_path: /var/lib/ceph/mds/ceph-cephosd1004/keyring
    caps:
      mon: profile mds
      mgr: profile mds
      mds: allow *
      osd: allow *
  mds.cephosd1005:
    keyring_path: /var/lib/ceph/mds/ceph-cephosd1005/keyring
    caps:
      mon: profile mds
      mgr: profile mds
      mds: allow *
      osd: allow *

profile::ceph::ceph_repository_component: 'thirdparty/ceph-reef'

profile::ceph::radosgw::port: 80

# Generated with uuidgen
profile::ceph::fsid: 6d4278e1-ea45-4d29-86fe-85b44c150813

profile::ceph::mon::hosts:
  "cephosd1001.eqiad.wmnet":
    public:
      addr: "10.64.130.13"
  "cephosd1002.eqiad.wmnet":
    public:
      addr: "10.64.131.21"
  "cephosd1003.eqiad.wmnet":
    public:
      addr: "10.64.132.23"
  "cephosd1004.eqiad.wmnet":
    public:
      addr: "10.64.134.12"
  "cephosd1005.eqiad.wmnet":
    public:
      addr: "10.64.135.21"

profile::ceph::osd::hosts: "%{alias('profile::ceph::mon::hosts')}"

profile::ceph::public_networks:
  - 10.64.0.0/12

profile::ceph::osd::discrete_bluestore_device: true
profile::ceph::osd::bluestore_device_name: /dev/nvme0n1
profile::ceph::osd::excluded_slots:
  - 'c0/e23/s24'
  - 'c0/e23/s25'

# the -A -i ... part is a gross hack to workaround Varnish partitions
# that are purposefully at 99%. Better ideas are welcome.
profile::monitoring::nrpe_check_disk_options:
  '-w 6% -c 3% -W 6% -K 3% -l -e -A -i "/srv/sd[a-b][1-3]" -i
  "/srv/nvme[0-9]n[0-9]p[0-9]" --exclude-type=fuse --exclude-type=fuse.fuse_dfs
  --exclude-type=tracefs --exclude-type=tmpfs'

profile::contacts::role_contacts: ['Data Platform']

profile::puppet::agent::force_puppet7: true

# TLS Terminator settings
profile::envoy::ensure: present
profile::tlsproxy::envoy::services:
   - server_names: ['*']
     port: 80
profile::tlsproxy::envoy::ssl_provider: cfssl
profile::tlsproxy::envoy::global_cert_name: rgw.%{::site}.dpe.anycast.wmnet
profile::tlsproxy::envoy::listen_ipv6: true
# Temporaily reverting to ferm because of an issue with the firewall_src_sets
profile::tlsproxy::envoy::ferm_srange: (($ANALYTICS_NETWORKS $DSE_KUBEPODS_NETWORKS (@resolve((db1208.eqiad.wmnet)) @resolve((db1208.eqiad.wmnet), AAAA))))
# profile::firewall::provider: nftables
# profile::tlsproxy::envoy::firewall_src_sets:
#   - ANALYTICS_NETWORKS
#   - DSE_KUBEPODS_NETWORKS
# profile::tlsproxy::envoy::firewall_srange:
#   - db1208.eqiad.wmnet

cluster: etcd

profile::etcd::v3::cluster_name: "v3.%{::domain}"
profile::etcd::v3::cluster_bootstrap: true
profile::etcd::v3::discovery: "dns:v3.%{::domain}"
profile::etcd::v3::use_client_certs: false
profile::etcd::v3::allow_from: "$DOMAIN_NETWORKS"
profile::etcd::v3::max_latency: 10
profile::etcd::v3::adv_client_port: 4001
profile::etcd::v3::do_backup: true
# This cert is generated using puppet-ecdsacert, and includes
# all the hostnames for the etcd machines in the SANs
# Will need to be regenerated if we add servers to the cluster.
profile::etcd::tlsproxy::cert_name: "etcd-v3.%{::domain}"
profile::etcd::tlsproxy::acls: { /: ["root"], /conftool: ["root", "conftool"], /eventlogging: []}
# This should come from the private hieradata
#profile::etcd::tlsproxy::salt
profile::etcd::tlsproxy::read_only: true
profile::etcd::tlsproxy::listen_port: 4001
profile::etcd::tlsproxy::upstream_port: 2379
profile::etcd::tlsproxy::tls_upstream: true

profile::zookeeper::cluster_name: "main-%{::site}"
# To avoid version conflics with Cloudera zookeeper package, this
# class manually specifies which debian package version should be installed.
profile::zookeeper::firewall::access: ['KAFKA_BROKERS_JUMBO', 'KAFKA_BROKERS_MAIN', 'KAFKA_BROKERS_LOGGING', 'ZOOKEEPER_HOSTS_MAIN', 'KAFKAMON_HOSTS', 'WIKIKUBE_KUBEPODS_NETWORKS', 'DSE_KUBEPODS_NETWORKS']
profile::zookeeper::monitoring_enabled: true
# Page if a zookeeper server in this cluster goes down.
profile::zookeeper::is_critical: true

profile::tlsproxy::instance::nginx_variant: 'light'
profile::contacts::role_contacts: ['ServiceOps']

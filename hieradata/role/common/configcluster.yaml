cluster: etcd


profile::etcd::cluster_name: "%{::domain}"
profile::etcd::cluster_bootstrap: true
profile::etcd::discovery: "dns:%{::domain}"
profile::etcd::use_proxy: true
profile::etcd::use_client_certs: false
profile::etcd::do_backup: true
profile::etcd::allow_from: "$DOMAIN_NETWORKS"
# This cert is generated using puppet-ecdsacert, and includes
# all the hostnames for the etcd machines in the SANs
# Will need to be regenerated if we add servers to the cluster.
profile::etcd::tlsproxy::cert_name: "etcd.%{::domain}"
profile::etcd::tlsproxy::acls: { /: ["root"], /conftool: ["root", "conftool"], /eventlogging: []}
# These should come from the private hieradata
#profile::etcd::tlsproxy::accounts
#profile::etcd::tlsproxy::salt
profile::etcd::tlsproxy::read_only: false
# Page if a zookeeper server in this cluster goes down.
profile::zookeeper::is_critical: true
# Max number of connections per IP for Zookeeper
profile::zookeeper::max_client_connections: 1024
# Default tick_time is 2000ms, this should allow a max
# of 16 seconds of latency for Zookeeper client sessions.
# See comments in role::kafka::analytics::broker for more info.
profile::zookeeper::sync_limit: 8
# To avoid version conflics with Cloudera zookeeper package, this
# class manually specifies which debian package version should be installed.
profile::zookeeper::zookeeper_version: '3.4.5+dfsg-2+deb8u2'
profile::zookeeper::firewall::srange: '(($HADOOP_MASTERS $KAFKA_BROKERS_ANALYTICS $KAFKA_BROKERS_JUMBO $KAFKA_BROKERS_MAIN $ZOOKEEPER_HOSTS_MAIN @resolve(krypton.eqiad.wmnet)))'

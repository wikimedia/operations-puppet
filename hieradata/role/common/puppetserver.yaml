# TODO: drop this and use production when we have just one infra
profile::puppetserver::scripts::realm_override: "production7"
puppet_ca_server: 'puppetserver1001.eqiad.wmnet'
profile::contacts::role_contacts: ["Infrastructure Foundations"]
profile::base::production::role_description: 'Puppetserver'
profile::puppet::agent::force_puppet7: true
profile::puppet::agent::puppetmaster: "%{facts.networking.fqdn}"
profile::puppetserver::auto_restart: false
profile::puppetserver::ca_server: 'puppetserver1001.eqiad.wmnet'
profile::puppetserver::ca_public_key: 'puppet:///modules/profile/puppetserver/puppet_ca.pem'
profile::puppetserver::ca_crl: 'puppet:///modules/profile/puppetserver/pki_crl.pem'
profile::puppetserver::ca_private_key_secret: 'puppetserver/puppet_ca.key'
profile::puppetserver::reports: ['logstash']
# This value is based on the available memory (64GB) on all puppetservers,
# rather than focusing only on the CPU count. This shold limit the heap
# usage for each JRuby worker, and avoid trashing/OOM.
# More info: T373527
profile::puppetserver::max_active_instances: 35
profile::puppetserver::hierarchy:
  - name: "private node"
    datadir: "/etc/puppet/private/hieradata"
    path: "hosts/%{literal('%')}{::hostname}.yaml"
  - name: "node hierarchy"
    path: "hosts/%{literal('%')}{::hostname}.yaml"
  - name: "netbox node hierarchy"
    path: "hosts/%{literal('%')}{::hostname}.yaml"
    datadir: "/etc/puppet/netbox"
  - name: "Regex lookup"
    lookup_key: 'wmflib::regex_data'
    path: 'regex.yaml'
    options:
      node: "%{literal('%')}{::fqdn}"
  - name: "role"
    paths:
      - "role/%{literal('%')}{::site}/%{literal('%')}{::_role}.yaml"
      - "role/common/%{literal('%')}{::_role}.yaml"
  - name: "private role"
    datadir: "/etc/puppet/private/hieradata"
    paths:
      - "role/%{literal('%')}{::site}/%{literal('%')}{::_role}.yaml"
      - "role/common/%{literal('%')}{::_role}.yaml"
  - name: "private site"
    lookup_key: 'wmflib::expand_path'
    datadir: "/etc/puppet/private/hieradata"
    path: "%{literal('%')}{::site}"
  - name: "expand_path site"
    path: "%{literal('%')}{::site}"
    lookup_key: 'wmflib::expand_path'
  - name: "netbox common hierarchy"
    path: "common.yaml"
    datadir: "/etc/puppet/netbox"
  - name: "common"
    lookup_key: 'wmflib::expand_path'
    path: "common"
  - name: "private common"
    lookup_key: 'wmflib::expand_path'
    datadir: "/etc/puppet/private/hieradata"
    path: "common"
# Conftool
profile::conftool::client::etcd_user: 'root'
profile::conftool::master::git_dir: "/srv/git"
profile::conftool::master::sync_dir: "/etc/conftool/data"
profile::conftool::state::ensure: present
profile::conftool::state::query_interval: 30
profile::puppetserver::extra_mounts:
  volatile: "/srv/puppet_fileserver/volatile"  # see https://wikitech.wikimedia.org/wiki/Puppet#Volatile_mount

# We use a simple envoy (TLS) + httpd (HTTP) stack to expose the SHA1 values
# produced by puppet-merge.py. They are published by config-master.discovery.wmnet,
# since it proxies to the active/canonical/authoritative puppetserver that allows
# puppet-merge to be run.
profile::envoy::ensure: present
profile::tlsproxy::envoy::services:
   - server_names: ['*']
     port: 80
profile::tlsproxy::envoy::ssl_provider: cfssl
profile::tlsproxy::envoy::global_cert_name: "%{facts.networking.fqdn}"
profile::puppetserver::configmaster::server_name: "%{facts.networking.fqdn}"
profile::puppetserver::configmaster::document_root: /srv/config-master
profile::puppetserver::swift_fetch_rings::active_server: puppetserver1001.eqiad.wmnet
cluster: puppet


# Setup conftool2git
profile::conftool2git::address: '0.0.0.0:1312'
profile::conftool2git::active_host: 'puppetserver1003.eqiad.wmnet' # TODO: make this a cname that can be migrated
profile::conftool2git::pubkey: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFxBFG366Oc6hluBmYjFdQVCKxntZ2aOmXU8YIzv+A6c'
# You also need to define profile::conftool2git::ssh_privkey in the private repo

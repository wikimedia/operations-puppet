profile::puppet::agent::force_puppet7: true

profile::kubernetes::deployment_server::helm_user_group: contint-admins
profile::admin::groups:
  - contint-users
  - contint-admins
  - contint-roots
  - contint-docker
cluster: ci
contactgroups: "admins,contint"

profile::ci::manager_host: contint1002.wikimedia.org

profile::ci::jenkins::prefix: "/ci"
profile::ci::proxy_jenkins::http_port: 8080
profile::ci::proxy_jenkins::prefix: "/ci"
profile::ci::jenkins::builds_dir: "/srv/jenkins/builds/${ITEM_FULL_NAME}"
profile::ci::jenkins::workspaces_dir: "/srv/jenkins/workspace/${ITEM_FULL_NAME}"

profile::ci::jenkins::java_home: "/usr/lib/jvm/java-17-openjdk-amd64"

profile::ci::agent::ssh_keys:
  - "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA4QGc1Zs/S4s7znEYw7RifTuZ4y4iYvXl5jp5tJA9kGUGzzfL0dc4ZEEhpu+4C/TixZJXqv0N6yke67cM8hfdXnLOVJc4n/Z02uYHQpRDeLAJUAlGlbGZNvzsOLw39dGF0u3YmwDm6rj85RSvGqz8ExbvrneCVJSaYlIRvOEKw0e0FYs8Yc7aqFRV60M6fGzWVaC3lQjSnEFMNGdSiLp3Vl/GB4GgvRJpbNENRrTS3Te9BPtPAGhJVPliTflVYvULCjYVtPEbvabkW+vZznlcVHAZJVTTgmqpDZEHqp4bzyO8rBNhMc7BjUVyNVNC5FCk+D2LagmIriYxjirXDNrWlw== jenkins@gallium"
  - "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBItg0O9gOhArg3cJ7cU3QUcxMRoEaXPmGtqSYwbw9GTEhFyMX1kukEAli/K1dOw97BhidV2pMsbcVC3eY3CpUwg= jenkins@contint"

profile::ci::docker::settings:
  data-root: '/srv/docker'
  iptables: false

profile::java::java_packages:
  - version: "17"
    variant: "jdk"
  - version: "11"
    variant: "jdk"

# Zuul merger

profile::zuul::merger::conf:
  gearman_server: 'contint.wikimedia.org'
  gerrit_ssh_key_file: "ssh/ci/jenkins-bot_gerrit_id_rsa"
  git_dir: "/srv/zuul/git"
  git_email: "zuul-merger@%{::hostname}"
  git_name: "Wikimedia Zuul Merger"
  zuul_url: "git://%{::fqdn}"

profile::zuul::merger::ferm_srange: >-
  (($LABS_NETWORKS
  @resolve((contint1002.wikimedia.org contint2002.wikimedia.org), A)
  @resolve((contint1002.wikimedia.org contint2002.wikimedia.org), AAAA)))

# Zuul server

profile::zuul::server::conf:
  # ferm defaults to ACCEPT on loopback:
  gearman_server: localhost
  config_git_branch: master
  gearman_server_start: true
  statsd_host: localhost
  url_pattern: "https://integration.wikimedia.org/ci/job/{job.name}/{build.number}/console"
  status_url: "https://integration.wikimedia.org/zuul/"

profile::zuul::server::email_server: localhost

# profile::ci::shipyard::ci_build_user_password: defined in the private repo
# profile::local_dev::ci_build_user_password: defined in the private repo
profile::ci::pipeline::publisher::docker_registry_user: "ci-build"
#profile::ci::pipeline::publisher::docker_registry_password: defined in the private repo
profile::monitoring::nrpe_check_disk_options: -w 10% -c 5% -W 6% -K 3% -l -e -A -i '/(var/lib|mnt|run|srv)/docker/.*' --exclude-type=tracefs
# Kubernetes configuration.
# It gives access only to the staging cluster, and the "ci" namespace specifically.
# kubernetes clusters by group.
kubernetes::clusters:
  main:
    staging:
      dc: eqiad
      master: kubestagemaster.svc.eqiad.wmnet
      pki_intermediate_base: wikikube_staging
      pki_renew_seconds: 172800
      # The following are dummy values to satisfy type checks.
      # We don't want ci/release servers to have credentials to k8s clusters
      # apart from staging, so we re-declare kubernetes::clusters here.
      # A bit of context is at: https://phabricator.wikimedia.org/T288629
      control_plane_nodes: [dummy.x.y]
      cluster_dns: ["0.0.0.0"]
      service_cluster_cidr:
        v4: "127.0.0.0/8"
        v6: "::1/128"
      cluster_cidr:
        v4: "127.0.0.0/8"
        v6: "::1/128"
      etcd_urls:
        - https://dummy.x.y
        - https://dummy.x.y
        - https://dummy.x.y
      cluster_nodes: [dummy.x.y]
      prometheus:
        port: 9907


profile::kubernetes::deployment_server::user_defaults:
  owner: "%{lookup('jenkins_agent_username')}"
  group: contint-admins
  mode: "0440"

profile::kubernetes::deployment_server::services:
  main:
    ci:
      usernames:
        - name: ci

profile::ci::migration::rsync_src_host: "contint1002.wikimedia.org"
profile::ci::migration::rsync_dst_hosts:
  - "contint2002.wikimedia.org"
profile::ci::migration::rsync_data_dirs:
  - "/var/lib/jenkins/"
  - "/var/lib/zuul/"
  - "/srv/jenkins/"

# Docker requires the overlay / overlayFS kernel module
profile::base::overlayfs: true

# envoy for TLS termination for integration.wikimedia.org behind ATS
profile::tlsproxy::envoy::ensure: present
profile::tlsproxy::envoy::services:
  - server_names: ["*"]
    port: 80
profile::tlsproxy::envoy::ssl_provider: 'cfssl'
profile::tlsproxy::envoy::global_cert_name: "contint.wikimedia.org"
profile::tlsproxy::envoy::cfssl_options:
  hosts:
    - integration.wikimedia.org
profile::tlsproxy::envoy::sni_support: "no"
profile::tlsproxy::envoy::tls_port: 1443
profile::tlsproxy::envoy::ferm_srange: "$CACHES"

profile::contacts::role_contacts: ['Collaboration Services']
profile::base::production::role_description: 'CI server'

# keep Python2 packages on bullseye to be able to run Zuul v2
profile::base::remove_python2_on_bullseye: false

profile::prometheus::statsd_exporter::mappings:
  # Geard metrics
  - match: 'zuul.geard.workers'
    name: 'zuul_geard_workers_count'

  - match: 'zuul.geard.queue.*'
    name: 'zuul_geard_queue_${1}_count'

  - match: 'zuul.geard.packet.*'
    # Force counter type
    # geard sends timer + counter with the same metric name
    match_metric_type: 'counter'
    name: 'zuul_geard_packet_total'
    labels:
      name: '$1'

  # Pipeline current changes
  - match: 'zuul\.pipeline\.(.+)\.current_changes'
    name: 'zuul_pipeline_current_changes_count'
    match_type: 'regex'
    labels:
      pipeline: '$1'

  # Jobs completed
  - match: 'zuul\.pipeline\.(.+)\.all_jobs'
    name: 'zuul_pipeline_jobs_total'
    match_type: 'regex'
    labels:
      pipeline: '$1'

  # For total_changes and resident_time metrics only consider default matching
  # to capture the pipeline name. Zuul sends both for pipeline name (which can
  # contain dots, but most don't) and for "project name" so when using regex
  # capture it means we'd be double-accounting when summing the metric.
  # As an effect of the above, pipeline names with dots won't get accounted
  # here (e.g. gate-and-submit-1.31)
  - match: 'zuul\.pipeline\.(.+)\.total_changes'
    name: 'zuul_pipeline_changes_total'
    match_type: 'regex'
    labels:
      pipeline: '$1'

  # The time spent in queue, for all items
  - match: 'zuul\.pipeline\.(.+)\.resident_time'
    name: 'zuul_pipeline_resident_time_seconds'
    match_type: 'regex'
    labels:
      pipeline: '$1'

  # Breakdown by job and label
  - match: 'zuul\.pipeline\.(.+)\.job\.(.+)\.wait_time'
    name: 'zuul_pipeline_job_wait_time_seconds'
    match_type: 'regex'
    labels:
      pipeline: '$1'
      job_name: '$2'

  - match: 'zuul\.pipeline\.(.+)\.label\.(.+)\.wait_time'
    name: 'zuul_pipeline_label_wait_time_seconds'
    match_type: 'regex'
    labels:
      pipeline: '$1'
      label: '$2'

  # Force 'counter' type because the same metric name is sent as counter and as
  # timer on success/failure.
  # Use this rule after wait_time so all job statuses are collected here
  - match: 'zuul\.pipeline\.(.+)\.job\.(.+)\.(.+)'
    name: 'zuul_pipeline_job_completed_total'
    match_metric_type: 'counter'
    match_type: 'regex'
    labels:
      pipeline: '$1'
      job_name: '$2'
      status: '$3'

  # Gerrit events
  - match: 'gerrit.event.*'
    name: 'gerrit_events_total'
    labels:
      action: '$1'

  # Drop remaining zuul metrics
  - match: "^zuul"
    action: 'drop'
    match_type: 'regex'
    name: "zuul_dropped"

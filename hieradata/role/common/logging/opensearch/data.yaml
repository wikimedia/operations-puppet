# General configs
profile::contacts::role_contacts: ['Observability']
profile::base::production::role_description: 'OpenSearch data node'

cluster: logstash

profile::admin::groups:
  - logstash-roots
  - elasticsearch-roots

# OpenSearch
# NOTE: short_cluster_name must be kept in sync with the collector role (logging/opensearch/collector.yaml)
profile::opensearch::version: '2.0.0'
profile::opensearch::rack: ''
profile::opensearch::row: ''
profile::opensearch::instances: {}
profile::opensearch::dc_settings: {}
profile::opensearch::base_data_dir: '/srv/opensearch'
profile::opensearch::common_settings:
  awareness_attributes: ''
  auto_create_index: true
  short_cluster_name: elk7
  expected_nodes: 10
  heap_memory: '24G'
  minimum_master_nodes: 2
  recover_after_nodes: 2
  recover_after_time: '1m'
  # Dont encourage some sort of accidental feedback loop
  send_logs_to_logstash: false
  curator_uses_unicast_hosts: false
  http_port: 9200
  transport_tcp_port: 9300
  filter_cache_size: '10%'
  disktype: 'hdd'
  disable_security_plugin: true
  watermarks:  # Cluster watermarks T368168
    low: '1500gb'
    high: '500gb'
    flood_stage: '100gb'

profile::opensearch::monitoring::enable_shard_size_check: false

# the logstash cluster has 3 data nodes, and each shard has 3 replica (each
# shard is present on each node). If one node is lost, 1/3 of the shards
# will be unassigned, with no way to reallocate them on another node, which
# is fine and should not raise an alert. So threshold needs to be > 1/3.
profile::opensearch::monitoring::threshold: '>=0.34'

profile::opensearch::logstash::curator_actions:
  '01':
    description: 'logstash: delete older than 91 days'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 300
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'logstash-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%m.%d'
        unit: days
        unit_count: 91

  '02':
    description: 'dlq: delete older than 2 days'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'dlq-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%m.%d'
        unit: days
        unit_count: 2

  '03':
    description: 'ecs-default policy rev 1: delete older than 12 weeks'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'ecs-default-1-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%W'
        unit: weeks
        unit_count: 12

  '04':
    description: 'ecs-test policy rev 1: delete older than 2 weeks'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'ecs-test-1-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%W'
        unit: weeks
        unit_count: 2

  '05':
    description: 'ecs-alerts policy rev 1: delete older than 106 weeks'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: regex
        value: '^ecs-(1.7.0-\d\d?-alerts|alerts-1)-.*$'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%W'
        unit: weeks
        unit_count: 106

  '06':
    description: 'ecs-alerts-2: delete older than 5 years'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'ecs-alerts-2-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y'
        unit: years
        # count of 6 to inclusively retain the last calendar day minus five years.
        # ( e.g. 2024(deleted 2030-01-01), 2025, 2026, 2027, 2028, 2029, 2030(current year index) )
        unit_count: 6

  '07':
    description: 'w3creportingapi: delete older than 3 months'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'w3creportingapi-default-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%W'
        unit: months
        unit_count: 3

  '08':
    description: 'ecs-probes-1: delete monitoring probes logs older than 10 days'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'ecs-probes-1-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%m.%d'
        unit: days
        unit_count: 10

  '09':
    description: 'ecs-mediawiki policy rev 1: delete older than 12 weeks'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'ecs-mediawiki-1-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%W'
        unit: weeks
        unit_count: 12

  '10':
    description: 'jaeger: delete older than 32 days'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: regex
        value: '^jaeger-(service|span)-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%m.%d'
        unit: days
        unit_count: 32

  '11':
    description: 'thumbor: delete older than 7 days'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'logstash-thumbor-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%m.%d'
        unit: days
        unit_count: 7

  '12':
    description: 'ecs-k8s policy rev 1: delete older than 12 weeks'
    action: delete_indices
    options:
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'ecs-k8s-1-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%W'
        unit: weeks
        unit_count: 12

  '20':
    description: 'all: after 31 days set number of replicas to 1'
    action: replicas
    options:
      count: 1
      ignore_empty_list: true
      timeout_override: 120
    filters:
      - filtertype: pattern
        kind: prefix
        exclude: true  # exclude special indexes
        value: '^\..*'
      - filtertype: age
        source: creation_date
        direction: older
        unit: days
        unit_count: 31

  '21':
    description: 'logstash-webrequest-1: after 1 day set number of replicas to 1'
    action: replicas
    options:
      count: 1
      ignore_empty_list: true
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'logstash-webrequest-1-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%m.%d'
        unit: days
        unit_count: 1

  '22':
    description: 'logstash-thumbor-1: after 1 day set number of replicas to 1'
    action: replicas
    options:
      count: 1
      ignore_empty_list: true
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'logstash-thumbor-1-'
      - filtertype: age
        source: name
        direction: older
        timestring: '%Y.%m.%d'
        unit: days
        unit_count: 1

  # For any indices prefixed by "logstash-", and have "index.routing.allocation.require.disktype":"ssd" set,
  # and are older than 30 days, set "index.routing.allocation.require.disktype":"hdd".
  '40':
    description: 'logstash: allocate older shards on hdd nodes'
    action: allocation
    options:
      key: disktype
      value: hdd
      allocation_type: require
      ignore_empty_list: true
    filters:
      - filtertype: pattern
        kind: prefix
        value: 'logstash-'
      - filtertype: allocated
        key: disktype
        value: ssd
        allocation_type: require
        exclude: false
      - filtertype: age
        source: creation_date
        direction: older
        unit: days
        unit_count: 30

  # forceMerge "logstash-" prefixed indices older than 2 days (based on index creation_date) to 1 segments per shard.
  # Delay 120 seconds between each forceMerge operation to allow the cluster to quiesce.
  # This action will ignore indices already forceMerged to the same or fewer number of segments per shard,
  # so the 'forcemerged' filter is unneeded.
  '90':
    description: 'all: forcemerge indexes older than 2 days'
    action: forcemerge
    options:
      max_num_segments: 1
      delay: 120
      continue_if_exception: false
    filters:
      - filtertype: pattern
        kind: regex
        exclude: true  # exclude special indexes
        value: '^\..*'
      - filtertype: age
        source: creation_date
        direction: older
        unit: days
        unit_count: 2

profile::puppet::agent::force_puppet7: true

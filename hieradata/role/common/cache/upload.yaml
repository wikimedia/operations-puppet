cluster: cache_upload
cache::cluster: upload
admin::groups:
  - perf-roots
prometheus::node_exporter::collectors_extra:
  - qdisc
  - meminfo_numa
cache::tune_for_media: true
role::lvs::realserver::pools:
  varnish-frontend:
    lvs_name: upload
# The contents of this hash control our DC->DC routing for varnish backend
# daemons.  There should be a key for every cache datacenter.  The values must
# be a core datacenter (eqiad or codfw), or at least must lead indirectly to
# a core datacenter when traversing the table recursively.  A loop between
# the two core datacenters is expected and normal here.  The only reason to
# edit this is to remove a datacenter from active service (due to fault or
# maintenance) by routing around it from the edge sites.
#
cache::route_table:
  eqiad: 'codfw'
  codfw: 'eqiad'
  ulsfo: 'codfw'
  esams: 'eqiad'
cache::app_def_be_opts:
  port: 80
  connect_timeout: '5s'
  first_byte_timeout: '35s'
  max_connections: 10000
cache::app_directors:
  swift:
    backends:
      eqiad: 'ms-fe.svc.eqiad.wmnet'
      # codfw: 'ms-fe.svc.codfw.wmnet'
  swift_thumbs:
    backends:
      eqiad: 'ms-fe-thumbs.svc.eqiad.wmnet'
      # codfw: 'ms-fe-thumbs.svc.codfw.wmnet'
  kartotherian:
    be_opts:
      port:               6533
      max_connections:    1000
    backends:
      eqiad: 'kartotherian.svc.eqiad.wmnet'
      codfw: 'kartotherian.svc.codfw.wmnet'
cache::req_handling:
  upload.wikimedia.org:
    director: 'swift'
    subpaths:
      '^/+[^/]+/[^/]+/thumb/':
        director: 'swift_thumbs'
  maps.wikimedia.org:
    director: 'kartotherian'
# Profile parameters
# Profile::cache::base
profile::cache::base::zero_site: 'https://zero.wikimedia.org'
profile::cache::base::purge_host_only_upload_re: '^(upload|maps)\.wikimedia\.org$'
profile::cache::base::purge_host_not_upload_re: '^(?!(upload|maps)\.wikimedia\.org)'
profile::cache::base::storage_parts: ['sda3', 'sdb3']
# Profile::cache::ssl::unified
profile::cache::ssl::unified::monitoring: true
profile::cache::ssl::unified::letsencrypt: false

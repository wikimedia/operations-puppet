cluster: puppet
puppet_ca_server: 'puppetserver1001.eqiad.wmnet'
profile::contacts::role_contacts: ["Infrastructure Foundations"]
profile::puppet::agent::puppetmaster: puppetserver1001.eqiad.wmnet
profile::puppet::agent::force_puppet7: true
profile::puppetdb::jvm_opts: '-Xmx6g'
profile::puppetdb::puppetboard_hosts:
  - 'puppetboard1003.eqiad.wmnet'
  - 'puppetboard2003.codfw.wmnet'
profile::puppetdb::rsyslog::elk: false
profile::puppetdb::tmpfs_stockpile_queue: true
profile::puppetdb::clean_stockpile: false
profile::puppetdb::database::use_replication_slots: true
profile::puppetdb::database::replication_lag_crit: 25165824 # 24MB
profile::puppetdb::database::replication_lag_warn: 8388608 # 8MB
profile::puppetdb::database::log_line_prefix: '%m [db:%d,sess:%c,pid:%p,vtid:%v,tid:%x] '
profile::puppetdb::database::log_min_duration_statement: 10000 # 10secs
profile::puppetdb::database::log_autovacuum_min_duration: 250  # 250ms
profile::puppetdb::tmpfs_stockpile_queue: true
profile::puppetdb::ssl_verify_client: 'on'
profile::puppetdb::facts_blacklist_type: 'regex'
# The following list should only include facts which are not used by for catalog compilation
# This is specifically because we need the facts used by compilation to be available in puppetdb
# so we can export them to be used with PCC
profile::puppetdb::facts_blacklist:
  - '^ipaddress6_cali.*'
  - '^ipaddress6_tap.*'
  - '^macaddress_cali.*'
  - '^macaddress_tap.*'
  - '^mtu_cali.*'
  - '^mtu_tap.*'
  - '^netmask6_cali.*'
  - '^netmask6_tap.*'
  - '^network6_cali.*'
  - '^network6_tap.*'
  - '^lvm_vg_.*'
  - '^blockdevices.*'
  - '^block_devices.*'
  - '^mountpoints.*'  # used in cloud by cinderutils::ensure but not in production
profile::puppetdb::sites:
  puppetdb5:
    port: 8443
    cert_source: "puppet:///modules/profile/puppetdb/puppet5_certs/%{facts.networking.fqdn}.pem"
    key_secret_path: "puppetdb/puppet5_certs/%{facts.networking.fqdn}.pem"
    ca_source: "/etc/ssl/certs/wmf-ca-certificates.crt"
    allowed_hosts:
      - puppetmaster1001.eqiad.wmnet
      - puppetmaster1003.eqiad.wmnet
      - puppetmaster2001.codfw.wmnet
      - puppetmaster2002.codfw.wmnet
profile::puppetdb::node_ttl: 14d
profile::puppetdb::node_purge_ttl: 1d
profile::puppetdb::database::users:
  replication@puppetdb2003/replication:
    user: replication
    password: "%{alias('puppetdb::password::replication')}"
    database: replication
    allowed_hosts:
      - puppetdb2003.codfw.wmnet
    attrs: REPLICATION
  replication@puppetdb2003/puppetdb:
    user: replication
    password: "%{alias('puppetdb::password::replication')}"
    database: puppetdb
    allowed_hosts:
      - puppetdb2003.codfw.wmnet
  puppetdb@puppetdb2003/puppetdb:
    user: puppetdb
    password: "%{alias('puppetdb::password::rw')}"
    database: puppetdb
    allowed_hosts:
      - puppetdb2003.codfw.wmnet
  puppetdb@localhost/puppetdb:
    user: puppetdb
    password: "%{alias('puppetdb::password::rw')}"
    database: puppetdb
    allowed_hosts:
      - "%{facts.networking.fqdn}"
  puppetdb_ro@puppetdb2003/puppetdb:
    user: puppetdb_ro
    password: "%{alias('puppetdb::password::ro')}"
    database: puppetdb
    allowed_hosts:
      - puppetdb2003.codfw.wmnet
    privileges:
      table: 'SELECT'
  puppetdb_ro@localhost/puppetdb:
    user: puppetdb_ro
    password: "%{alias('puppetdb::password::ro')}"
    database: puppetdb
    allowed_hosts:
      - "%{facts.networking.fqdn}"
    privileges:
      table: 'SELECT'
  prometheus@localhost/postgres:
    user: 'prometheus'
    database: 'postgres'
    type: 'local'
    method: 'peer'
profile::puppetdb::master: puppetdb1003.eqiad.wmnet
profile::puppetdb::slaves: [puppetdb2003.codfw.wmnet]
profile::nginx::variant: 'custom'
profile::nginx::modules: []
profile::java::java_packages:
  - version: '17'
    variant: 'jre-headless'

profile::sre::os_reports::host: puppetdb2003.codfw.wmnet

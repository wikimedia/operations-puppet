# Analytics Query Service - next generation
#
# General
#
cluster: aqs

profile::admin::groups:
    - aqs-admins
    - aqs-roots
    - deploy-aqs

#
# Cassandra for AQS
#
profile::cassandra::allow_analytics: true

profile::base::certificates::include_bundle_jks: true

# Instances
profile::cassandra::instances:
  "aqs1010.eqiad.wmnet":
    "a":
      listen_address: 10.64.0.88
    "b":
      listen_address: 10.64.0.120
  "aqs1011.eqiad.wmnet":
    "a":
      listen_address: 10.64.16.204
    "b":
      listen_address: 10.64.16.206
  "aqs1012.eqiad.wmnet":
    "a":
      listen_address: 10.64.32.128
    "b":
      listen_address: 10.64.32.145
  "aqs1013.eqiad.wmnet":
    "a":
      listen_address: 10.64.32.146
    "b":
      listen_address: 10.64.32.147
  "aqs1014.eqiad.wmnet":
    "a":
      listen_address: 10.64.48.65
    "b":
      listen_address: 10.64.48.67
  "aqs1015.eqiad.wmnet":
    "a":
      listen_address: 10.64.48.68
    "b":
      listen_address: 10.64.48.69
  "aqs1016.eqiad.wmnet":
    a:
      listen_address: 10.64.0.199
    b:
      listen_address: 10.64.0.213
  "aqs1017.eqiad.wmnet":
    a:
      listen_address: 10.64.16.74
    b:
      listen_address: 10.64.16.78
  "aqs1018.eqiad.wmnet":
    a:
      listen_address: 10.64.32.22
    b:
      listen_address: 10.64.32.31
  "aqs1019.eqiad.wmnet":
    a:
      listen_address: 10.64.48.119
    b:
      listen_address: 10.64.48.122
  "aqs1020.eqiad.wmnet":
    a:
      listen_address: 10.64.131.14
    b:
      listen_address: 10.64.131.15
  "aqs1021.eqiad.wmnet":
    a:
      listen_address: 10.64.135.14
    b:
      listen_address: 10.64.135.15
  "aqs2001.codfw.wmnet":
    a:
      listen_address: 10.192.0.214
    b:
      listen_address: 10.192.0.215
  "aqs2002.codfw.wmnet":
    a:
      listen_address: 10.192.0.216
    b:
      listen_address: 10.192.0.217
  "aqs2003.codfw.wmnet":
    a:
      listen_address: 10.192.0.218
    b:
      listen_address: 10.192.0.219
  "aqs2004.codfw.wmnet":
    a:
      listen_address: 10.192.0.220
    b:
      listen_address: 10.192.0.221
  "aqs2005.codfw.wmnet":
    a:
      listen_address: 10.192.16.174
    b:
      listen_address: 10.192.16.179
  "aqs2006.codfw.wmnet":
    a:
      listen_address: 10.192.16.183
    b:
      listen_address: 10.192.16.185
  "aqs2007.codfw.wmnet":
    a:
      listen_address: 10.192.16.186
    b:
      listen_address: 10.192.16.187
  "aqs2008.codfw.wmnet":
    a:
      listen_address: 10.192.16.188
    b:
      listen_address: 10.192.16.189
  "aqs2009.codfw.wmnet":
    a:
      listen_address: 10.192.48.192
    b:
      listen_address: 10.192.48.193
  "aqs2010.codfw.wmnet":
    a:
      listen_address: 10.192.48.194
    b:
      listen_address: 10.192.48.195
  "aqs2011.codfw.wmnet":
    a:
      listen_address: 10.192.48.196
    b:
      listen_address: 10.192.48.197
  "aqs2012.codfw.wmnet":
    a:
      listen_address: 10.192.48.198
    b:
      listen_address: 10.192.48.199


profile::cassandra::settings:
  dc: "%{::site}"
  cluster_name: "Analytics Query Service Storage"
  tls_cluster_name: aqs
  tls_use_pki_truststore: true
  tls_use_pki: true
  start_rpc: false
  target_version: '4.x'
  default_instance_params:
    max_heap_size: 16g
    # 1/4 heap size, no more than 100m/thread
    heap_newsize: 2048m

    # Special compaction settings, following suggesions in:
    # https://docs.datastax.com/en/cassandra/2.1/cassandra/configuration/configCassandra_yaml_r.html
    # All values are divided by two since we have two instances running on each node
    # Assumption: 32 cores with ht on each host, so 16 * 1.5 = 24 cores considered
    # in the calculations.
    compaction_throughput_mb_per_sec: 256
    concurrent_compactors: 12
    concurrent_writes: 64
    concurrent_reads: 64

    # The CassandraAuthorizer Auth mandates non trivial checks for
    # each read/write operation to make sure that permissions are honored.
    # This could be a problem in already heavy loaded clusters like AQS,
    # so we need to increase caching to allow better performances
    # (default value 2s).
    permissions_validity_in_ms: 600000

    # Enable node-to-node encryption only between datacenters.
    internode_encryption: all

    # Enable client encryption, though optional for the time being (see: T307798).
    client_encryption_enabled: true
    client_encryption_optional: true

  users:
    - aqs
    - aqsloader
    - image_suggestions
    - aqs_testing
    - device_analytics
    - geo_analytics
    - media_analytics
    - page_analytics
    - fgoodwin
    - edit_analytics
    - editor_analytics
    - data_gateway

# Port to use for SSL certificate monitoring
profile::cassandra::monitor_tls_port: 7000

profile::cassandra::client_ips:
  # required for image-suggestions and other tools.
  # Add the kubernetes pod IPs here
  # eqiad. In the past it was 10.64.64.0/21
  - 10.67.128.0/18
  - 2620:0:861:cabe::/64
  # staging-eqiad
  - 10.64.75.0/24
  - 2620:0:861:babe::/64
  # staging-codfw
  - 10.192.75.0/24
  - 2620:0:860:babe::/64
  # codfw. In the past it was 10.192.64.0/21
  - 10.194.128.0/18
  - 2620:0:860:cabe::/64

#
# AQS service
#
# This configuration forces Restbase to use a specific user. Please make sure
# to create the user first.
profile::aqs::cassandra_user: aqs

profile::aqs::monitoring_enabled: false

profile::aqs::druid_properties:
  scheme: http
  port: 8082
  host: druid-public-broker.svc.eqiad.wmnet
  query_path: '/druid/v2/'

profile::aqs::druid_datasources:
  mediawiki_history: mediawiki_history_reduced_2023_11

profile::aqs::druid_uri_pattern: '^http:\/\/druid-public-broker.svc.eqiad.wmnet:8082\/druid\/v2'

profile::aqs::cassandra_default_consistency: localQuorum
profile::aqs::cassandra_local_dc: "%{::site}"
profile::aqs::statsd_host: statsd.eqiad.wmnet

profile::contacts::role_contacts: ['Data Persistence']
profile::base::production::role_description: 'Analytics Query Service Node - next generation'

profile::java::java_packages:
  - version: '8'
    variant: 'jdk'

profile::puppet::agent::force_puppet7: true
acmechief_host: acmechief2002.codfw.wmnet

profile::contacts::role_contacts:
  - 'Observability'
profile::base::production::role_description: 'Central syslog server and web requests debugging'

cluster: syslog
profile::syslog::centralserver::ssl_provider: 'cfssl'
mtail::logs:
  - /srv/syslog/*/*.log

profile::bird::advertise_vips:
  syslog.anycast.wmnet:
    address: 10.3.0.4 # VIP to advertise (limited to a /32)
    check_cmd: "/bin/sh -c 'ss -4lun | fgrep -q :10514'"
    ensure: present
    service_type: centralserver
    check_fail: 2  # Sometime the check_cmd timeout, adding a retry workarounds the issue


profile::profile::kafkatee::webrequest::ops::active_host: 'centrallog1002.eqiad.wmnet'

mtail::group: 'ops'

profile::netconsole::server::ensure: present

# Note: By default the Benthos class doesn't install geoip. In the centralserver
# role use case, another profile is already deploying it, so we want to avoid
# a duplicate resource declaration.
profile::benthos::use_geoip: false
profile::benthos::instances:
  webrequest_live:
    port: 4151
    # A note on sampling: since varnishkafka produces webrequest messages/events
    # randomly to the various webrequest partitions, it makes sense to avoid
    # pulling data from 24 webrequest_text and 24 webrequest_upload partitions,
    # since a smaller set would be equally representative.
    # The target sampling is 1/128th of the overall data, so if we read less
    # partitions we'll also need to adjust the sampling. To calculate
    # the sampling value use the selected number of partitions (per topic!):
    # 128 / (24 / #partitions)
    # The partition range is specified below in the topic list.
    env_variables:
      sampling: 128
    kafka:
      cluster: jumbo
      site: eqiad
      topics:
      - "webrequest_text"
      - "webrequest_upload"

  # independent for each site
  mw_accesslog_metrics:
    port: 4152
    kafka:
      cluster: logging
      site: "%{::site}"
      topics:
      - "mediawiki.httpd.accesslog"

profile::puppet::agent::force_puppet7: true
acmechief_host: acmechief2002.codfw.wmnet

# These settings are the default values for 100% of cloud-vps VMs in all
# deployments, but can be overridden.

lookup_options:
  classes:
    merge: unique
ldap:
  base-dn: dc=wikimedia,dc=org
  users_cn: ou=people
  groups_cn: ou=groups
apereo_cas:
  production:
    base_url: "https://idp.wmcloud.org/"
    login_url: "https://idp.wmcloud.org/login"
    validate_url: "https://idp.wmcloud.org/serviceValidate"
    validate_url_saml: "https://idp.wmcloud.org/samlValidate"
    oidc_endpoint: "https://idp.wmcloud.org/oidc"
  staging:
    base_url: "https://idp.wmcloud.org/"
    login_url: "https://idp.wmcloud.org/login"
    validate_url: "https://idp.wmcloud.org/serviceValidate"
    validate_url_saml: "https://idp.wmcloud.org/samlValidate"
    oidc_endpoint: "https://idp.wmcloud.org/oidc"

etcd::autogen_pwd_seed: "seed"
profile::contacts::role_contacts: []

profile::configmaster::proxy_sha1: false
profile::configmaster::enable_nda: false

# The puppet linter wants this here for some reason:
profile::openstack::base::heat::rabbit_user: heat
profile::wmcs::cloudgw::dmz_cidr: []

# There are no prod-like Kubernetes clusters unless a project has
# specifically created them
kubernetes::clusters: {}
kubernetes::clusters_defaults: {}

profile::mail::default_mail_relay::enabled: true
profile::mail::default_mail_relay::template: "profile/mail/default_mail_relay/exim4.minimal.wmcs.erb"

profile::mail::smarthost::wmcs::internal_domains:
  - "*.wmflabs"
  - "*.wikimedia.cloud"
profile::mail::smarthost::wmcs::external_domain: wmcloud.org

profile::acme_chief::ssl_client_certificate: "%{facts.puppet_config.localcacert}"
profile::acme_chief::ssl_client_certificate_source: ~
profile::aptrepo::wikimedia::public_basedir: /srv/wikimedia
profile::aptrepo::wikimedia::private_basedir: /srv/private
profile::aptrepo::wikimedia::homedir: "/root"
profile::aptrepo::wikimedia::gpg_user: "root"
profile::aptrepo::wikimedia::gpg_pubring: ~
profile::aptrepo::wikimedia::gpg_secring: ~
profile::aptrepo::private::port: 8080

profile::aptrepo::staging::basedir: /srv/wikimedia-staging
profile::aptrepo::staging::homedir: '/root'
profile::aptrepo::staging::gpg_user: 'root'
profile::aptrepo::staging::gpg_pubring: ~
profile::aptrepo::staging::gpg_secring: ~

profile::admin::managelingering: false
profile::admin::purge_sudoers_d: false
profile::admin::groups: []
profile::admin::groups_no_ssh: []
profile::admin::managehomehome: false

profile::base::overlayfs: false
profile::base::additional_purged_packages: []
profile::base::no_cron: true  # T358343

# All labs instances have internet connectivity, so do not bother with proxies
profile::base::certificates::puppet_ca_content: {}
profile::base::certificates::include_bundle_jks: false
profile::base::certificates::include_bundle_p12: false

profile::base::certificates::trusted_certs:
  bundle: '/etc/ssl/certs/wmf-ca-certificates.crt'
  certs:
    - "%{facts.puppet_config.localcacert}"

profile::apt::use_proxy: false

profile::apt::purge_sources: false
profile::apt::purge_preferences: false
profile::apt::install_audit_installed: false
profile::apt::mirror: "mirrors.wikimedia.org"
profile::apt::use_private_repo: false

profile::installserver::dhcp::tftp_servers: {}

profile::base::netbase::manage_etc_services: true
profile::base::netbase::extra_services: {}

profile::resolving::disable_dhcpupdates: true
profile::resolving::disable_resolvconf: true
profile::resolving::timeout: 1
profile::resolving::ndots: 1
profile::resolving::attempts: 3
profile::resolving::domain_search:
  - "%{facts.networking.domain}"

profile::puppet::agent::interval: 30
profile::puppet::agent::environment: production
profile::puppet::agent::serialization_format: pson
profile::puppet::agent::timer_seed: ~
profile::puppet::agent::certificate_revocation: ~
profile::puppet::agent::dns_alt_names: []
profile::puppet::agent::force_puppet7: true
profile::puppet::agent::use_srv_records: false
profile::puppet::agent::srv_domain: ~

profile::puppet::client_bucket::ensure: absent
profile::puppet::client_bucket::file_age: 14
profile::puppet::client_bucket::max_size: 100M
profile::puppet_compiler::puppetdb_host: ~
profile::puppet_compiler::puppetdb_port: ~
profile::puppet_compiler::puppetdb_proxy: false
profile::puppet_compiler::puppetdb::output_dir: "/mnt/nfs/labstore-secondary-project/output"
profile::base::legacy_cloud_search_domain: ~
profile::base::enable_contacts: false
profile::base::core_dump_pattern: "/var/tmp/core/core.%h.%e.%p.%t"
profile::base::unprivileged_userns_clone: false
http_proxy: ~
puppet_ca_server: "%{lookup('puppetmaster')}"
manage_puppet_ca_file: false

profile::cumin::monitor_agentrun: false
profile::cumin::unprivmaster::puppetdb_micro_host: "%{lookup('puppetdb_host')}"

profile::base::labs::unattended_wmf: "present"
profile::base::labs::unattended_distro: "present"
profile::base::labs::unattended_osbpo: "present"

profile::ci::slave::labs::common::manage_srv: true
profile::ci::package_builder::extra_packages: []

profile::ci::docker::docker_version: "5:20.10.12~3-0~debian"

profile::debmonitor::client::ensure: "absent"
profile::debmonitor::client::ssl_ca: "puppet"
profile::debmonitor::client::ssl_ca_label: ~

profile::debmonitor::server::settings_module: debmonitor.settings.test
profile::debmonitor::server::ssl_certs: puppet
profile::debmonitor::server::django_log_db_queries: true
profile::debmonitor::server::django_require_login: false
# Only scap3 is a valid deployment method anything else is noop
profile::debmonitor::server::app_deployment: "NONE"
profile::debmonitor::server::enable_logback: false
profile::debmonitor::server::enable_monitoring: false
# Empty groups resolves to valid-user
profile::debmonitor::server::required_groups: []
profile::debmonitor::server::trusted_ca_source: "/etc/ssl/certs/Puppet_Internal_CA.pem"

profile::etherpad::service_ensure: running

profile::gitlab::runner::ensure: present
profile::gitlab::runner::concurrent: 1
profile::gitlab::runner::description: WMF GitLab runner
profile::gitlab::runner::docker_image: docker-registry.wikimedia.org/buster:latest
# Use a local image if pulling fails (T329216)
profile::gitlab::runner::pull_policy:
  - "always"
  - "if-not-present"
profile::gitlab::runner::docker_volume: false
profile::gitlab::runner::docker_volume_min: 40
profile::gitlab::runner::docker_volume_max: 200
profile::gitlab::runner::docker_network: gitlab-runner
profile::gitlab::runner::docker_subnet: "172.21.0.0/16"
profile::gitlab::runner::ensure_docker_network: present
profile::gitlab::runner::docker_settings: {}
profile::gitlab::runner::docker_gc_interval: 5m
profile::gitlab::runner::docker_gc_timeout: 90
profile::gitlab::runner::docker_gc_images_high_water_mark: 6g
profile::gitlab::runner::docker_gc_images_low_water_mark: 3g
profile::gitlab::runner::docker_gc_volumes_high_water_mark: 6g
profile::gitlab::runner::docker_gc_volumes_low_water_mark: 3g
profile::gitlab::runner::buildkitd_gckeepstorage: 6Gb
profile::gitlab::runner::gitlab_url: https://gitlab.wikimedia.org/
# profile::gitlab::runner::token: private
profile::gitlab::runner::environment: {}
profile::gitlab::runner::user: "root"
# restricted firewall is used in cloud
profile::gitlab::runner::restrict_firewall: true
profile::gitlab::runner::block_dockerhub: false
profile::gitlab::runner::internal_ip_range: "172.16.0.0/21"
profile::gitlab::runner::allowed_services:
  dns:
    host: "ns-recursor.openstack.eqiad1.wikimediacloud.org"
    port: 53
    proto: udp
  docker-internal-dns:
    host: "127.0.0.11"
    port: 53
    proto: udp
  gitlab-https:
    host: "gitlab.wikimedia.org"
    port: 443
  gitlab-replica-https: # for failover between instances without restarting ferm on runners
    host: "gitlab-replica-a.wikimedia.org"
    port: 443
  gitlab-test:
    host: "gitlab.devtools.wmcloud.org"
    port: 443
    proto: tcp
  zuul-test-rsync:
    host: "zuul.devtools.wmcloud.org"
    port: 873
    proto: tcp
  cloud-public-proxy: # Any *.wmcloud.org (or deprecated *.wmflabs.org) proxied service, ex. tools-harbor.wmcloud.org
    host: "proxy-eqiad1.wmcloud.org"
    port: 443
    proto: tcp
  toolforge-public-proxy: # Any *.toolforge.org proxied service
    host: "toolforge.org"
    port: 443
    proto: tcp
profile::gitlab::runner::ensure_buildkitd: present
profile::gitlab::runner::buildkitd_image: docker-registry.wikimedia.org/repos/releng/buildkit:wmf-v0.15.2-1
profile::gitlab::runner::buildkitd_nameservers: "%{alias('profile::resolving::nameservers')}"
profile::gitlab::runner::clear_interval:
  start: "OnCalendar"
  interval: "*-*-* 05,17:00:00"
profile::gitlab::runner::enable_clear_cache: true
profile::gitlab::runner::enable_registry_proxy: false
profile::gitlab::runner::registry_proxy_environment: {}
# use dockerhub in WMCS until registry is imported to wmf registry - T329679
profile::gitlab::runner::registry_proxy_image: "docker.io/registry:2"
profile::gitlab::runner::enable_webproxy: false
profile::gitlab::runner::http_proxy: ~
profile::gitlab::runner::https_proxy: ~
profile::gitlab::runner::no_proxy: ~
profile::gitlab::runner::allowed_images:
  # Everything in Wikimedia registry:
  - "docker-registry.wikimedia.org/**/*"
  - "docker-registry.discovery.wmnet/**/*"
  # Distributions:
  - "centos/*:*"
  - "debian:*"
  - "fedora:*"
  - "opensuse/*:*"
  - "ubuntu:*"
  # Language-specific:
  - "golang:*"
  - "node:*"
  - "python:*"
  - "ruby:*"
  - "rust:*"
  - "rustlang/rust:*"
  # Database engines
  - "mariadb:*"
  # GitLab upstream - includes security analyzers and terraform images:
  - "registry.gitlab.com/gitlab-org/**/*"
  - "registry.gitlab.com/security-products/**/*"
  # dependabot-gitlab - T326507:
  # https://dependabot-gitlab.gitlab.io/dependabot/guide/index.html
  - "docker.io/andrcuns/dependabot-gitlab:*"
  - "ghcr.io/dependabot-gitlab/dependabot-gitlab:*"
  # Elasticsearch official - T327519:
  - "docker.elastic.co/elasticsearch/*:*"
  # Toolforge CI images
  - "docker-registry.tools.wmflabs.org/**/*"
  # SonarQube cli image
  - "sonarsource/sonar-scanner-cli:*"
  # T372848: Blubber + Kokkuri images created from the "cloud" runners on DO
  - "registry.cloud.releng.team/**/*"
profile::gitlab::runner::allowed_docker_services:
  - "docker-registry.wikimedia.org/**/*"
  - "docker-registry.discovery.wmnet/**/*"
  # Database engines
  - "mariadb:*"

profile::gitlab::trusted_runner_id_regex: "(77|79)"

profile::gitlab::custom_nginx_config:
  - "location ~* ^(?:(?!admin).)*/runners/%{lookup('profile::gitlab::trusted_runner_id_regex')}/edit$ {\n deny all;\n}\n" # block edit page of Trusted runners
  - "location =/robots.txt { alias /srv/robots.txt; }\n"

profile::gitlab::enable_robots_txt: true

profile::gitlab::logrotate_frequency: "daily" # rotate logs daily
profile::gitlab::logrotate_maxsize: "500M" # logs will be rotated when they grow bigger than 500M
profile::gitlab::logrotate_size: "500M" # do rotate by size
profile::gitlab::logrotate_rotate: 3 # keep 3 rotated logs to save disk space

profile::mail::mx::gmail_smtp_server: aspmx.l.google.com
profile::mail::smarthost::support_ipv6: false

profile::netbox::discovery_name: "%{facts.networking.fqdn}"
profile::netbox::additional_sans: []
profile::netbox::ssl_provider: acme_chief
profile::netbox::slaves: []
profile::netbox::authentication_provider: "ldap"
profile::netbox::changelog_retention: 1
profile::netbox::job_retention: 1
profile::netbox::validators: []
profile::netbox::cas_rename_attributes:
  cn: "first_name"
  mail: "email"
profile::netbox::cas_group_attribute_mapping: {}
profile::netbox::cas_group_mapping: {}
profile::netbox::cas_group_required: []
profile::netbox::cas_server_url: ~
profile::netbox::cas_username_attribute: ~

profile::nginx::ensure: "present"
profile::nginx::managed: true
profile::nginx::variant: "light"
profile::nginx::tmpfs_size: "1g"
profile::nginx::modules: []
profile::nginx::lib_on_tmpfs: true

profile::puppetdb::puppetservers: []
profile::puppetdb::gc_interval: 20
profile::puppetdb::node_ttl: "7d"
profile::puppetdb::node_purge_ttl: "14d"
profile::puppetdb::report_ttl: "1d"
profile::puppetdb::ca_content: ~
profile::puppetdb::ssl_verify_client: optional
profile::puppetdb::sites: {}

profile::puppetdb::database::use_replication_slots: false
profile::puppetdb::database::users:
  puppetdb@localhost:
    user: puppetdb
    password: "%{alias('puppetdb::password::rw')}"
    database: puppetdb
    cidr: "%{facts.networking.ip}/32"
  puppetdb_ro@localhost:
    user: puppetdb_ro
    password: "%{alias('puppetdb::password::ro')}"
    database: puppetdb
    cidr: "%{facts.networking.ip}/32"
    privileges:
      table: "SELECT"
  prometheus@localhost:
    user: "prometheus"
    database: "postgres"
    type: "local"
    method: "peer"
profile::puppetdb::database::shared_buffers: "768MB"
profile::puppetdb::database::replication_lag_crit: 16777216
profile::puppetdb::database::replication_lag_warn: 1048576
profile::puppetdb::database::log_line_prefix: "%t "
profile::puppetdb::database::log_min_duration_statement: ~
profile::puppetdb::database::log_autovacuum_min_duration: ~
profile::puppetdb::database::ssldir: ~
profile::puppetdb::jvm_opts: "-Xmx256m"
profile::puppetdb::slaves: []
profile::puppetdb::log_level: info
profile::puppetdb::tmpfs_stockpile_queue: false
profile::puppetdb::clean_stockpile: false
profile::puppetdb::facts_blacklist: []
profile::puppetdb::facts_blacklist_type: "literal"
profile::puppetdb::db_ro_host: ~
profile::envoy::ensure: present
profile::tlsproxy::envoy::sni_support: "no"
profile::tlsproxy::envoy::tls_port: 443
profile::tlsproxy::envoy::websockets: false
profile::tlsproxy::envoy::upstream_response_timeout: 65.0
profile::tlsproxy::envoy::ssl_provider: "sslcert"
profile::tlsproxy::envoy::cfssl_options: {}
profile::tlsproxy::envoy::access_log: false
profile::tlsproxy::envoy::retries: true
profile::tlsproxy::envoy::use_remote_address: false
profile::tlsproxy::envoy::services:
  - server_names: ["*"]
    port: 80
profile::tlsproxy::envoy::upstream_addr: "%{facts.fqdn}"
profile::tlsproxy::envoy::header_key_format: "none"
profile::tlsproxy::envoy::listen_ipv6: false
profile::tlsproxy::envoy::global_cert_name: ~
profile::tlsproxy::envoy::idle_timeout: ~
profile::tlsproxy::envoy::stream_idle_timeout: ~
profile::tlsproxy::envoy::ferm_srange: ~
profile::tlsproxy::envoy::firewall_srange: ~
profile::tlsproxy::envoy::max_requests: ~
profile::tlsproxy::envoy::cfssl_label: "discovery"
profile::tlsproxy::envoy::error_page: false
profile::tlsproxy::envoy::local_otel_reporting_pct: 0.0

profile::tcpircbot::ensure: 'present'
# Firewall logging
profile::firewall::provider: ferm
profile::firewall::enable_logging: true
profile::firewall::defs_from_etcd: false
profile::firewall::defs_from_etcd_nft: false
profile::firewall::manage_nf_conntrack: true
profile::firewall::log::log_rate: 1/second
profile::firewall::log::log_burst: 5
profile::firewall::log::separate_file: false
profile::firewall::ferm_icinga_retry_interval: 1

prometheus_nodes: []
profile::prometheus::cadvisor::ensure: absent

# We don't want prometheus scraping NFS on the clients, it locks up
prometheus::node_exporter::ignored_fs_types: "^(overlay|autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|nfs.*|nsfs|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$"
profile::prometheus::icinga_exporter::label_teams_config: {}

# We don't use these feature on VMs.
profile::backup::enable: false
profile::backup::ferm_directors: []
profile::backup::pool: ""
profile::backup::director: "backup.example.com"
profile::backup::days: []

profile::puppetmaster::frontend::secure_private: true
profile::puppetmaster::frontend::ssl_ca_revocation_check: chain
profile::puppetmaster::frontend::config: {}
profile::puppetmaster::frontend::web_hostname: puppet
profile::puppetmaster::frontend::prevent_cherrypicks: true
profile::puppetmaster::frontend::ip_reputation_config: {}
profile::puppetmaster::frontend::ip_reputation_proxies: []
profile::puppetmaster::frontend: chain
puppetmaster::servers: {}
profile::puppetmaster::frontend::extra_auth_rules: ~
profile::puppetmaster::frontend::canary_hosts: []
profile::puppetmaster::common::base_config: {}
profile::puppetmaster::common::storeconfigs: "none"
profile::puppetmaster::common::puppetdb_hosts: []
profile::puppetmaster::common::puppetdb_port: 443
profile::puppetmaster::common::command_broadcast: false
profile::puppetmaster::common::ssl_verify_depth: 1
profile::puppetmaster::common::netbox_hiera_enable: true
profile::puppetmaster::common::enable_merge_cli: false
profile::puppetmaster::common::disable_env_config: false
profile::puppetmaster::common::reports:
  - puppetdb
profile::puppetmaster::common::puppetdb_submit_only_hosts: []

profile::puppetserver::enc_source: ~
profile::puppetserver::enc_path: ~
profile::puppetserver::server_id: "%{facts.networking.fqdn}"
profile::puppetserver::java_start_mem: 1g
profile::puppetserver::java_max_mem: 1g
profile::puppetserver::reports: ["none"]
profile::puppetserver::puppetdb_urls: []
profile::puppetserver::puppetdb_submit_only_urls: []
profile::puppetserver::code_dir: "/srv/puppet_code"
profile::puppetserver::ca_server: "%{facts.networking.fqdn}"
profile::puppetserver::intermediate_ca: false
profile::puppetserver::ca_public_key: ~
profile::puppetserver::ca_crl: ~
profile::puppetserver::ca_private_key_secret: ~
profile::puppetserver::ca_allow_san: false
profile::puppetserver::ca_name: ~
profile::puppetserver::separate_ssldir: true
profile::puppetserver::ssldir_on_srv: true
profile::puppetserver::enable_jmx: false
profile::puppetserver::auto_restart: true
profile::puppetserver::extra_mounts: {}
profile::puppetserver::environment_timeout: 'unlimited'
profile::puppetserver::hiera_data_dir: "%{lookup('profile::puppetserver::code_dir')}/environments/%{literal('%')}{::environment}/hieradata"
profile::puppetserver::hierarchy:
  - name: "Http Yaml"
    data_hash: cloudlib::httpyaml
    uri: "https://puppet-enc.cloudinfra.wmcloud.org/v1/%{literal('%')}{::wmcs_project}/node/%{literal('%')}{facts.networking.fqdn}"
  - name: "cloud hierarchy"
    paths:
      - "cloud/%{literal('%')}{::wmcs_deployment}/%{literal('%')}{::wmcs_project}/hosts/%{literal('%')}{facts.networking.hostname}.yaml"
      - "cloud/%{literal('%')}{::wmcs_deployment}/%{literal('%')}{::wmcs_project}/common.yaml"
      - "cloud/%{literal('%')}{::wmcs_deployment}.yaml"
      - "cloud.yaml"
  - name: "Private hierarchy"
    paths:
      - "labs/%{literal('%')}{::wmcs_project}/common.yaml"
      - "%{literal('%')}{::wmcs_project}.yaml"
      - "labs.yaml"
    datadir: "/etc/puppet/private/hieradata"
  - name: "Common hierarchy"
    path: "common.yaml"
  - name: "Private Common hierarchy"
    path: "common.yaml"
    datadir: "/etc/puppet/private/hieradata"
profile::puppetserver::git::ensure: "present"
profile::puppetserver::git::basedir: "/srv/git"
profile::puppetserver::git::user: "gitpuppet"
profile::puppetserver::git::group: "gitpuppet"
profile::puppetserver::git::control_repo: "operations/puppet"
profile::puppetserver::git::additional_servers: []
profile::puppetserver::git::exclude_servers: []
profile::puppetserver::git::repos:
  "operations/puppet":
    branch: "production"
    hooks:
      'post-checkout': 'puppet:///modules/profile/puppetserver/git/operations/hooks/deploy-code.sh'
      'post-commit': 'puppet:///modules/profile/puppetserver/git/operations/hooks/deploy-code.sh'
      'post-merge': 'puppet:///modules/profile/puppetserver/git/operations/hooks/deploy-code.sh'
  "labs/private":
    branch: "master"
    hooks:
      'post-checkout': 'puppet:///modules/profile/puppetserver/git/operations/hooks/deploy-code.sh'
      'post-commit': 'puppet:///modules/profile/puppetserver/git/operations/hooks/deploy-code.sh'
      'post-merge': 'puppet:///modules/profile/puppetserver/git/operations/hooks/deploy-code.sh'
    link: "/etc/puppet/private"
profile::puppetserver::scripts::keep_reports_minutes: 960
profile::puppetserver::scripts::has_puppetdb: false
profile::puppetserver::scripts::upload_facts: false
profile::puppetserver::scripts::http_proxy: ~
profile::puppetserver::scripts::realm_override: ~
profile::puppetserver::volatile::geoip_fetch_private: false

profile::backup::director_seed: changeme
profile::debdeploy::client::exclude_mounts: []
profile::debdeploy::client::exclude_filesystems: []
profile::idp::ldap_schema: ldap
# We set this to true so one has to consciously disable it
profile::idp::ldap_start_tls: true
profile::idp::idp_nodes:
  - "%{facts.fqdn}"
profile::idp::memcached::ensure: present
profile::idp::memcached::memcached_user: 'nobody'
profile::idp::memcached::idp_nodes: []
profile::idp::memcached::mcrouter_cluster: idp
profile::idp::memcached::enable_tls: false
profile::idp::memcached::ssl_cert: "%{facts.puppet_config.hostcert}"
profile::idp::memcached::ssl_key: "%{facts.puppet_config.hostprivkey}"
profile::idp::memcached::auto_restarts: true
profile::idp::u2f_jpa_enable: false
profile::idp::u2f_jpa_username: cas
# Needs to go in secret repo
#profile::idp::u2f_jpa_password: changeme
profile::idp::u2f_jpa_server: 127.0.0.1
profile::idp::u2f_jpa_db: cas
profile::idp::u2f_token_expiry_days: 3650
profile::idp::client::httpd::cookie_path: /var/cache/apache2/mod_auth_cas
profile::idp::client::httpd::certificate_path: /etc/ssl/certs
profile::idp::client::httpd::apache_owner: www-data
profile::idp::client::httpd::apache_group: www-data
profile::idp::client::httpd::sites: {}
profile::idp::max_session_length: 604800
profile::idp::actuators: []
profile::idp::server_name: "https://%{facts.fqdn}"
profile::idp::is_staging_host: false
profile::idp::memcached_enable: true
profile::idp::enable_cors: false
profile::idp::cors_allow_credentials: false
profile::idp::cors_allowed_origins: []
profile::idp::cors_allowed_headers: []
profile::idp::cors_allowed_methods:
  - "GET"
profile::idp::ldap_attributes:
  - cn
  - memberOf
  - mail
  - uid
profile::idp::envoy_termination: false
profile::idp::enable_webauthn: false
profile::idp::webauthn_relaying_party: wikimedia.org
profile::idp::memcached_install: true
profile::idp::oidc_issuers_pattern: 'a^'
# Service proxy
profile::services_proxy::envoy::listen_ipv6: false
profile::services_proxy::envoy::listeners: []
profile::services_proxy::envoy::enabled_listeners: []
profile::services_proxy::envoy::local_otel_reporting_pct: 0.0

profile::sre::os_reports::ensure: absent
profile::sre::os_reports::host: ~

graphite_host: ~
graphite_url: ~
statsd: ~
# We don't have a graphite_host in cloud, so
# disable statsite
profile::statsite::ensure: absent

profile::prometheus::memcached_exporter::arguments: ""
profile::prometheus::mcrouter_exporter::mcrouter_port: 11213
profile::prometheus::mcrouter_exporter::listen_port: 9151
profile::prometheus::pushgateway_host: "invalid"
profile::mediawiki::mcrouter_wancache::prometheus_exporter: false
profile::mediawiki::mcrouter_wancache::timeouts_until_tko: 10
profile::mediawiki::mcrouter_wancache::gutter_ttl: 60
profile::mediawiki::mcrouter_wancache::port: 11213
profile::mediawiki::mcrouter_wancache::memcached_tls_port: 11214
profile::mediawiki::mcrouter_wancache::memcached_notls_port: 11211
profile::mediawiki::mcrouter_wancache::num_proxies: 1
profile::mediawiki::mcrouter_wancache::shards:
  gutter:
    eqiad: {}
  wancache:
    eqiad: {}
  proxies:
    eqiad: {}
  wikifunctions:
    eqiad: {}
profile::mediawiki::scap_client::is_master: false
profile::mediawiki::php::php_versions:
  - "7.4"
profile::java::java_packages: []
profile::java::extra_args: {}
profile::java::hardened_tls: false
profile::java::egd_source: "/dev/random"
profile::java::trust_puppet_ca: false
profile::java::enable_dbg: false
profile::thanos::httpd::query_port: 16902
profile::thanos::httpd::maxconn: 10
profile::icinga::logs_keep_days: 780
profile::icinga::mgmt_parents:
  eqiad: msw1-eqiad # FIXME: eqiad expansion uses msw2, connected to msw1
  codfw: msw1-codfw
  ulsfo: mr1-ulsfo
  esams: mr1-esams
  eqsin: mr1-eqsin
  drmrs: mr1-drmrs
  magru: mr1-magru
profile::thanos::httpd::enable_sso: false
profile::thanos::query_frontend::memcached_hosts: []
profile::thanos::rule_hosts: {}
profile::thanos::swift::cluster_label: ~

profile::gerrit::ipv6: ~
profile::gerrit::enable_monitoring: true

profile::alertmanager::irc::host: "example.net"
profile::alertmanager::irc::port: 6697
profile::alertmanager::irc::nickname: "jinxer-wm"
profile::alertmanager::irc::realname: "I jinx things at WMF"
profile::alertmanager::irc::channel: "wikimedia-observability-spam"
profile::alertmanager::web::vhost: "alerts.%{facts.domain}"
profile::alertmanager::api::vhost_alias: "alertmanager-*.%{facts.domain}"
profile::alertmanager::api::ro: []
profile::alertmanager::api::rw: []
profile::restbase::aqs_uri: http://aqs.svc.eqiad.wmnet:7232/analytics.wikimedia.org/v1
profile::graphite::base::cluster_servers: []
profile::graphite::base::uwsgi_processes: 8

profile::swift::storagehosts: []
profile::swift::proxyhosts: []
profile::swift::storage::statsd_port: 8125
profile::swift::storage::object_replicator_interval: ~
profile::swift::storage::servers_per_port: ~
profile::swift::storage::statsd_host: ~
profile::swift::storage::container_replicator_interval: ~
profile::swift::storage::container_replicator_concurrency: 1
profile::swift::storage::object_server_default_workers: 12
profile::swift::storage::object_replicator_concurrency: 1
profile::swift::storage::replication_limit_memory_percent: 0
profile::swift::storage::loopback_device_size: 2G
profile::swift::storage::loopback_device_count: 0
profile::swift::storage::disable_fallocate: false
profile::swift::storage::disks_by_path: false
profile::swift::proxy::use_tls: false
profile::swift::proxy::statsd_host: ~
profile::swift::proxy::statsd_port: 8125
profile::swift::proxy::dispersion_account: ~
profile::swift::proxy::rewrite_account: ~
profile::swift::proxy::thumborhost: ~
profile::swift::proxy::inactivedc_thumborhost: ~

profile::memcached::threads: ~
profile::memcached::version: "present"
profile::memcached::growth_factor: 1.05
profile::memcached::min_slab_size: 48
profile::memcached::max_seq_reqs: 200
profile::memcached::size: ~
profile::memcached::extended_options: []
profile::memcached::port: 11211
profile::memcached::memcached_user: 'nobody'
profile::memcached::extstore_ensure: absent
profile::memcached::extstore_size: 20
profile::memcached::extstore_path: /srv/memcached
profile::memcached::enable_tls: false
profile::memcached::notls_port: ~
profile::memcached::ssl_cert: ~
profile::memcached::ssl_key: ~
profile::memcached::localcacert: ~

profile::ldap::bitu::group: root

profile::logrotate::hourly: false

# Only added to make CI happy. cloud has no LVS
profile::lvs::realserver::poolcounter_backends: ~
profile::lvs::realserver::use_conftool: false

# Mariadb sections: needed for proxy setup
profile::mariadb::section_ports:
  s1: 3311
  s2: 3312
  s3: 3313
  s4: 3314
  s5: 3315
  s6: 3316
  s7: 3317
  s8: 3318

profile::query_service::username: blazegraph

profile::druid::turnilo::port: 9091
profile::druid::turnilo::monitoring_enabled: false
profile::druid::turnilo::contact_group: "analytics"

profile::logoutd::owner: root
profile::logoutd::group: root
profile::logoutd::scripts: {}

profile::pki::client::root_ca_cn: WMF_TEST_CA
profile::pki::client::root_ca_source: "puppet:///modules/profile/pki/ROOT/WMF_TEST_CA.pem"
profile::pki::client::ensure: absent
profile::pki::client::signer_host: pki-intermediate.pki.eqiad1.wikimedia.cloud
profile::pki::client::signer_port: 443
profile::pki::client::bundles_source: "puppet:///modules/profile/pki/wmcs-intermediates"
profile::pki::client::enable_proxy: false
profile::pki::client::listen_addr: 127.0.0.1
profile::pki::client::listen_port: 8888
profile::pki::client::mutual_tls_client_cert: "%{facts.puppet_config.hostcert}"
profile::pki::client::mutual_tls_client_key: "%{facts.puppet_config.hostprivkey}"
profile::pki::client::tls_remote_ca: "/etc/ssl/localcerts/pki_api_CA.pem"
profile::pki::client::tls_remote_ca_source: "puppet:///modules/profile/pki/cloud/pki_api_ca.pem"
profile::pki::client::certs: {}
profile::pki::root_ca::enable_backups: false
profile::pki::root_ca::bootstrap: false
profile::pki::multirootca::cfssl_httpd_cert: false

profile::cloudceph::osd::disk_models_without_write_cache:
  - DISK_MODEL_DEFAULT_PLACEHOLDER
profile::cloudceph::osd::disks_io_scheduler: DISKS_IO_SCHEDULER_PLACEHOLDER
profile::cloudceph::osd::num_os_disks: 2
profile::cloudceph::osd::with_location_hook: false

# MediaWiki apache configuration. Sites shared by all installations
mediawiki::common_sites:
  # Catchall for any domain-name not caught by virtualhosts below.
  - name: nonexistent
    priority: 0
    source: mediawiki/apache/sites/nonexistent.conf
  - name: wwwportals
    priority: 1
    template: mediawiki/apache/sites/wwwportals.conf.erb

profile::rsyslog::logrotate_source: "puppet:///modules/profile/rsyslog/logrotate.conf"
profile::rsyslog::kafka_shipper::enable: false
profile::rsyslog::kafka_queue_enabled_sites: []
profile::rsyslog::kafka_shipper::kafka_brokers:
  - localhost:9093

profile::syslog::centralserver::log_retention_days: 90
profile::syslog::centralserver::file_template_property: "hostname"

profile::syslog::remote::enable: false
profile::syslog::remote::central_hosts_tls: {}
profile::syslog::remote::send_logs: 'standard'
profile::syslog::remote::queue_size: 10000
profile::syslog::remote::mtls_provider: 'puppet'
profile::syslog::remote::tls_server_auth: 'x509/certvalid'
profile::syslog::remote::tls_netstream_driver: 'gtls'
profile::syslog::remote::tls_trusted_ca: '/var/lib/puppet/ssl/certs/ca.pem'

profile::openstack::base::radosgw::service_user: "swift"
profile::openstack::base::radosgw::service_user_project: "swift"
profile::openstack::base::radosgw::api_bind_port: "18080"

# The puppet linter demands these, though they are not used anywhere:
profile::openstack::base::cinder::db_name: "cinder"
profile::openstack::base::cinder::db_user: "cinder"
profile::openstack::base::cinder::all_backend_names: ["rbd"]
profile::openstack::base::cinder::backend_type: "rbd"
profile::openstack::base::cinder::backend_name: "rbd"

# To be overridden in Pontoon stacks
public_domain: "%{::wmcs_project}.wmcloud.org"

profile::trafficserver::backend::trusted_ca_path: "/etc/ssl/certs/ats_trusted_ca.pem"
profile::trafficserver::backend::trusted_ca_source: "%{facts.puppet_config.localcacert}"

profile::tcpircbot::irc::host: "irc.libera.chat"
profile::tcpircbot::irc::port: 6697

profile::debdeploy::client::ensure: absent
profile::debdeploy::client::filter_services:
  qemu-system-x86:
    - "*"

# Will be overridden in toolforge
docker::registry: ""

# profile::tlsproxy::instance defaults
profile::tlsproxy::instance::bootstrap_protection: false
profile::tlsproxy::instance::nginx_variant: full
profile::tlsproxy::instance::nginx_client_max_body_size: "100m"
profile::tlsproxy::instance::ssl_compatibility_mode: compat

# Profile::monitoring::host defaults
profile::monitoring::hardware_monitoring: "present"
profile::monitoring::contact_group: "%{alias('contactgroups')}"
# the -A -i ... part is a gross hack to workaround Varnish partitions
# that are purposefully at 99%. Better ideas are welcome.
profile::monitoring::nrpe_check_disk_options:
  '-w 6% -c 3% -W 6% -K 3% -l -e -A -i "/srv/sd[a-b][1-3]" -i
  "/srv/nvme[0-9]n[0-9]p[0-9]" --exclude-type=fuse.fuse_dfs
  --exclude-type=tracefs'
profile::monitoring::nrpe_check_disk_critical: false
profile::monitoring::raid_check_interval: 10
profile::monitoring::raid_retry_interval: 10
profile::monitoring::notifications_enabled: true
profile::monitoring::is_critical: false
profile::monitoring::monitor_screens: true
profile::monitoring::monitoring_hosts: "%{alias('monitoring_hosts')}"
profile::monitoring::raid_check: true
profile::monitoring::raid_write_cache_policy: ~

profile::auto_restarts::with_debdeploy: false

profile::environment::ls_aliases: false
profile::environment::export_systemd_env: true
profile::environment::custom_bashrc: "base/environment/bash.bashrc.erb"
profile::environment::custom_skel_bashrc: "base/environment/skel/bashrc.erb"
profile::environment::custom_skel_zshrc: "base/environment/skel/zshrc.erb"
profile::environment::editor: "use_default"
profile::environment::wikimedia_domains: []
profile::environment::no_proxy_domains: []
profile::environment::skip_domains: []
profile::environment::profile_scripts:
  field.sh: "puppet:///modules/base/environment/field.sh"
profile::environment::variables: {}

profile::systemd::timesyncd::ensure: present
profile::systemd::timesyncd::ntp_servers: []

# puppetboard
profile::puppetboard::ensure: present
profile::puppetboard::puppetdb_host: "localhost"
profile::puppetboard::puppetdb_port: 8080
profile::puppetboard::puppetdb_ssl_verify: true
profile::puppetboard::puppetdb_cert: ~
profile::puppetboard::puppetdb_key: ~
profile::puppetboard::puppetdb_proto: ~
profile::puppetboard::vhost: "%{facts.networking.fqdn}"
profile::puppetboard:page_title: "Puppetboard"
profile::puppetboard::localise_timestamp: false
profile::puppetboard::enable_catalog: false
profile::puppetboard::graph_type: "pie"
profile::puppetboard::graph_facts_override: []
profile::puppetboard::secret_key: ~
profile::puppetboard::inventory_facts_override: {}

# defaults for cloud (mostly deployment prep)
profile::base::production::enable: false
profile::base::production::enable_ip6_mapped: false
profile::base::production::role_description: ~

profile::cumin::cloud_master::puppetdb_micro_host: puppetdb-api.discovery.wmnet
profile::cumin::cloud_master::puppetdb_micro_port: "%{alias('profile::puppetdb::microservice::port')}"

profile::cumin::master::puppetdb_micro_host: puppetdb-api.discovery.wmnet
profile::cumin::master::puppetdb_micro_port: "%{alias('profile::puppetdb::microservice::port')}"
profile::cumin::master::email_alerts: false
profile::cumin::master::insetup_role_report_day: 0 # disabled

profile::cloudceph::auth::load_all::enabled: false
profile::cloudceph::auth::load_all::configuration: {}

profile::cloudceph::auth::deploy::enabled: false
profile::cloudceph::auth::deploy::selected_creds: []
profile::cloudceph::auth::deploy::configuration: {}

# Do not build images or generate reports
profile::docker::builder::rebuild_images: false
profile::docker::builder::known_uid_mappings: {}
profile::docker::reporter::generate_reports: false

# Do not use kafka shipping for central syslogserver
profile::syslog::centralserver::use_kafka_relay: false

profile::prometheus::ops::blackbox_pingthing_http_check_urls: []
profile::puppetmaster::backend::config: {}
profile::puppetmaster::backend::secure_private: false
profile::puppetmaster::backend::prevent_cherrypicks: true
profile::puppetmaster::backend::extra_auth_rules: ~
profile::netbox::host::status: "unknown"
profile::netbox::host::location: ~
profile::ssh::server::listen_ports: [22]
profile::ssh::server::listen_addresses: []
profile::ssh::server::permit_root: true
profile::ssh::server::authorized_keys_file:
  - "/etc/ssh/userkeys/%u"
  - "/etc/ssh/userkeys/%u.d/cumin"
profile::ssh::server::lookup_keys_from_ldap: true
profile::ssh::server::disable_nist_kex: true
profile::ssh::server::explicit_macs: true
profile::ssh::server::enable_hba: false
profile::ssh::server::enable_kerberos: false
profile::ssh::server::disable_agent_forwarding: true
profile::ssh::server::max_sessions: ~
profile::ssh::server::max_startups: ~
profile::ssh::server::gateway_ports: false
profile::ssh::server::accept_env: ["LANG", "LC_*"]
profile::ssh::server::match_config: []
profile::ssh::server::enabled_key_types: ["dsa", "rsa", "ecdsa", "ed25519"]
profile::ssh::server::puppetserver_ca_host_certs: false

profile::ssh::client::manage_ssh_keys: true
profile::ssh::client::manage_ssh_config: false
profile::ssh::client::hash_known_hosts: true
profile::ssh::client::gss_api_authentication: true
profile::ssh::client::gss_api_delegate_credentials: false
profile::ssh::client::send_env: ["LANG", "LC_*"]
profile::ssh::client::extra_ssh_keys: {}

profile::spicerack::ganeti_rapi_timeout: 30
profile::spicerack::peeringdb_temp_dir: /tmp/peeringdb-cache
profile::spicerack::etcd_config: ~
profile::spicerack::firmware_store_dir: /srv/firmware

profile::cache::varnish::frontend::backends_in_etcd: true
profile::cache::varnish::frontend::packages_component: main
profile::cache::varnish::frontend::transient_gb: 0
profile::cache::varnish::frontend::listen_uds: []
profile::cache::varnish::frontend::uds_owner: root
profile::cache::varnish::frontend::uds_group: root
profile::cache::varnish::frontend::uds_mode: "700"
profile::cache::varnish::frontend::separate_vcl: []
profile::cache::varnish::frontend::use_etcd_req_filters: false
profile::cache::varnish::frontend::use_ip_reputation: false

profile::kubernetes::deployment_server::helm_user_group: deployment

profile::wmcs::firewall::services: {}
profile::wmcs::firewall::blocked_ips: []

profile::openstack::eqiad1::openstack_control_nodes:
  - host_fqdn: cloudcontrol1005.eqiad.wmnet
    cloud_private_fqdn: cloudcontrol1005.private.eqiad.wikimedia.cloud
  - host_fqdn: cloudcontrol1006.eqiad.wmnet
    cloud_private_fqdn: cloudcontrol1006.private.eqiad.wikimedia.cloud
  - host_fqdn: cloudcontrol1007.eqiad.wmnet
    cloud_private_fqdn: cloudcontrol1007.private.eqiad.wikimedia.cloud

profile::openstack::codfw1dev::openstack_control_nodes:
  - host_fqdn: cloudcontrol2004-dev.codfw.wmnet
    cloud_private_fqdn: cloudcontrol2004-dev.private.codfw.wikimedia.cloud
  - host_fqdn: cloudcontrol2005-dev.codfw.wmnet
    cloud_private_fqdn: cloudcontrol2005-dev.private.codfw.wikimedia.cloud
  - host_fqdn: cloudcontrol2006-dev.codfw.wmnet
    cloud_private_fqdn: cloudcontrol2006-dev.private.codfw.wikimedia.cloud

profile::wmcs::services::toolsdb_replica_cnf::user_replica_cnf_path: /srv/tools/home
profile::wmcs::services::toolsdb_replica_cnf::paws_replica_cnf_path: /srv/paws/project/paws/userhomes
profile::wmcs::services::toolsdb_replica_cnf::tool_replica_cnf_path: /srv/tools/project
profile::wmcs::services::toolsdb_replica_cnf::htuser: tools-db-replica-cnf
profile::wmcs::services::toolsdb_replica_cnf::tools_project_prefix: tools
profile::wmcs::services::toolsdb_replica_cnf::kubeconfig_path_template: "/srv/tools/project/{user}/.kube/config"
profile::wmcs::services::toolsdb_replica_cnf::redirect_to_https: true
profile::wmcs::services::toolsdb_replica_cnf::include_tools_repo: false

profile::cache::base::wikimedia_domains:
  - wikipedia.org
  - wikimedia.org
  - wikibooks.org
  - wikinews.org
  - wikiquote.org
  - wikisource.org
  - wikiversity.org
  - wikivoyage.org
  - wikidata.org
  - wikimediafoundation.org
  - wikiworkshop.org
  - wiktionary.org
  - mediawiki.org
  - wmfusercontent.org
  - w.wiki
profile::cache::base::wmcs_domains:
  - wmflabs.org
  - toolforge.org
  - wmcloud.org

swift_clusters: {}

profile::bgpalerter::asn: 14907
profile::bgpalerter::http_proxy: "%{alias('http_proxy')}"
profile::bgpalerter::user: bgpalerter
profile::bgpalerter::group: noc
profile::bgpalerter::rpki:
  vrpProvider: api
  url: http://127.0.0.1:9556/json
  preCacheROAs: true
profile::bgpalerter::upstreams: []
profile::bgpalerter::downstreams: []
profile::bgpalerter::monitors:
  - file: monitorHijack
    channel: hijack
    name: basic-hijack-detection
    params:
      thresholdMinPeers: 3
  - file: monitorVisibility
    channel: visibility
    name: withdrawal-detection
    params:
      thresholdMinPeers: 40
  - file: monitorAS
    channel: misconfiguration
    name: asn-monitor
    params:
      thresholdMinPeers: 3
  - file: monitorRPKI
    channel: rpki
    name: rpki-monitor
    params:
      thresholdMinPeers: 3
      checkUncovered: true
      checkDisappearing: false
  - file: monitorROAS
    channel: rpki
    name: rpki-diff
    params:
      enableDiffAlerts: false
      enableExpirationAlerts: true
      enableExpirationCheckTA: false
      enableDeletedCheckTA: false
  - file: monitorPathNeighbors
    channel: path
    name: path-neighbors
    params:
      thresholdMinPeers: 10
profile::bgpalerter::reports:
  - file: reportFile
    channels:
      - hijack
      - newprefix
      - visibility
      - path
      - misconfiguration
      - rpki
    params:
      persistAlertData: false

profile::wmcs::cloud_private_subnet::host: "not-in-cloud-realm.example.com"
profile::wmcs::cloud_private_subnet::gw_template: "not-in-cloud-realm.example.com"
profile::wmcs::cloud_private_subnet::supernet: "127.0.0.1/32"
profile::wmcs::cloud_private_subnet::vlan_mapping: {}

profile::httpd::modules: []
profile::httpd::legacy_compat: "present"
profile::httpd::period: "daily"
profile::httpd::rotate: 30
profile::httpd::enable_forensic_log: false
profile::httpd::extra_pkgs: []
profile::httpd::purge_manual_config: true
profile::httpd::remove_default_ports: false
profile::httpd::http_only: false
profile::httpd::wait_network_online: false

profile::lists::automation::lists_to_sync: ~

profile::backup::director_seed: changeme

profile::doc::active_host: doc.devtools.eqiad1.wikimedia.cloud
profile::doc::all_hosts:
  - doc.devtools.eqiad1.wikimedia.cloud
  - doc1002.devtools.eqiad1.wikimedia.cloud

profile::resolving::domain_search:
  - eqiad1.wikimedia.cloud

# Phabricator
profile::mail::default_mail_relay::enabled: false
phabricator_logmail: false
phabricator_deploy_user: 'deploy-devtools'
phabricator::tools::dump: false
profile::phabricator::main::dumps_rsync_clients: []

docker::registry: 'localhost'

phabricator::mysql::master::port: '3306'
phabricator::mysql::slave::port: '3306'

profile::phabricator::main::manage_scap_user: true

profile::phabricator::main::http_srange: '($DEPLOYMENT_HOSTS $CACHES)'

profile::phabricator::main::rate_limits:
# Number of requests per minute for logged out users (per client IP)
# logged in users are permitted 4x the request rate of logged-out users
  request: 0
# This is the number of concurrent connections per client IP:
  connection: 0

phabricator_active_server: phabricator-bullseye
profile::phabricator::main::dumps_rsync_clients: []
phabricator_phd_taskmasters: 4
phabricator_domain: phabricator.wmcloud.org
phabricator_altdomain: phab-usercontent.wmcloud.org

profile::envoy::ensure: absent
profile::tlsproxy::envoy::services:
  - server_names: ['*']
    port: 80
profile::tlsproxy::envoy::sni_support: "no"
profile::tlsproxy::envoy::websockets: true

phabricator_cluster_search:
- hosts:
  - host: localhost
    protocol: http
    roles:
      read: true
      write: true
  path: /phabricator
  port: 9200
  type: elasticsearch
  version: 5

# Deployment server, scap

deployment_hosts:
- '172.16.4.117'  # deploy-1006.devtools.eqiad1.wikimedia.cloud
deployment_server: deploy-1006.devtools.eqiad1.wikimedia.cloud
scap::deployment_server: deploy-1006.devtools.eqiad1.wikimedia.cloud
scap::dsh::scap_masters:
- deploy-1006.devtools.eqiad1.wikimedia.cloud
profile::mediawiki::scap_client::is_master: false

profile::keyholder::server::require_encrypted_keys: 'no'
profile::keyholder::server::agents:
  gerrit:
    trusted_groups:
      - project-%{::wmcs_project}
  phabricator:
    trusted_groups:
      - project-%{::wmcs_project}
  scap:
    trusted_groups:
    - project-%{::wmcs_project}
  deploy-jenkins:
    trusted_groups:
      - project-%{::wmcs_project}

has_lvs: false
has_tls: false

profile::kubernetes::deployment_server::user_defaults:
  group: wikidev
  mode: '0640'
  owner: mwdeploy
profile::mediawiki::apc_shm_size: 128M
profile::mediawiki::deployment::server::rsync_host: deploy-1006.devtools.eqiad1.wikimedia.cloud
profile::mediawiki::php::enable_fpm: true
profile::rsyslog::kafka_shipper::kafka_brokers: []
redis::shards:
  sessions:
    eqiad:
      shard01:
        host: 172.16.5.76
        port: 6379
      shard02:
        host: 172.16.5.17
        port: 6379
      shard03:
        host: 172.16.5.12
        port: 6379
      shard04:
        host: 172.16.5.2
        port: 6379
scap::dsh::groups:
  ci-docroot:
    hosts:
      - doc.devtools.eqiad1.wikimedia.cloud
  librenms:
    hosts: []
  mediawiki-api-canaries:
    hosts: []
  mediawiki-appserver-canaries:
    hosts: []
  mediawiki-installation:
    hosts: []
  restbase-betacluster:
    hosts: []
  webperf:
    hosts: []
scap::sources:
  gerrit/gerrit:
    repository: operations/software/gerrit
  integration/docroot: {}
  phabricator/deployment:
    repository: phabricator/deployment
    origin: gitlab
  releng/jenkins-deploy:
    repository: releng/jenkins-deploy
    origin: gitlab

mediawiki::sites: []

# Gerrit

profile::gerrit::config: 'gerrit.config.erb'
profile::gerrit::host: 'gerrit.devtools.wmcloud.org'

profile::gerrit::mask_service: false

profile::gerrit::ssh_allowed_hosts:
- gerrit-bullseye.devtools.eqiad1.wikimedia.cloud

profile::gerrit::replica_hosts: []

profile::gerrit::lfs_replica_sync: false

# No IPv6 in cloud
profile::gerrit::ipv6: '::1'

# No replication to github from cloud
profile::gerrit::replication: {}

profile::gerrit::git_dir: /srv/gerrit/git
profile::gerrit::ssh_host_key: ssh_host_key

# Backups
profile::gerrit::bacula: gerrit-repo-data

## Java
profile::gerrit::java_home: /usr/lib/jvm/java-17-openjdk-amd64
profile::gerrit::java_version: 8

## Deployment
scap::wmflabs_master: deploy-1006.devtools.eqiad1.wikimedia.cloud
profile::gerrit::daemon_user: 'gerrit2'
profile::gerrit::gerrit_site: "/var/lib/gerrit2/review_site"
profile::gerrit::scap_user: 'gerrit-deploy'
profile::gerrit::manage_scap_user: true
profile::gerrit::scap_key_name: 'gerrit'
profile::ssh::server::authorized_keys_file:
  - '/etc/ssh/userkeys/%u'
  - '/etc/ssh/userkeys/%u.d/cumin'
  - '/etc/ssh/userkeys/%u.d/gerrit-scap'

## TLS
## to get certificates from LE we use acmechief in production and certbot in cloud
profile::gerrit::use_acmechief: false
profile::tlsproxy::envoy::header_key_format: 'proper_case'
sslcert::certificate::skip_private: true

## Backups
profile::gerrit::backups_enabled: false
profile::gerrit::backup_set: 'gerrit-repo-data'

profile::gerrit::active_host: 'gerrit-bullseye.devtools.eqiad1.wikimedia.cloud'

## data for server migration
profile::gerrit::migration::daemon_user: gerrit2
profile::gerrit::migration::data_dir: /srv/gerrit

# Cache Proxy
cache::nodes:
    text:
        eqiad:
          - 'gerrit-bullseye.devtools.eqiad1.wikimedia.cloud'
          - 'phabricator-bullseye.devtools.eqiad1.wikimedia.cloud'

# Puppet master

profile::puppetdb::database::shared_buffers: 768MB
profile::puppetdb::master: puppetmaster-1003.devtools.eqiad.wmflabs
profile::puppetmaster::common::puppetdb_host: puppetmaster-1003.devtools.eqiad.wmflabs
profile::puppetmaster::common::storeconfigs: puppetdb
puppetdb::password::replication: ''
puppetdb::password::rw: puppetdb
puppetmaster: puppetmaster.cloudinfra.wmflabs.org
puppetmaster::enable_geoip: false
puppetmaster::servers:
  puppetmaster-1003.devtools.eqiad.wmflabs:
    - { worker: puppetmaster-1003.devtools.eqiad.wmflabs, loadfactor: 10 }
role::puppetmaster::standalone::autosign: true
profile::mediawiki::mcrouter_wancache::prometheus_exporter: true

kafka_clusters:
  logging-eqiad:
    zookeeper_cluster_name: main-deployment-prep
    brokers:
      deployment-kafka-logging01.deployment-prep.eqiad1.wikimedia.cloud:
        id: 1001
        rack: B

zookeeper_clusters:
  main-deployment-prep:
    hosts:
      deployment-zookeeper02.eqiad.wmflabs: '2'

prometheus_nodes:
  - logging-alert-01.logging.eqiad1.wikimedia.cloud

# GitLab
profile::gitlab::active_host: 'gitlab-prod-1002.devtools.eqiad1.wikimedia.cloud'
profile::gitlab::passive_hosts: []

profile::base::ssh_server_settings:
    listen_addresses:
    - "%{facts.ipaddress}"
#    - "%{facts.ipaddress6}" # no ipv6 on cloud test instance


profile::gitlab::backup_dir_data: '/srv/gitlab-backup'
profile::gitlab::backup_dir_config: '/etc/gitlab/config_backup'
profile::gitlab::backup_keep_time: 259200
# Disable sync on cloud test instance
profile::gitlab::enable_backup_sync: false

# client secrets are in the private repo
profile::gitlab::omniauth_providers:
  'Wikimedia Dev Account (OIDC)':
    issuer: 'https://idp.wmcloud.org/oidc'
    client_options:
      identifier: 'gitlab_oidc'
      redirect_uri: "%{lookup('profile::gitlab::external_url')}users/auth/openid_connect/callback"
profile::gitlab::block_auto_created_users: true
profile::gitlab::auto_sign_in_with: openid_connect

profile::gitlab::smtp_enabled: false

# TLS, we use certbot in cloud and acmechief in prod
# both of them are getting us Letsencrypt certs.
profile::gitlab::use_acmechief: false
profile::gitlab::cert_path: '/etc/letsencrypt/live/gitlab.devtools.wmcloud.org/fullchain.pem'
profile::gitlab::key_path: '/etc/letsencrypt/live/gitlab.devtools.wmcloud.org/privkey.pem'

profile::contacts::role_contacts: ['ServiceOps']

# service IP for public https and ssh (T276148)
profile::gitlab::service_ip_v4: '172.16.7.146'
profile::gitlab::service_ip_v6: '::'
profile::gitlab::service_name: 'gitlab.devtools.wmcloud.org'
profile::gitlab::external_url: "https://%{lookup('profile::gitlab::service_name')}/"

# Content-Security-Policy
profile::gitlab::csp_enabled: false
profile::gitlab::csp_report_only: false

profile::gitlab::monitoring_whitelist: ['127.0.0.1/32']

# don't listen on IPv6 in WMCS
profile::gitlab::ssh_listen_addresses: ["%{lookup('profile::gitlab::service_ip_v4')}"]

# don't listen on IPv6 in WMCS
profile::gitlab::nginx_listen_addresses: ["%{lookup('profile::gitlab::service_ip_v4')}"]

# backup and restore intervals
profile::gitlab::full_backup_interval:
  start: 'OnCalendar'
  interval: '*-*-* 00:04:00'
profile::gitlab::partial_backup_interval:
  start: 'OnCalendar'
  interval: '*-*-* 12:00:00'
profile::gitlab::config_backup_interval:
  start: 'OnCalendar'
  interval: '*-*-* 00:00:00'
profile::gitlab::rsync_interval:
  start: 'OnCalendar'
  interval: '*-*-* 01:00:00'
profile::gitlab::restore_interval:
  start: 'OnCalendar'
  interval: '*-*-* 02:00:00'

# reduce concurrency because of IO issues of the WMCS volume
profile::gitlab::max_storage_concurrency: 1

# LDAP group sync configuration
profile::gitlab::ldap_group_sync_bot_user: ldap-sync-bot
# profile::gitlab::ldap_group_sync_bot_token in private repo
profile::gitlab::ldap_group_sync_interval_interval:
  start: 'OnCalendar'
  interval: '*:0/15' # Every 15 minutes

# GitLab Runner
profile::gitlab::runner::gitlab_url: https://gitlab.devtools.wmcloud.org/
# profile::gitlab::runner::token: private
profile::gitlab::runner::buildkitd_dockerfile_frontend_enabled: false
profile::gitlab::runner::buildkitd_gateway_frontend_enabled: true
profile::gitlab::runner::buildkitd_allowed_gateway_sources:
  - 'docker-registry.wikimedia.org/repos/releng/blubber/buildkit'

# VRTS
profile::vrts::daemon: true
profile::vrts::local_database: true
profile::vrts::database_host: localhost
profile::vrts::database_name: vrts
profile::vrts::database_pass: StrongPass123!
profile::vrts::database_user: vrts
profile::vrts::exim_database_name: exim
profile::vrts::exim_database_pass: StrongPass123!
profile::vrts::exim_database_user: vrts
profile::vrts::download_url: 'https://download.znuny.org'
profile::vrts::http_proxy: ''
profile::vrts::https_proxy: ''

# Phorge
profile::phorge::server_name: 'phorge.wmcloud.org'
profile::phorge::install_path_arcanist: '/srv/arcanist'
profile::phorge::git_origin_arcanist: 'https://we.phorge.it/source/arcanist.git'
profile::phorge::install_path_phorge: '/srv/phorge'
profile::phorge::git_origin_phorge: 'https://we.phorge.it/source/phorge.git'
profile::phorge::repo_path: '/srv/repo'

# throttling with nftables
profile::firewall::nftables_throttling::ensure: absent
# allow 300 requests per 60 seconds, ban clients above for 300 seconds
profile::firewall::nftables_throttling::throttle_requests: 300
profile::firewall::nftables_throttling::throttle_duration: 300
profile::firewall::nftables_throttling::port: 443

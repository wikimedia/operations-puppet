# in this file all _cert parameteres are passed to the file function
# and all _key paramtetes are passed to the secret function
profile::pki::multirootca::private_cert_base: 'pki/wmcs-intermediates'
profile::pki::multirootca::public_cert_base: 'profile/pki/wmcs-intermediates'
profile::pki::multirootca::prometheus_nodes: "%{alias('prometheus_nodes')}"
profile::pki::multirootca::enable_monitoring: false
profile::pki::multirootca::enable_k8s_vhost: true
profile::pki::multirootca::intermediates:
  debmonitor:
    ocsp_port: 10001
  discovery:
    ocsp_port: 10002
    default_usages:
      - 'digital signature'
      - 'key encipherment'
      - 'server auth'
    profiles:
      # ocsp and server is from profile::pki::multirootca::default_profiles.
      ocsp:
        usages:
          - 'digital signature'
          - 'ocsp signing'
        expiry: '43800h'
      server: {}
  kafka:
    ocsp_port: 10003
    default_usages:
      - 'digital signature'
      - 'key encipherment'
      - 'server auth'
      - 'client auth'
    profiles:
      ocsp:
        usages:
          - 'digital signature'
          - 'ocsp signing'
        expiry: '43800h'
      kafka_11:
        # Kafka 1.1 supports dynamic reload of the TLS keystore (that contains
        # the certificate that the broker uses) but in order to work it needs
        # a different filepath/password
        # (see https://issues.apache.org/jira/browse/KAFKA-7429 and T299409).
        # For the moment the only way to reload the keystore is via a rolling
        # restart of the brokers, that we don't want to do every month or so.
        # Once we migrate to Kafka 2.x we'll be able to remove this constraint.
        expiry: '8760h'
  cloud_wmnet_ca:
    ocsp_port: 10004
    default_usages:
      - 'digital signature'
      - 'key encipherment'
      - 'server auth'
  etcd:
    ocsp_port: 10005
    default_usages:
      - 'digital signature'
      - 'key encipherment'
      - 'server auth'
      - 'client auth'
  WMF_test_intermediate_ca:
    ocsp_port: 20001
  deployment-prep_eqiad1_wikimedia_cloud:
    ocsp_port: 20002
profile::pki::multirootca::root_ca_cn: 'WMF_TEST_CA'
profile::pki::multirootca::root_ca_cert: 'profile/pki/ROOT/WMF_TEST_CA.pem'
profile::pki::multirootca::root_ocsp_cert: 'profile/pki/ROOT/WMF_TEST_CA_ocsp_signing_cert.pem'
profile::pki::multirootca::root_ocsp_key: 'pki/ROOT/WMF_TEST_CA_ocsp_signing_cert.pem'
profile::pki::multirootca::root_ocsp_port: 10000
# This is the vhost used for the ocsp/crl responder
profile::pki::multirootca::vhost: 'pki-intermediate.pki.eqiad1.wikimedia.cloud'
profile::pki::multirootca::db_driver: 'mysql'
profile::pki::multirootca::db_user: 'pki'
profile::pki::multirootca::db_host: 'pki-db.pki.eqiad1.wikimedia.cloud'
profile::pki::multirootca::db_name: 'pki'
profile::pki::multirootca::enable_client_auth: true
profile::pki::multirootca::client_ca_source: 'puppet:///modules/profile/pki/cloud/client_auth_CA.pem'
profile::pki::multirootca::default_expiry: '672h'
profile::pki::multirootca::default_usages:
  - 'signing'
  - 'key encipherment'
  - 'client auth'
profile::pki::multirootca::default_nets:
  - 127.0.0.1/32
profile::pki::multirootca::default_profiles:
  ocsp:
    usages:
      - 'digital signature'
      - 'ocsp signing'
    expiry: '43800h'
  server:
    usages:
      - 'digital signature'
      - 'key encipherment'
      - 'server auth'
    expiry: '672h'
profile::pki::multirootca::maintenance_jobs: false

---
profile::wmcs::cloudlb::haproxy::acme_chief_cert_name: "openstack-codfw1dev"

profile::wmcs::cloudlb::haproxy::config:
  designate-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 29001
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: 9001
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: HEAD
      path: /

  # Note that because keystone admin uses a weird, extremely-high-number
  #  port by default, we need to use a non-standard port for its
  #  tls port as well: 25357 rather than the more expected 225357
  keystone-api-admin:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 25357
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::keystone::admin_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /
    http:
      timeout_server: "600s"

  # Even in codfw1dev this api needs to be open to the internet so that
  #  browsers can redirect to keystone for OIDC
  keystone-api-public:
    type: http
    firewall:
      open_to_internet: true
    frontends:
      - port: 5000
      - port: 25000
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::keystone::public_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  glance-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 29292
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::glance::api_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  cinder-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 28776
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::cinder::api_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  trove-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 28779
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::base::trove::api_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  radosgw-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 443
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::base::radosgw::api_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /
    http:
      require_host: object.codfw1dev.wikimediacloud.org
      set_headers:
        # We block loading of all content not embedded on the page by default,
        # and then allow some safe content types (fonts, images, stylesheets) from
        # the current domain. This is not intended as an user-facing webhost.
        Content-Security-Policy: "default-src; font-src 'self'; img-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"

  barbican-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 29311
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::barbican::bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  heat-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 28004
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::heat::api_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  magnum-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 29511
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::magnum::api_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  cloudformation-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 28000
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::heat::cfn_api_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  neutron-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 29696
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::neutron::bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  nova-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 28774
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::nova::osapi_compute_listen_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: HEAD
      path: /

  placement-api:
    type: http
    firewall:
      open_to_internet: "%{alias('profile::openstack::codfw1dev::public_apis')}"
    frontends:
      - port: 28778
        acme_chief_cert_name: "%{lookup('profile::wmcs::cloudlb::haproxy::acme_chief_cert_name')}"
    backend:
      port: "%{alias('profile::openstack::codfw1dev::placement::api_bind_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /

  nova-metadata-api:
    type: http
    firewall:
      # open to internal networks only
      open_to_internet: false
    frontends:
      - port: 8775
    backend:
      port: "%{alias('profile::openstack::codfw1dev::nova::metadata_listen_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
    healthcheck:
      method: GET
      path: /healthcheck

  mysql:
    type: tcp
    firewall:
      # open to internal cloud-private networks only
      open_to_cloud_private: true
    frontends:
      - port: 3306
    backend:
      port: "%{alias('profile::openstack::codfw1dev::galera::listen_port')}"
      servers: "%{alias('profile::openstack::codfw1dev::openstack_control_nodes')}"
      primary_host: "%{lookup('profile::openstack::codfw1dev::galera::primary_host')}"
    healthcheck:
      options:
        - option httpchk
        - http-check connect
        - http-check send meth GET uri /
        - http-check expect status 200
